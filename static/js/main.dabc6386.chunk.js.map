{"version":3,"sources":["components/IsolatedStyles.tsx","styles/constants.ts","i18n/i18n.ts","components/QrCode.tsx","utils/formatters.ts","components/HtmlEmailLink.tsx","components/SignatureTable.tsx","dom/waitForImageLoad.ts","utils/qrCode.ts","components/RenderedSignature.tsx","dom/toast.ts","hooks/useHtmlId.ts","pages/SignatureCreatorForm.tsx","dom/copyHtml.ts","utils/dom.ts","utils/utils.ts","pages/Instructions.tsx","utils/react.ts","Routes.tsx","App.tsx","index.tsx","utils/path.ts"],"names":["IsolatedStyles","children","rest","ref","useRef","useState","shadowRoot","setShadowRoot","useEffect","current","attachShadow","mode","createPortal","colors","fonts","langs","Object","keys","_i18n","i18n","localeAgnostic","QrCode","alt","size","src","height","width","style","verticalAlign","borderRadius","display","toAssetPath","filename","process","escapeHtml","str","assign","document","createElement","textContent","innerHTML","safelyWrapCjk","split","map","x","i","join","HtmlEmailLink","href","target","rel","color","fontSize","fontFamily","lineHeight","whiteSpace","SignatureTable","qrCodeSize","qrCodeDataUri","tr","translations","props","currentLang","lang","altLang","find","direction","borderCollapse","cellPadding","cellSpacing","padding","qrCodeAlt","textAlign","dangerouslySetInnerHTML","__html","pipe","followUs","snarkdown","borderRight","valign","textTransform","fontWeight","logoFull","name","filter","Boolean","letterSpacing","jobTitle","phone","number","usedForWechat","wechat","colorScheme","email","border","maxWidth","waitForImageLoad","img","Promise","res","rej","onload","onerror","roundRect","ctx","y","w","h","r","beginPath","moveTo","arcTo","closePath","customRoundRect","outerSize","innerSize","paintQrToCanvas","canvas","url","QRCode","toCanvas","margin","err","getQrCode","a","logo","cssText","getContext","innerLogoSize","fillStyle","fill","strokeStyle","lineWidth","stroke","hidden","body","appendChild","aspectRatio","offset","drawImage","console","error","remove","toDataURL","initialLoadingState","loading","undefined","BareLink","replace","RenderedSignature","data","setData","info","all","qrCodeUrl","logoCropped","then","companyName","officeAddress","websiteUrl","privacyNotice","toastStyleInfo","success","icon","failure","none","toast","options","msg","div","classList","add","opacity","transition","setTimeout","inc","generateHtmlId","prefix","init","en","zh","addresses","value","defaultValues","JSON","parse","localStorage","getItem","SignatureCreatorForm","useForm","register","handleSubmit","getValues","formRef","updateValidationMessages","useCallback","querySelectorAll","input","validationEl","nextElementSibling","contains","validationMessage","validity","valueMissing","patternMismatch","dataset","patternMsg","addressDatalistId","useHtmlId","changeHandler","form","setItem","stringify","_values","values","savedOfficeAddress","blankOutOfficeAddress","e","currentTarget","className","onInput","required","type","defaultChecked","pattern","onClick","onFocus","onBlur","list","id","address","idx","el","selection","getSelection","range","createRange","empty","addRange","selectNode","execCommand","copyHtml","querySelector","renderAnchors","defaultVal","slugs","Proxy","create","get","key","heading","slug","toLowerCase","regex","trim","Instructions","callback","html","setHtml","history","useHistory","fetch","text","link","getAttribute","startsWith","setAttribute","prependPublicUrlToRelativeLinks","addEventListener","nodeName","preventDefault","window","location","origin","open","push","slice","length","hash","scrollIntoView","handleLinks","matchedEl","decodeURIComponent","CSS","escape","scrollHashIntoView","parentEl","observer","MutationObserver","m","disconnect","observe","childList","Routes","exact","path","App","basename","activeClassName","to","segments","flat","joinPath","ts","Date","Number","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.dabc6386.chunk.js","sourcesContent":["import { FC, HTMLProps, useEffect, useRef, useState } from 'react'\nimport { createPortal } from 'react-dom'\n\nexport const IsolatedStyles: FC<HTMLProps<HTMLDivElement>> = ({\n\tchildren,\n\t...rest\n}) => {\n\tconst ref = useRef<HTMLDivElement>(null)\n\n\tconst [shadowRoot, setShadowRoot] = useState<null | ShadowRoot>(null)\n\n\tuseEffect(() => {\n\t\tif (!shadowRoot && ref.current) {\n\t\t\tconst shadowRoot = ref.current.attachShadow({ mode: 'open' })\n\t\t\tsetShadowRoot(shadowRoot)\n\t\t}\n\t}, [shadowRoot])\n\n\treturn (\n\t\t<div {...rest} ref={ref}>\n\t\t\t{shadowRoot &&\n\t\t\t\tcreatePortal(children, shadowRoot as unknown as Element)}\n\t\t</div>\n\t)\n}\n","export const colors = {\n\tbrand: '#e06534',\n\tbigText: '#646464',\n\tsmallText: '#646464',\n\tlink: '#646464',\n}\n\nexport const fonts = {\n\tbody: '\"Arial\", sans-serif',\n\tcjk: '黑体, 黑體, SimHei',\n}\n","import _i18n from './_i18n.json'\n\nexport type Lang = Exclude<keyof typeof _i18n, '*'>\n\nexport const langs = Object.keys(_i18n) as Lang[]\n\nexport type Translations = typeof _i18n['en']\n\nexport const i18n: Record<Lang, Translations> = _i18n\nexport const localeAgnostic = _i18n['*']\n","import { FC } from 'react'\n\ntype Props = {\n\talt: string\n\tsize: number\n\tsrc: string\n}\n\nexport const QrCode: FC<Props> = ({ alt, size, src }) => (\n\t<img\n\t\talt={alt}\n\t\tsrc={src}\n\t\theight={size}\n\t\twidth={size}\n\t\tstyle={{\n\t\t\twidth: `${size}px`,\n\t\t\tverticalAlign: 'initial',\n\t\t\tborderRadius: 0,\n\t\t\tdisplay: 'block',\n\t\t\theight: `${size}px`,\n\t\t}}\n\t/>\n)\n","import { regex } from 'fancy-regex'\nimport { fonts } from '../styles/constants'\n\nexport const slugify = (str: string) =>\n\tstr\n\t\t.toLowerCase()\n\t\t.replace(\n\t\t\tregex('gu')`[\n\t\t\t\t^\n\t\t\t\t\\p{Letter}\n\t\t\t\t\\p{Mark}\n\t\t\t\t\\p{Number}\n\t\t\t]+`,\n\t\t\t' ',\n\t\t)\n\t\t.trim()\n\t\t.replace(/\\s+/g, '-')\n\nexport const filenameify = (date: Date) =>\n\tdate.toISOString().replace(/:/g, '_').slice(0, 19) + 'Z'\n\nexport const wrapEmailHtml = (html: string) => `<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta http-equiv=Content-Type content=\"text/html; charset=utf-8\">\n        <title>Email signature</title>\n    </head>\n    <body>\n\t\t${html}\n    </body>\n</html>`\n\nexport const toAssetPath = (filename: string) =>\n\t`${process.env.PUBLIC_URL}/assets/${filename}`\n\nexport const toContentPath = (filename: string) =>\n\t`${process.env.PUBLIC_URL}/content/${filename}`\n\nconst escapeHtml = (str: string) =>\n\tObject.assign(document.createElement('div'), { textContent: str }).innerHTML\n\nexport const safelyWrapCjk = (str: string) =>\n\tstr\n\t\t.split(/([\\p{Script=Han}\\uff01-\\uff5e。、·《》〈〉]+)/u)\n\t\t.map((x, i) =>\n\t\t\ti % 2\n\t\t\t\t? `<span style='font-family: ${fonts.cjk}'>${escapeHtml(\n\t\t\t\t\t\tx,\n\t\t\t\t  )}</span>`\n\t\t\t\t: escapeHtml(x),\n\t\t)\n\t\t.join('')\n","import { FC } from 'react'\nimport { colors, fonts } from '../styles/constants'\n\ntype Props = {\n\thref: string\n}\n\nexport const HtmlEmailLink: FC<Props> = ({ href, children }) => {\n\treturn (\n\t\t<a\n\t\t\ttarget='_blank'\n\t\t\trel='noreferrer'\n\t\t\tstyle={{\n\t\t\t\tcolor: colors.link,\n\t\t\t\tfontSize: '12px',\n\t\t\t\tfontFamily: fonts.body,\n\t\t\t}}\n\t\t\thref={href}\n\t\t>\n\t\t\t<span\n\t\t\t\tstyle={{\n\t\t\t\t\tlineHeight: '1.2',\n\t\t\t\t\tfontFamily: fonts.body,\n\t\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\t\tfontSize: '12px',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</span>\n\t\t</a>\n\t)\n}\n","import { FC } from 'react'\nimport { colors, fonts } from '../styles/constants'\nimport { SignatureInfo } from '../types/signatureInfo'\nimport snarkdown from 'snarkdown'\nimport { QrCode } from './QrCode'\nimport { Translations, langs } from '../i18n/i18n'\nimport { safelyWrapCjk, toAssetPath } from '../utils/formatters'\nimport { pipe } from 'fp-ts/lib/function'\nimport { HtmlEmailLink } from './HtmlEmailLink'\n\ntype Props = {\n  translations: Translations\n  qrCodeSize: number\n  qrCodeDataUri: string\n} & SignatureInfo\n\nexport const SignatureTable: FC<Props> = ({ qrCodeSize, qrCodeDataUri, translations: tr, ...props }) => {\n  const currentLang = props.lang\n  const altLang = langs.find((x) => x !== currentLang)!\n\n  return (\n    <table style={{ direction: 'ltr', borderCollapse: 'collapse' }}>\n      <tbody>\n        <tr>\n          <td>\n            <table\n              cellPadding={0}\n              cellSpacing={0}\n              style={{\n                borderCollapse: 'collapse',\n                fontFamily: fonts.body,\n                lineHeight: '1.15',\n                color: '#000',\n              }}\n            >\n              <tbody>\n                <tr>\n                  <td\n                    style={{\n                      verticalAlign: 'top',\n                      padding: '0.01px 14px 0.01px 0.01px',\n                    }}\n                  >\n                    <table\n                      cellPadding={0}\n                      cellSpacing={0}\n                      style={{\n                        borderCollapse: 'collapse',\n                        width: qrCodeSize,\n                      }}\n                    >\n                      <tbody>\n                        <tr>\n                          <td\n                            style={{\n                              padding: '0.01px',\n                            }}\n                          >\n                            <QrCode alt={tr.qrCodeAlt} src={qrCodeDataUri} size={qrCodeSize} />\n                          </td>\n                        </tr>\n                        <tr>\n                          <td\n                            style={{\n                              borderCollapse: 'collapse',\n                              fontFamily: fonts.body,\n                              lineHeight: '1.15',\n                              color: colors.brand,\n                              padding: '6px 0.01px 0.01px 0.01px',\n                              fontSize: '15.6px',\n                              textAlign: 'center',\n                            }}\n                            dangerouslySetInnerHTML={{\n                              __html: pipe(tr.followUs, snarkdown, safelyWrapCjk)\n                            }}\n                          />\n                        </tr>\n                      </tbody>\n                    </table>\n                  </td>\n                  <td\n                    height={1}\n                    width={0}\n                    style={{\n                      width: '0px',\n                      padding: '0.01px',\n                      borderRight: `2px solid ${colors.brand}`,\n                      height: '1px',\n                      fontSize: '1pt',\n                    }}\n                  >\n                    &nbsp;\n                  </td>\n                  <td\n                    style={{\n                      padding: '0.01px 14px 0.01px 14px',\n                      verticalAlign: 'top',\n                    }}\n                    valign='top'\n                  >\n                    <table\n                      cellPadding={0}\n                      cellSpacing={0}\n                      style={{\n                        borderCollapse: 'collapse',\n                      }}\n                    >\n                      <tbody>\n                        <tr>\n                          <td\n                            style={{\n                              lineHeight: '1.2',\n                              padding: '0.01px 0.01px 10px 0.01px',\n                            }}\n                          >\n                            <span\n                              style={{\n                                fontFamily: fonts.body,\n                                textTransform: 'initial',\n                                fontWeight: 'bold',\n                              }}\n                            >\n                              <span\n                                style={{\n                                  fontSize: '15.6px',\n                                }}\n                              >\n                                <img width={150} src={toAssetPath(tr.logoFull)} alt='' />\n                              </span>\n                            </span>\n                          </td>\n                        </tr>\n\n                        <tr>\n                          <td\n                            style={{\n                              lineHeight: '1.2',\n                              padding: '0.01px 0.01px 12px 0.01px',\n                            }}\n                          >\n                            <span\n                              style={{\n                                fontFamily: fonts.body,\n                                textTransform: 'initial',\n                                fontWeight: 'bold',\n                              }}\n                            >\n                              <span\n                                style={{\n                                  color: colors.bigText,\n                                  fontSize: '15.6px',\n                                }}\n                                dangerouslySetInnerHTML={{\n                                  __html: safelyWrapCjk([props.name[currentLang], props.name[altLang]].filter(Boolean).join(' '))\n                                }}\n                              />\n                            </span>\n                            <br />\n                            <span\n                              style={{\n                                fontSize: '13.2px',\n                                letterSpacing: '0px',\n                                fontFamily: fonts.body,\n                                textTransform: 'initial',\n                                fontWeight: 'bold',\n                                color: colors.bigText,\n                              }}\n                              dangerouslySetInnerHTML={{\n                                __html: safelyWrapCjk(props.jobTitle)\n                              }}\n                            />\n                          </td>\n                        </tr>\n                        <tr>\n                          <td\n                            style={{\n                              padding: '0.01px',\n                              lineHeight: 0,\n                            }}\n                          >\n                            <table\n                              cellPadding={0}\n                              cellSpacing={0}\n                              style={{\n                                borderCollapse: 'collapse',\n                              }}\n                            >\n                              <tbody>\n                                {props.phone.number && (\n                                  <tr>\n                                    <td\n                                      style={{\n                                        padding: '0.01px',\n                                      }}\n                                    >\n                                      <table\n                                        cellPadding={0}\n                                        cellSpacing={0}\n                                        style={{\n                                          borderCollapse: 'collapse',\n                                        }}\n                                      >\n                                        <tbody>\n                                          <tr>\n                                            <td\n                                              style={{\n                                                lineHeight: '0%',\n                                                padding: '0.01px 0.01px 6px 0.01px',\n                                              }}\n                                            >\n                                              <table\n                                                cellPadding={0}\n                                                cellSpacing={0}\n                                                style={{\n                                                  borderCollapse: 'collapse',\n                                                  lineHeight: '14px',\n                                                  fontSize: '12px',\n                                                  fontFamily: fonts.body,\n                                                }}\n                                              >\n                                                <tbody>\n                                                  <tr>\n                                                    <td\n                                                      style={{\n                                                        padding: '0.01px',\n                                                        fontFamily: fonts.body,\n                                                        fontSize: '12px',\n                                                        color: colors.smallText,\n                                                      }}\n                                                    >\n                                                      <HtmlEmailLink\n                                                        href={`tel:${props.phone.number}`}\n\n                                                      >\n                                                        {props.phone.number}\n                                                      </HtmlEmailLink>\n                                                      {props.phone.usedForWechat ? ` ${tr.wechat}` : null}\n                                                    </td>\n                                                  </tr>\n                                                </tbody>\n                                              </table>\n                                            </td>\n                                            <td\n                                              style={{\n                                                lineHeight: '0%',\n                                                padding: '0.01px 0.01px 6px 0.01px',\n                                              }}\n                                            ></td>\n                                          </tr>\n                                        </tbody>\n                                      </table>\n                                    </td>\n                                  </tr>\n                                )}\n                                <tr>\n                                  <td\n                                    style={{\n                                      padding: '0.01px',\n                                    }}\n                                  >\n                                    <table\n                                      cellPadding={0}\n                                      cellSpacing={0}\n                                      style={{\n                                        borderCollapse: 'collapse',\n                                      }}\n                                    >\n                                      <tbody>\n                                        <tr>\n                                          <td\n                                            style={{\n                                              lineHeight: '0%',\n                                              padding: '0.01px 0.01px 6px 0.01px',\n                                            }}\n                                          >\n                                            <table\n                                              cellPadding={0}\n                                              cellSpacing={0}\n                                              style={{\n                                                borderCollapse: 'collapse',\n                                                lineHeight: '14px',\n                                                fontSize: '12px',\n                                                fontFamily: fonts.body,\n                                              }}\n                                            >\n                                              <tbody>\n                                                <tr>\n                                                  <td\n                                                    style={{\n                                                      padding: '0.01px',\n                                                      colorScheme: 'light only',\n                                                      fontFamily: fonts.body,\n                                                      fontSize: '12px',\n                                                    }}\n                                                  >\n                                                    <HtmlEmailLink href={`mailto:${props.email}`}>\n                                                      {props.email}\n                                                    </HtmlEmailLink>\n                                                  </td>\n                                                </tr>\n                                              </tbody>\n                                            </table>\n                                          </td>\n                                        </tr>\n                                      </tbody>\n                                    </table>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n            <table\n              cellPadding={0}\n              cellSpacing={0}\n              /* @ts-ignore */\n              border={0}\n              style={{ maxWidth: '600px', width: '100%' }}\n            >\n              <tbody>\n                <tr>\n                  <td style={{ lineHeight: 0 }} />\n                </tr>\n              </tbody>\n            </table>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  )\n}\n","export const waitForImageLoad = (img: HTMLImageElement) =>\n\tnew Promise((res, rej) => {\n\t\timg.onload = res\n\t\timg.onerror = rej\n\t})\n","import QRCode from 'qrcode'\nimport { waitForImageLoad } from '../dom/waitForImageLoad'\nimport { colors } from '../styles/constants'\n\ntype Rect = [x: number, y: number, width: number, height: number]\n\n// https://stackoverflow.com/a/7838871\n\nconst roundRect = (\n\tctx: CanvasRenderingContext2D,\n\tx: number,\n\ty: number,\n\tw: number,\n\th: number,\n\tr: number,\n) => {\n\tif (w < 2 * r) r = w / 2\n\tif (h < 2 * r) r = h / 2\n\n\tctx.beginPath()\n\tctx.moveTo(x + r, y)\n\tctx.arcTo(x + w, y, x + w, y + h, r)\n\tctx.arcTo(x + w, y + h, x, y + h, r)\n\tctx.arcTo(x, y + h, x, y, r)\n\tctx.arcTo(x, y, x + w, y, r)\n\tctx.closePath()\n}\n\nconst customRoundRect = (\n\tctx: CanvasRenderingContext2D,\n\touterSize: number,\n\tinnerSize: number,\n) => {\n\tconst rect: Rect = [\n\t\touterSize / 2 - innerSize / 2,\n\t\touterSize / 2 - innerSize / 2,\n\t\tinnerSize,\n\t\tinnerSize,\n\t]\n\n\troundRect(ctx, ...rect, innerSize / 8)\n}\n\ntype QrCodeInit = {\n\tsize: number\n\turl: string\n\tlogo: string\n}\n\nconst paintQrToCanvas = (\n\tcanvas: HTMLCanvasElement,\n\turl: string,\n\tsize: number,\n) =>\n\tnew Promise<void>((res, rej) => {\n\t\tQRCode.toCanvas(canvas, url, { margin: 2, width: size }, (err) => {\n\t\t\tif (err) {\n\t\t\t\trej(err)\n\t\t\t} else {\n\t\t\t\tres()\n\t\t\t}\n\t\t})\n\t})\n\nexport const getQrCode = async ({ size, url, logo }: QrCodeInit) => {\n\tconst canvas = document.createElement('canvas')\n\n\tcanvas.width = size\n\tcanvas.height = size\n\n\tcanvas.style.cssText = `width: ${size}px; height: ${size}px`\n\n\tawait paintQrToCanvas(canvas, url, size)\n\n\tconst ctx = canvas.getContext('2d')!\n\n\tconst qrCodeSize = size\n\tconst outerLogoSize = size / 3.5\n\tconst innerLogoSize = size / 4\n\n\tcustomRoundRect(ctx, qrCodeSize, outerLogoSize)\n\tctx.fillStyle = '#ffffff'\n\tctx.fill()\n\n\tcustomRoundRect(ctx, qrCodeSize, innerLogoSize)\n\tctx.strokeStyle = colors.brand\n\tctx.lineWidth = 0.5\n\tctx.stroke()\n\n\tconst img = document.createElement('img')\n\timg.hidden = true\n\tdocument.body.appendChild(img)\n\timg.src = logo\n\n\ttry {\n\t\tawait waitForImageLoad(img)\n\n\t\tconst aspectRatio = img.width / img.height\n\n\t\tconst offset = qrCodeSize / 2 - innerLogoSize / 2\n\n\t\tctx.drawImage(\n\t\t\timg,\n\t\t\toffset + aspectRatio,\n\t\t\toffset,\n\t\t\tinnerLogoSize * aspectRatio,\n\t\t\tinnerLogoSize,\n\t\t)\n\t} catch (e) {\n\t\tconsole.error(e)\n\t}\n\n\timg.remove()\n\n\treturn canvas.toDataURL()\n}\n","import { FC, Fragment, useEffect, useState } from 'react'\nimport { colors, fonts } from '../styles/constants'\nimport { SignatureInfo } from '../types/signatureInfo'\nimport snarkdown from 'snarkdown'\nimport { i18n, localeAgnostic } from '../i18n/i18n'\nimport { SignatureTable } from './SignatureTable'\nimport { getQrCode } from '../utils/qrCode'\nimport { toAssetPath, safelyWrapCjk } from '../utils/formatters'\nimport { waitForImageLoad } from '../dom/waitForImageLoad'\nimport { pipe } from 'fp-ts/lib/function'\nimport { HtmlEmailLink } from './HtmlEmailLink'\n\ntype LoadingState =\n\t| {\n\t\t\tloading: false\n\t\t\tqrCodeDataUri: string\n\t  }\n\t| {\n\t\t\tloading: true\n\t\t\tqrCodeDataUri?: undefined\n\t  }\n\nconst initialLoadingState = {\n\tloading: true,\n\tqrCodeDataUri: undefined,\n} as LoadingState\n\nconst BareLink: FC<{ href: string }> = ({ href }) => (\n\t<HtmlEmailLink href={href}>\n\t\t{href.replace(/^https?:\\/\\//, '')}\n\t</HtmlEmailLink>\n)\n\nexport const RenderedSignature: FC<SignatureInfo & { qrCodeSize: number }> = (\n\tprops,\n) => {\n\tconst [data, setData] = useState(initialLoadingState)\n\n\tconst currentLang = props.lang\n\n\tconst tr = i18n[currentLang]\n\n\tuseEffect(() => {\n\t\tsetData(initialLoadingState)\n\t\tconsole.info('Loading QR code...')\n\n\t\tconst img = document.createElement('img')\n\t\timg.src = toAssetPath(tr.logoFull)\n\n\t\tPromise.all([\n\t\t\tgetQrCode({\n\t\t\t\tsize: props.qrCodeSize,\n\t\t\t\turl: tr.qrCodeUrl,\n\t\t\t\tlogo: toAssetPath(tr.logoCropped),\n\t\t\t}),\n\t\t\twaitForImageLoad(img),\n\t\t]).then(async ([qrCodeDataUri]) => {\n\t\t\tsetData({\n\t\t\t\tloading: false,\n\t\t\t\tqrCodeDataUri,\n\t\t\t})\n\t\t})\n\t}, [props.qrCodeSize, tr.logoCropped, tr.qrCodeUrl, tr.logoFull])\n\n\treturn data.loading ? (\n\t\t<>Loading...</>\n\t) : (\n\t\t<div style={{ fontFamily: fonts.body, color: colors.smallText }}>\n\t\t\t<div>\n\t\t\t\t<SignatureTable\n\t\t\t\t\t{...{\n\t\t\t\t\t\t...props,\n\t\t\t\t\t\tqrCodeSize: props.qrCodeSize,\n\t\t\t\t\t\tqrCodeDataUri: data.qrCodeDataUri,\n\t\t\t\t\t}}\n\t\t\t\t\ttranslations={tr}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<p\n\t\t\t\tstyle={{\n\t\t\t\t\tfontFamily: fonts.body,\n\t\t\t\t\tlineHeight: 1.6,\n\t\t\t\t\tmargin: '12px 0.01px 0.01px 0.01px',\n\t\t\t\t\tcolor: colors.smallText,\n\t\t\t\t\tfontSize: 12,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<span\n\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t__html: safelyWrapCjk(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tlocaleAgnostic.companyName,\n\t\t\t\t\t\t\t\tprops.officeAddress,\n\t\t\t\t\t\t\t].join(' | '),\n\t\t\t\t\t\t),\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t{' | '}\n\t\t\t\t<BareLink href={localeAgnostic.websiteUrl} />,\n\t\t\t</p>\n\t\t\t<p\n\t\t\t\tstyle={{\n\t\t\t\t\tfontFamily: fonts.body,\n\t\t\t\t\tlineHeight: 1.6,\n\t\t\t\t\tmargin: '12px 0.01px 0.01px 0.01px',\n\t\t\t\t\tcolor: colors.smallText,\n\t\t\t\t\tfontSize: 12,\n\t\t\t\t}}\n\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t__html: pipe(tr.privacyNotice, snarkdown, safelyWrapCjk),\n\t\t\t\t}}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n","type ToastStyle = 'success' | 'failure' | 'none'\n\ntype ToastOptions = {\n\tstyle: ToastStyle\n}\n\nconst toastStyleInfo: Record<ToastStyle, { icon: string }> = {\n\tsuccess: { icon: '✅' },\n\tfailure: { icon: '❌' },\n\tnone: { icon: '' },\n}\n\nexport const toast =\n\t(options: ToastOptions = { style: 'none' }) =>\n\t(msg: string) => {\n\t\tconst div = document.createElement('div')\n\t\tdiv.classList.add('toast')\n\t\tdiv.style.opacity = '0'\n\t\tdiv.style.transition = 'opacity 0.6s'\n\n\t\tdiv.textContent = [toastStyleInfo[options.style].icon, msg]\n\t\t\t.filter(Boolean)\n\t\t\t.join(' ')\n\n\t\tdocument.body.appendChild(div)\n\n\t\tsetTimeout(() => {\n\t\t\tdiv.style.opacity = '1'\n\t\t}, 10)\n\n\t\tsetTimeout(() => {\n\t\t\tdiv.style.transition = 'opacity 1s'\n\t\t}, 200)\n\n\t\tsetTimeout(() => {\n\t\t\tdiv.style.opacity = '0'\n\t\t}, 1200)\n\n\t\tsetTimeout(() => {\n\t\t\tdiv.remove()\n\t\t}, 2000)\n\t}\n","import { useState } from 'react'\n\nlet inc = 0\n\nconst generateHtmlId = (prefix = 'id') => `${prefix}-${++inc}`\n\nexport const useHtmlId = (prefix = 'id') => {\n\tconst [htmlId /* , setHtmlId */] = useState(generateHtmlId(prefix))\n\n\treturn htmlId\n}\n","import React, { FC, useCallback, useEffect, useRef } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { IsolatedStyles } from '../components/IsolatedStyles'\nimport { RenderedSignature } from '../components/RenderedSignature'\nimport { copyHtml } from '../dom/copyHtml'\nimport { useHtmlId } from '../hooks/useHtmlId'\nimport { localeAgnostic } from '../i18n/i18n'\nimport { SignatureInfo } from '../types/signatureInfo'\n\nconst qrCodeSize = 120\n\nconst init: SignatureInfo = {\n\tlang: 'en',\n\tname: {\n\t\ten: 'Jane Doe',\n\t\tzh: '杜娟',\n\t},\n\tjobTitle: 'Senior Data Wrangler',\n\tphone: { number: '+86 138 8888 8888', usedForWechat: false },\n\temail: 'jane.doe@clearlyloc.com',\n\tofficeAddress: localeAgnostic.addresses[0].value,\n}\n\nconst defaultValues: SignatureInfo =\n\tJSON.parse(localStorage.getItem('signatureCreator') ?? 'null') ?? init\n\nexport const SignatureCreatorForm: FC = () => {\n\tconst { register, handleSubmit, getValues } = useForm<SignatureInfo>({\n\t\tdefaultValues,\n\t})\n\n\tconst formRef = useRef<HTMLFormElement>(null)\n\n\tconst updateValidationMessages = useCallback(() => {\n\t\tfor (const input of formRef.current?.querySelectorAll('input') ?? []) {\n\t\t\tconst validationEl = input.nextElementSibling\n\n\t\t\tif (\n\t\t\t\tvalidationEl &&\n\t\t\t\tvalidationEl.classList.contains('validation-msg')\n\t\t\t) {\n\t\t\t\tlet { validationMessage, validity } = input\n\n\t\t\t\tif (!validity.valueMissing && validity.patternMismatch) {\n\t\t\t\t\tvalidationMessage =\n\t\t\t\t\t\tinput.dataset.patternMsg ?? validationMessage\n\t\t\t\t}\n\n\t\t\t\tvalidationEl.textContent = validationMessage\n\t\t\t}\n\t\t}\n\t}, [])\n\n\tconst addressDatalistId = useHtmlId(`address-list`)\n\n\tuseEffect(() => {\n\t\t// once on load\n\t\tupdateValidationMessages()\n\t}, [updateValidationMessages])\n\n\tconst changeHandler = useCallback(\n\t\t(form: SignatureInfo) => {\n\t\t\tlocalStorage.setItem('signatureCreator', JSON.stringify(form))\n\n\t\t\tupdateValidationMessages()\n\t\t},\n\t\t[updateValidationMessages],\n\t)\n\n\tconst _values = getValues()\n\n\tconst values = _values?.name ? _values : defaultValues\n\n\tconst savedOfficeAddress = useRef(values.officeAddress)\n\n\tconst blankOutOfficeAddress = (\n\t\te:\n\t\t\t| React.FocusEvent<HTMLInputElement>\n\t\t\t| React.MouseEvent<HTMLInputElement>,\n\t) => {\n\t\tsavedOfficeAddress.current = values.officeAddress\n\n\t\te.currentTarget.value = ''\n\t}\n\n\tconst revertOfficeAddress = (e: React.FocusEvent<HTMLInputElement>) => {\n\t\te.currentTarget.value =\n\t\t\te.currentTarget.value || savedOfficeAddress.current\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<h1>Email signature</h1>\n\n\t\t\t<div className='row'>\n\t\t\t\t<form\n\t\t\t\t\tclassName='col'\n\t\t\t\t\tref={formRef}\n\t\t\t\t\tonInput={handleSubmit(changeHandler)}\n\t\t\t\t>\n\t\t\t\t\t<div className='magic-flex'>\n\t\t\t\t\t\t<div className='spaced'>\n\t\t\t\t\t\t\t<fieldset>\n\t\t\t\t\t\t\t\t<legend>Template language</legend>\n\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\tEnglish\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\ttype='radio'\n\t\t\t\t\t\t\t\t\t\tname='lang'\n\t\t\t\t\t\t\t\t\t\tvalue='en'\n\t\t\t\t\t\t\t\t\t\tref={register}\n\t\t\t\t\t\t\t\t\t\tdefaultChecked\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</label>{' '}\n\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\tChinese\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\ttype='radio'\n\t\t\t\t\t\t\t\t\t\tname='lang'\n\t\t\t\t\t\t\t\t\t\tvalue='zh'\n\t\t\t\t\t\t\t\t\t\tref={register}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t<div className='validation-msg'></div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='spaced col-first'>\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\tEnglish name\n\t\t\t\t\t\t\t\t<input required name='name.en' ref={register} />\n\t\t\t\t\t\t\t\t<div className='validation-msg'></div>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='spaced col-last'>\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\tChinese name (optional)\n\t\t\t\t\t\t\t\t<input name='name.zh' ref={register} />\n\t\t\t\t\t\t\t\t<div className='validation-msg'></div>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='spaced'>\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\tJob title\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\tname='jobTitle'\n\t\t\t\t\t\t\t\t\tref={register}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='validation-msg'></div>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='spaced'>\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\tWork email\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\t\tref={register}\n\t\t\t\t\t\t\t\t\tpattern='.+@clearlyloc.com'\n\t\t\t\t\t\t\t\t\tdata-pattern-msg='Must end with @clearlyloc.com'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='validation-msg'></div>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='spaced'>\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\tPhone number (including country code)\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='tel'\n\t\t\t\t\t\t\t\t\tname='phone.number'\n\t\t\t\t\t\t\t\t\tref={register}\n\t\t\t\t\t\t\t\t\tpattern='\\+[\\d ]+'\n\t\t\t\t\t\t\t\t\tdata-pattern-msg='Must start with a country code in the format +XX (e.g. +86 for China) and contain only numbers and spaces'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='validation-msg'></div>\n\t\t\t\t\t\t\t</label>\n\n\t\t\t\t\t\t\t<label className='secondary-field'>\n\t\t\t\t\t\t\t\tUsed for WeChat?\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\tname='phone.usedForWechat'\n\t\t\t\t\t\t\t\t\tref={register}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='spaced'>\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\tOffice address\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tonClick={blankOutOfficeAddress}\n\t\t\t\t\t\t\t\t\tonFocus={blankOutOfficeAddress}\n\t\t\t\t\t\t\t\t\tonBlur={revertOfficeAddress}\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tname='officeAddress'\n\t\t\t\t\t\t\t\t\tref={register}\n\t\t\t\t\t\t\t\t\tlist={addressDatalistId}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='validation-msg'></div>\n\t\t\t\t\t\t\t</label>\n\n\t\t\t\t\t\t\t<datalist id={addressDatalistId}>\n\t\t\t\t\t\t\t\t{localeAgnostic.addresses.map(\n\t\t\t\t\t\t\t\t\t(address, idx) => (\n\t\t\t\t\t\t\t\t\t\t<option key={idx} value={address.value}>\n\t\t\t\t\t\t\t\t\t\t\t{address.name}\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</datalist>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\n\t\t\t\t<div className='col'>\n\t\t\t\t\t<div className='spaced'>\n\t\t\t\t\t\t<output>\n\t\t\t\t\t\t\t<IsolatedStyles id='rendered-signature-container'>\n\t\t\t\t\t\t\t\t<RenderedSignature\n\t\t\t\t\t\t\t\t\t{...{ ...values, qrCodeSize }}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</IsolatedStyles>\n\t\t\t\t\t\t</output>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\tcopyHtml(\n\t\t\t\t\t\t\t\tdocument\n\t\t\t\t\t\t\t\t\t.querySelector(\n\t\t\t\t\t\t\t\t\t\t'#rendered-signature-container',\n\t\t\t\t\t\t\t\t\t)!\n\t\t\t\t\t\t\t\t\t.shadowRoot?.querySelector('*')!,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclassName='button primary'\n\t\t\t\t\t\ttype='button'\n\t\t\t\t\t>\n\t\t\t\t\t\tCopy\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t)\n}\n","import { toast } from './toast'\n\nexport const copyHtml = (el: HTMLElement) => {\n\tconst selection = document.getSelection()\n\tconst range = document.createRange()\n\n\tselection?.empty()\n\tselection?.addRange(range)\n\n\trange.selectNode(el)\n\n\tconst succeeded = document.execCommand('copy')\n\n\tif (succeeded) {\n\t\ttoast({ style: 'success' })('Copied')\n\t} else {\n\t\ttoast({ style: 'failure' })('Failed to copy')\n\t}\n\n\tselection?.empty()\n}\n","import { useHistory } from 'react-router-dom'\nimport { pipe } from 'fp-ts/function'\nimport { slugify } from './formatters'\nimport { hashWithDefault } from './utils'\n\nexport const renderAnchors = (el: HTMLElement) => {\n\tconst slugs = hashWithDefault(0)\n\n\tfor (const heading of el.querySelectorAll(\n\t\t'h2, h3, h4, h5, h6, .anchored',\n\t)) {\n\t\tif (heading.textContent) {\n\t\t\tconst slug = slugify(heading.textContent) || 'heading'\n\n\t\t\tconst x = ++slugs[slug]\n\n\t\t\theading.id = [slug, x > 1 && x].filter(Boolean).join('-')\n\t\t\theading.classList.add('anchored')\n\t\t}\n\t}\n}\n\nexport const prependPublicUrlToRelativeLinks = (el: HTMLElement) => {\n\tfor (const link of el.querySelectorAll('a')) {\n\t\tconst href = link.getAttribute('href')\n\n\t\tif (href?.startsWith('/')) {\n\t\t\tlink.setAttribute('href', process.env.PUBLIC_URL + href)\n\t\t}\n\t}\n}\n\nexport const handleLinks = (\n\tel: HTMLElement,\n\thistory: ReturnType<typeof useHistory>,\n) => {\n\tel.addEventListener('click', (e) => {\n\t\tconst target = e.target as HTMLAnchorElement\n\t\tconst href = target.getAttribute('href')\n\n\t\tif (target.nodeName === 'A' && href) {\n\t\t\te.preventDefault()\n\n\t\t\tif (\n\t\t\t\thref.startsWith('http') &&\n\t\t\t\t!href.startsWith(window.location.origin)\n\t\t\t) {\n\t\t\t\twindow.open(href, '_blank', 'noopener noreferrer')\n\t\t\t} else {\n\t\t\t\thistory.push(href.slice(process.env.PUBLIC_URL.length))\n\t\t\t}\n\t\t} else if (target.classList.contains('anchored')) {\n\t\t\twindow.location.hash = target.id\n\t\t\ttarget.scrollIntoView(true)\n\t\t}\n\t})\n}\n\nexport const scrollHashIntoView = (el: HTMLElement) => {\n\tif (window.location.hash) {\n\t\tsetTimeout(() => {\n\t\t\tconst matchedEl = pipe(\n\t\t\t\twindow.location.hash.slice(1),\n\t\t\t\tdecodeURIComponent,\n\t\t\t\tCSS.escape,\n\t\t\t\t(id) => el.querySelector(`#${id}`),\n\t\t\t)\n\n\t\t\tmatchedEl?.scrollIntoView(true)\n\t\t\t// 100ms to counteract browser position retaining\n\t\t}, 100)\n\t}\n}\n\nexport const htmlToFragment = (html: string) => {\n\tconst temp = document.createElement('template')\n\ttemp.innerHTML = html\n\n\treturn temp.content\n}\n","export const hashWithDefault = <T>(defaultVal: T) =>\n\tnew Proxy(Object.create(null) as Record<string, T>, {\n\t\tget(target, key: string) {\n\t\t\treturn key in target ? target[key] : defaultVal\n\t\t},\n\t})\n","import { FC, useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport {\n\thandleLinks,\n\tprependPublicUrlToRelativeLinks,\n\trenderAnchors,\n\tscrollHashIntoView,\n} from '../utils/dom'\nimport { toContentPath } from '../utils/formatters'\nimport { onHtmlRender } from '../utils/react'\n\nexport const Instructions: FC = () => {\n\tconst [html, setHtml] = useState('')\n\n\tconst history = useHistory()\n\n\tuseEffect(() => {\n\t\tfetch(toContentPath('instructions.html')).then(async (res) => {\n\t\t\tconst html = await res.text()\n\n\t\t\tsetHtml(html)\n\t\t})\n\t}, [])\n\n\treturn (\n\t\t<div\n\t\t\tref={onHtmlRender((el) => {\n\t\t\t\t// setup\n\t\t\t\trenderAnchors(el)\n\t\t\t\tprependPublicUrlToRelativeLinks(el)\n\t\t\t\thandleLinks(el, history)\n\n\t\t\t\t// effects\n\t\t\t\tscrollHashIntoView(el)\n\t\t\t})}\n\t\t\tdangerouslySetInnerHTML={{ __html: html }}\n\t\t/>\n\t)\n}\n","export const onHtmlRender =\n\t(callback: (parentEl: HTMLElement) => void) =>\n\t(parentEl: HTMLElement | null) => {\n\t\tif (!parentEl) return\n\n\t\tconst observer = new MutationObserver((m) => {\n\t\t\tcallback(parentEl)\n\n\t\t\tobserver.disconnect()\n\t\t})\n\n\t\tobserver.observe(parentEl, { childList: true })\n\t}\n","import { FC } from 'react'\nimport { SignatureCreatorForm } from './pages/SignatureCreatorForm'\nimport { Switch, Route } from 'react-router-dom'\nimport { Instructions } from './pages/Instructions'\n\nexport const Routes: FC = () => {\n\treturn (\n\t\t<Switch>\n\t\t\t<Route exact path='/'>\n\t\t\t\t<SignatureCreatorForm />\n\t\t\t</Route>\n\t\t\t<Route path='/instructions'>\n\t\t\t\t<Instructions />\n\t\t\t</Route>\n\t\t</Switch>\n\t)\n}\n","import { FC, StrictMode } from 'react'\nimport { BrowserRouter as Router, NavLink } from 'react-router-dom'\nimport { Routes } from './Routes'\n\nexport const App: FC = () => {\n\treturn (\n\t\t<>\n\t\t\t<StrictMode>\n\t\t\t\t<Router basename={process.env.PUBLIC_URL}>\n\t\t\t\t\t<nav className='tabs'>\n\t\t\t\t\t\t<NavLink exact activeClassName='active' to='/'>\n\t\t\t\t\t\t\tEmail signature\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t<NavLink activeClassName='active' to='/instructions'>\n\t\t\t\t\t\t\tInstructions\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t</nav>\n\t\t\t\t\t<main className='container'>\n\t\t\t\t\t\t<Routes />\n\t\t\t\t\t</main>\n\t\t\t\t</Router>\n\t\t\t</StrictMode>\n\t\t</>\n\t)\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'chota/dist/chota.css' // can't use .min.css due to CRA transpiling bug\nimport './styles/index.css'\nimport { App } from './App'\nimport { joinPath } from './utils/path'\n\nfetch(joinPath('build-timestamp.txt')).then(async (res) => {\n\tconst ts = await res.text()\n\n\tconsole.info('App last built', new Date(Number(ts)))\n})\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n)\n","import { join } from 'path'\n\nexport const joinPath = (...segments: string[]) =>\n\tjoin(process.env.PUBLIC_URL, ...segments.flat())\n"],"sourceRoot":""}