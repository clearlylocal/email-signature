{"version":3,"sources":["dom/renderAsReactDom/filters.ts","components/IsolatedStyles.tsx","styles/constants.ts","i18n/i18n.ts","components/QrCode.tsx","utils/formatters.ts","dom/renderAsReactDom/allow.ts","components/HtmlEmailLink.tsx","dom/renderAsReactDom/mapDomToReact.tsx","dom/renderAsReactDom/parseCustomNode.tsx","dom/renderAsReactDom/index.ts","dom/renderAsReactDom/parseStringToDom.ts","components/SignatureTable.tsx","dom/waitForImageLoad.ts","utils/qrCode.ts","components/RenderedSignature.tsx","dom/toast.ts","hooks/useHtmlId.ts","pages/SignatureCreatorForm.tsx","dom/copyHtml.ts","utils/dom.ts","utils/utils.ts","pages/Instructions.tsx","utils/react.ts","Routes.tsx","App.tsx","index.tsx","utils/path.ts"],"names":["v1","IsolatedStyles","children","rest","ref","useRef","useState","shadowRoot","setShadowRoot","useEffect","current","attachShadow","mode","createPortal","colors","fonts","langs","Object","keys","_i18n","i18n","localeAgnostic","QrCode","alt","size","src","height","width","style","verticalAlign","borderRadius","display","toAssetPath","filename","process","allowAny","headings","Array","map","_","n","tag","allowAttributes","allow","v2","HtmlEmailLink","href","target","rel","color","fontSize","fontFamily","lineHeight","whiteSpace","mapDomToReact","node","idx","nodeType","Node","TEXT_NODE","isTextNode","data","ELEMENT_NODE","isHtmlElementNode","customNode","nodeName","toLowerCase","node_","textContent","parseCustomNode","allowed","find","item","toUpperCase","inner","innerHTML","outer","outerHTML","idxOfInner","indexOf","startTag","slice","endTag","length","childNodes","i","El","props","attributes","name","value","match","validate","renderAsReactDom","text","str","dom","DOMParser","parseFromString","body","parseStringToDom","SignatureTable","qrCodeSize","qrCodeDataUri","tr","translations","currentLang","lang","altLang","x","direction","borderCollapse","cellPadding","cellSpacing","padding","qrCodeAlt","textAlign","pipe","followUs","snarkdown","borderRight","valign","textTransform","fontWeight","logoFull","filter","Boolean","join","letterSpacing","jobTitle","phone","number","usedForWechat","wechat","colorScheme","email","border","maxWidth","waitForImageLoad","img","Promise","res","rej","onload","onerror","roundRect","ctx","y","w","h","r","beginPath","moveTo","arcTo","closePath","customRoundRect","outerSize","innerSize","paintQrToCanvas","canvas","url","QRCode","toCanvas","margin","err","getQrCode","a","logo","document","createElement","cssText","getContext","innerLogoSize","fillStyle","fill","strokeStyle","lineWidth","stroke","hidden","appendChild","aspectRatio","offset","drawImage","console","error","remove","toDataURL","initialLoadingState","loading","undefined","BareLink","replace","RenderedSignature","setData","info","all","qrCodeUrl","logoCropped","then","companyName","officeAddress","websiteUrl","flatMap","privacyNotice","toastStyleInfo","success","icon","failure","none","toast","options","msg","div","classList","add","opacity","transition","setTimeout","inc","generateHtmlId","prefix","init","en","zh","addresses","defaultValues","JSON","parse","localStorage","getItem","SignatureCreatorForm","useForm","register","handleSubmit","getValues","formRef","updateValidationMessages","useCallback","querySelectorAll","input","validationEl","nextElementSibling","contains","validationMessage","validity","valueMissing","patternMismatch","dataset","patternMsg","addressDatalistId","useHtmlId","changeHandler","form","setItem","stringify","_values","values","savedOfficeAddress","blankOutOfficeAddress","e","currentTarget","className","onInput","required","type","defaultChecked","pattern","onClick","onFocus","onBlur","list","id","address","el","selection","getSelection","range","createRange","empty","addRange","selectNode","execCommand","copyHtml","querySelector","renderAnchors","defaultVal","slugs","Proxy","create","get","key","heading","slug","regex","trim","Instructions","callback","html","setHtml","history","useHistory","fetch","link","getAttribute","startsWith","setAttribute","prependPublicUrlToRelativeLinks","addEventListener","preventDefault","window","location","origin","open","push","hash","scrollIntoView","handleLinks","matchedEl","decodeURIComponent","CSS","escape","scrollHashIntoView","parentEl","observer","MutationObserver","m","disconnect","observe","childList","dangerouslySetInnerHTML","__html","Routes","exact","path","App","basename","activeClassName","to","segments","flat","joinPath","ts","Date","Number","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2d344946.chunk.js","sourcesContent":["export const allowAny = () => true as true\n\nexport const oneOf =\n\t<T>(list: T[]) =>\n\t(v: T) =>\n\t\tlist.includes(v)\n\nexport const exact =\n\t<T>(v1: T) =>\n\t(v2: T) =>\n\t\tv1 === v2\n\nexport const matches = (regex: RegExp) => (v: string) => regex.test(v)\n","import { FC, HTMLProps, useEffect, useRef, useState } from 'react'\nimport { createPortal } from 'react-dom'\n\nexport const IsolatedStyles: FC<HTMLProps<HTMLDivElement>> = ({\n\tchildren,\n\t...rest\n}) => {\n\tconst ref = useRef<HTMLDivElement>(null)\n\n\tconst [shadowRoot, setShadowRoot] = useState<null | ShadowRoot>(null)\n\n\tuseEffect(() => {\n\t\tif (!shadowRoot && ref.current) {\n\t\t\tconst shadowRoot = ref.current.attachShadow({ mode: 'open' })\n\t\t\tsetShadowRoot(shadowRoot)\n\t\t}\n\t}, [shadowRoot])\n\n\treturn (\n\t\t<div {...rest} ref={ref}>\n\t\t\t{shadowRoot &&\n\t\t\t\tcreatePortal(children, shadowRoot as unknown as Element)}\n\t\t</div>\n\t)\n}\n","export const colors = {\n\tbrand: '#e06534',\n\tbigText: '#646464',\n\tsmallText: '#646464',\n\tlink: '#646464',\n}\n\nexport const fonts = {\n\tbody: '\"Arial\", \"Microsoft YaHei\", \"微软雅黑\", \"微軟雅黑\", sans-serif',\n}\n","import _i18n from './_i18n.json'\n\nexport type Lang = Exclude<keyof typeof _i18n, '*'>\n\nexport const langs = Object.keys(_i18n) as Lang[]\n\nexport type Translations = typeof _i18n['en']\n\nexport const i18n: Record<Lang, Translations> = _i18n\nexport const localeAgnostic = _i18n['*']\n","import { FC } from 'react'\n\ntype Props = {\n\talt: string\n\tsize: number\n\tsrc: string\n}\n\nexport const QrCode: FC<Props> = ({ alt, size, src }) => (\n\t<img\n\t\talt={alt}\n\t\tsrc={src}\n\t\theight={size}\n\t\twidth={size}\n\t\tstyle={{\n\t\t\twidth: `${size}px`,\n\t\t\tverticalAlign: 'initial',\n\t\t\tborderRadius: 0,\n\t\t\tdisplay: 'block',\n\t\t\theight: `${size}px`,\n\t\t}}\n\t/>\n)\n","import { regex } from 'fancy-regex'\n\nexport const slugify = (str: string) =>\n\tstr\n\t\t.toLowerCase()\n\t\t.replace(\n\t\t\tregex('gu')`[\n\t\t\t\t^\n\t\t\t\t\\p{Letter}\n\t\t\t\t\\p{Mark}\n\t\t\t\t\\p{Number}\n\t\t\t]+`,\n\t\t\t' ',\n\t\t)\n\t\t.trim()\n\t\t.replace(/\\s+/g, '-')\n\nexport const filenameify = (date: Date) =>\n\tdate.toISOString().replace(/:/g, '_').slice(0, 19) + 'Z'\n\nexport const wrapEmailHtml = (html: string) => `<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta http-equiv=Content-Type content=\"text/html; charset=utf-8\">\n        <title>Email signature</title>\n    </head>\n    <body>\n\t\t${html}\n    </body>\n</html>`\n\nexport const toAssetPath = (filename: string) =>\n\t`${process.env.PUBLIC_URL}/assets/${filename}`\n\nexport const toContentPath = (filename: string) =>\n\t`${process.env.PUBLIC_URL}/content/${filename}`\n","import { allowAny, exact } from './filters'\n\nexport type Allow = {\n\ttag: string\n\tallowAttributes?: [attr: string, matcher: (input: string) => boolean][]\n}\n\nconst headings: Allow[] = [...new Array(6)].map((_, n) => ({\n\ttag: `h${n + 1}`,\n\tallowAttributes: [['id', allowAny]],\n}))\n\nexport const allow: Allow[] = [\n\t...headings,\n\t{ tag: 'p' },\n\t{ tag: 'ul' },\n\t{ tag: 'ol' },\n\t{ tag: 'li' },\n\t{\n\t\ttag: 'a',\n\t\tallowAttributes: [\n\t\t\t['href', allowAny],\n\t\t\t['target', exact('_blank')],\n\t\t],\n\t},\n\t{ tag: 'br' },\n\t{ tag: 'hr' },\n]\n","import { FC } from 'react'\nimport { colors, fonts } from '../styles/constants'\n\ntype Props = {\n\thref: string\n}\n\nexport const HtmlEmailLink: FC<Props> = ({ href, children }) => {\n\treturn (\n\t\t<a\n\t\t\ttarget='_blank'\n\t\t\trel='noreferrer'\n\t\t\tstyle={{\n\t\t\t\tcolor: colors.link,\n\t\t\t\tfontSize: '12px',\n\t\t\t\tfontFamily: fonts.body,\n\t\t\t}}\n\t\t\thref={href}\n\t\t>\n\t\t\t<span\n\t\t\t\tstyle={{\n\t\t\t\t\tlineHeight: '1.2',\n\t\t\t\t\tfontFamily: fonts.body,\n\t\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\t\tfontSize: '12px',\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</span>\n\t\t</a>\n\t)\n}\n","import { Fragment } from 'react'\nimport { allow } from './allow'\nimport { parseCustomNode } from './parseCustomNode'\n\nconst isTextNode = (node: Node): node is Text =>\n\tnode.nodeType === Node.TEXT_NODE\n\nconst isHtmlElementNode = (node: Node): node is HTMLElement =>\n\tnode.nodeType === Node.ELEMENT_NODE\n\nexport const mapDomToReact = (node: Node, idx: number) => {\n\tif (isTextNode(node)) {\n\t\treturn <Fragment key={idx}>{node.data}</Fragment>\n\t} else if (isHtmlElementNode(node)) {\n\t\tconst customNode = parseCustomNode(node)\n\n\t\tif (customNode) return customNode\n\n\t\tconst allowed = allow.find(\n\t\t\t(item) => item.tag.toUpperCase() === node.nodeName,\n\t\t)\n\n\t\tif (!allowed) {\n\t\t\tconst inner = node.innerHTML\n\t\t\tconst outer = node.outerHTML\n\n\t\t\tconst idxOfInner = outer.indexOf(inner)\n\n\t\t\tconst startTag = outer.slice(0, idxOfInner)\n\t\t\tconst endTag = outer.slice(idxOfInner + inner.length)\n\n\t\t\treturn (\n\t\t\t\t<Fragment key={idx}>\n\t\t\t\t\t<Fragment key={-1}> {startTag} </Fragment>\n\t\t\t\t\t{[...node.childNodes].map((n, i) => mapDomToReact(n, i))}\n\t\t\t\t\t<Fragment key={node.childNodes.length}> {endTag} </Fragment>\n\t\t\t\t</Fragment>\n\t\t\t)\n\t\t}\n\n\t\tconst El = node.nodeName.toLowerCase()\n\n\t\tconst props: Record<string, string> = {}\n\n\t\tfor (const { name, value } of node.attributes) {\n\t\t\tconst match = allowed.allowAttributes?.find(([key]) => key === name)\n\n\t\t\tif (!match) continue\n\n\t\t\tconst [, validate] = match\n\n\t\t\tif (validate(value)) {\n\t\t\t\tprops[name] = value\n\t\t\t}\n\t\t}\n\n\t\treturn node.textContent ? (\n\t\t\t<El key={idx} {...(props as any)}>\n\t\t\t\t{[...node.childNodes].map((n, i) => mapDomToReact(n, i))}\n\t\t\t</El>\n\t\t) : (\n\t\t\t<El key={idx} {...props} />\n\t\t)\n\t}\n\n\treturn <></>\n}\n","import { HtmlEmailLink } from '../../components/HtmlEmailLink'\n\nexport const parseCustomNode = (node: Node) => {\n\tconst nodeName = node.nodeName.toLowerCase()\n\n\tswitch (nodeName.toLowerCase()) {\n\t\tcase 'a':\n\t\t\tconst node_ = node as HTMLAnchorElement\n\n\t\t\treturn (\n\t\t\t\t<HtmlEmailLink href={node_.href}>\n\t\t\t\t\t{node.textContent ?? ''}\n\t\t\t\t</HtmlEmailLink>\n\t\t\t)\n\t\tdefault:\n\t\t\treturn null\n\t}\n}\n","import { mapDomToReact } from './mapDomToReact'\nimport { parseStringToDom } from './parseStringToDom'\n\nexport const renderAsReactDom = /* (allowList: Allow[]) => */ (text: string) =>\n\tparseStringToDom(text).map(mapDomToReact)\n","export const parseStringToDom = (str: string) => {\n\tconst dom = new DOMParser().parseFromString(str, 'text/html')\n\n\treturn [...dom.body.childNodes]\n}\n","import { FC } from 'react'\nimport { colors, fonts } from '../styles/constants'\nimport { SignatureInfo } from '../types/signatureInfo'\nimport snarkdown from 'snarkdown'\nimport { QrCode } from './QrCode'\nimport { Translations, langs } from '../i18n/i18n'\nimport { toAssetPath } from '../utils/formatters'\nimport { pipe } from 'fp-ts/lib/function'\nimport { renderAsReactDom } from '../dom/renderAsReactDom'\nimport { HtmlEmailLink } from './HtmlEmailLink'\n\ntype Props = {\n  translations: Translations\n  qrCodeSize: number\n  qrCodeDataUri: string\n} & SignatureInfo\n\nexport const SignatureTable: FC<Props> = ({ qrCodeSize, qrCodeDataUri, translations: tr, ...props }) => {\n  const currentLang = props.lang\n  const altLang = langs.find((x) => x !== currentLang)!\n\n  return (\n    <table style={{ direction: 'ltr', borderCollapse: 'collapse' }}>\n      <tbody>\n        <tr>\n          <td>\n            <table\n              cellPadding={0}\n              cellSpacing={0}\n              style={{\n                borderCollapse: 'collapse',\n                fontFamily: fonts.body,\n                lineHeight: '1.15',\n                color: '#000',\n              }}\n            >\n              <tbody>\n                <tr>\n                  <td\n                    style={{\n                      verticalAlign: 'top',\n                      padding: '0.01px 14px 0.01px 0.01px',\n                    }}\n                  >\n                    <table\n                      cellPadding={0}\n                      cellSpacing={0}\n                      style={{\n                        borderCollapse: 'collapse',\n                        width: qrCodeSize,\n                      }}\n                    >\n                      <tbody>\n                        <tr>\n                          <td\n                            style={{\n                              padding: '0.01px',\n                            }}\n                          >\n                            <QrCode alt={tr.qrCodeAlt} src={qrCodeDataUri} size={qrCodeSize} />\n                          </td>\n                        </tr>\n                        <tr>\n                          <td\n                            style={{\n                              borderCollapse: 'collapse',\n                              fontFamily: fonts.body,\n                              lineHeight: '1.15',\n                              color: colors.brand,\n                              padding: '6px 0.01px 0.01px 0.01px',\n                              fontSize: '15.6px',\n                              textAlign: 'center',\n                            }}\n                          >\n                            {pipe(tr.followUs, snarkdown, renderAsReactDom)}\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </td>\n                  <td\n                    height={1}\n                    width={0}\n                    style={{\n                      width: '0px',\n                      padding: '0.01px',\n                      borderRight: `2px solid ${colors.brand}`,\n                      height: '1px',\n                      fontSize: '1pt',\n                    }}\n                  >\n                    &nbsp;\n                  </td>\n                  <td\n                    style={{\n                      padding: '0.01px 14px 0.01px 14px',\n                      verticalAlign: 'top',\n                    }}\n                    valign='top'\n                  >\n                    <table\n                      cellPadding={0}\n                      cellSpacing={0}\n                      style={{\n                        borderCollapse: 'collapse',\n                      }}\n                    >\n                      <tbody>\n                        <tr>\n                          <td\n                            style={{\n                              lineHeight: '1.2',\n                              padding: '0.01px 0.01px 10px 0.01px',\n                            }}\n                          >\n                            <span\n                              style={{\n                                fontFamily: fonts.body,\n                                textTransform: 'initial',\n                                fontWeight: 'bold',\n                              }}\n                            >\n                              <span\n                                style={{\n                                  fontSize: '15.6px',\n                                }}\n                              >\n                                <img width={150} src={toAssetPath(tr.logoFull)} alt='' />\n                              </span>\n                            </span>\n                          </td>\n                        </tr>\n\n                        <tr>\n                          <td\n                            style={{\n                              lineHeight: '1.2',\n                              padding: '0.01px 0.01px 12px 0.01px',\n                            }}\n                          >\n                            <span\n                              style={{\n                                fontFamily: fonts.body,\n                                textTransform: 'initial',\n                                fontWeight: 'bold',\n                              }}\n                            >\n                              <span\n                                style={{\n                                  color: colors.bigText,\n                                  fontSize: '15.6px',\n                                }}\n                              >\n                                {[props.name[currentLang], props.name[altLang]].filter(Boolean).join(' ')}\n                              </span>\n                            </span>\n                            <br />\n                            <span\n                              style={{\n                                fontSize: '13.2px',\n                                letterSpacing: '0px',\n                                fontFamily: fonts.body,\n                                textTransform: 'initial',\n                                fontWeight: 'bold',\n                                color: colors.bigText,\n                              }}\n                            >\n                              {props.jobTitle}\n                            </span>\n                          </td>\n                        </tr>\n                        <tr>\n                          <td\n                            style={{\n                              padding: '0.01px',\n                              lineHeight: 0,\n                            }}\n                          >\n                            <table\n                              cellPadding={0}\n                              cellSpacing={0}\n                              style={{\n                                borderCollapse: 'collapse',\n                              }}\n                            >\n                              <tbody>\n                                {props.phone.number && (\n                                  <tr>\n                                    <td\n                                      style={{\n                                        padding: '0.01px',\n                                      }}\n                                    >\n                                      <table\n                                        cellPadding={0}\n                                        cellSpacing={0}\n                                        style={{\n                                          borderCollapse: 'collapse',\n                                        }}\n                                      >\n                                        <tbody>\n                                          <tr>\n                                            <td\n                                              style={{\n                                                lineHeight: '0%',\n                                                padding: '0.01px 0.01px 6px 0.01px',\n                                              }}\n                                            >\n                                              <table\n                                                cellPadding={0}\n                                                cellSpacing={0}\n                                                style={{\n                                                  borderCollapse: 'collapse',\n                                                  lineHeight: '14px',\n                                                  fontSize: '12px',\n                                                  fontFamily: fonts.body,\n                                                }}\n                                              >\n                                                <tbody>\n                                                  <tr>\n                                                    <td\n                                                      style={{\n                                                        padding: '0.01px',\n                                                        fontFamily: fonts.body,\n                                                        fontSize: '12px',\n                                                        color: colors.smallText,\n                                                      }}\n                                                    >\n                                                      <HtmlEmailLink\n                                                        href={`tel:${props.phone.number}`}\n\n                                                      >\n                                                        {props.phone.number}\n                                                      </HtmlEmailLink>\n                                                      {props.phone.usedForWechat ? ` ${tr.wechat}` : null}\n                                                    </td>\n                                                  </tr>\n                                                </tbody>\n                                              </table>\n                                            </td>\n                                            <td\n                                              style={{\n                                                lineHeight: '0%',\n                                                padding: '0.01px 0.01px 6px 0.01px',\n                                              }}\n                                            ></td>\n                                          </tr>\n                                        </tbody>\n                                      </table>\n                                    </td>\n                                  </tr>\n                                )}\n                                <tr>\n                                  <td\n                                    style={{\n                                      padding: '0.01px',\n                                    }}\n                                  >\n                                    <table\n                                      cellPadding={0}\n                                      cellSpacing={0}\n                                      style={{\n                                        borderCollapse: 'collapse',\n                                      }}\n                                    >\n                                      <tbody>\n                                        <tr>\n                                          <td\n                                            style={{\n                                              lineHeight: '0%',\n                                              padding: '0.01px 0.01px 6px 0.01px',\n                                            }}\n                                          >\n                                            <table\n                                              cellPadding={0}\n                                              cellSpacing={0}\n                                              style={{\n                                                borderCollapse: 'collapse',\n                                                lineHeight: '14px',\n                                                fontSize: '12px',\n                                                fontFamily: fonts.body,\n                                              }}\n                                            >\n                                              <tbody>\n                                                <tr>\n                                                  <td\n                                                    style={{\n                                                      padding: '0.01px',\n                                                      colorScheme: 'light only',\n                                                      fontFamily: fonts.body,\n                                                      fontSize: '12px',\n                                                    }}\n                                                  >\n                                                    <HtmlEmailLink href={`mailto:${props.email}`}>\n                                                      {props.email}\n                                                    </HtmlEmailLink>\n                                                  </td>\n                                                </tr>\n                                              </tbody>\n                                            </table>\n                                          </td>\n                                        </tr>\n                                      </tbody>\n                                    </table>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n            <table\n              cellPadding={0}\n              cellSpacing={0}\n              /* @ts-ignore */\n              border={0}\n              style={{ maxWidth: '600px', width: '100%' }}\n            >\n              <tbody>\n                <tr>\n                  <td style={{ lineHeight: 0 }} />\n                </tr>\n              </tbody>\n            </table>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  )\n}\n","export const waitForImageLoad = (img: HTMLImageElement) =>\n\tnew Promise((res, rej) => {\n\t\timg.onload = res\n\t\timg.onerror = rej\n\t})\n","import QRCode from 'qrcode'\nimport { waitForImageLoad } from '../dom/waitForImageLoad'\nimport { colors } from '../styles/constants'\n\ntype Rect = [x: number, y: number, width: number, height: number]\n\n// https://stackoverflow.com/a/7838871\n\nconst roundRect = (\n\tctx: CanvasRenderingContext2D,\n\tx: number,\n\ty: number,\n\tw: number,\n\th: number,\n\tr: number,\n) => {\n\tif (w < 2 * r) r = w / 2\n\tif (h < 2 * r) r = h / 2\n\n\tctx.beginPath()\n\tctx.moveTo(x + r, y)\n\tctx.arcTo(x + w, y, x + w, y + h, r)\n\tctx.arcTo(x + w, y + h, x, y + h, r)\n\tctx.arcTo(x, y + h, x, y, r)\n\tctx.arcTo(x, y, x + w, y, r)\n\tctx.closePath()\n}\n\nconst customRoundRect = (\n\tctx: CanvasRenderingContext2D,\n\touterSize: number,\n\tinnerSize: number,\n) => {\n\tconst rect: Rect = [\n\t\touterSize / 2 - innerSize / 2,\n\t\touterSize / 2 - innerSize / 2,\n\t\tinnerSize,\n\t\tinnerSize,\n\t]\n\n\troundRect(ctx, ...rect, innerSize / 8)\n}\n\ntype QrCodeInit = {\n\tsize: number\n\turl: string\n\tlogo: string\n}\n\nconst paintQrToCanvas = (\n\tcanvas: HTMLCanvasElement,\n\turl: string,\n\tsize: number,\n) =>\n\tnew Promise<void>((res, rej) => {\n\t\tQRCode.toCanvas(canvas, url, { margin: 2, width: size }, (err) => {\n\t\t\tif (err) {\n\t\t\t\trej(err)\n\t\t\t} else {\n\t\t\t\tres()\n\t\t\t}\n\t\t})\n\t})\n\nexport const getQrCode = async ({ size, url, logo }: QrCodeInit) => {\n\tconst canvas = document.createElement('canvas')\n\n\tcanvas.width = size\n\tcanvas.height = size\n\n\tcanvas.style.cssText = `width: ${size}px; height: ${size}px`\n\n\tawait paintQrToCanvas(canvas, url, size)\n\n\tconst ctx = canvas.getContext('2d')!\n\n\tconst qrCodeSize = size\n\tconst outerLogoSize = size / 3.5\n\tconst innerLogoSize = size / 4\n\n\tcustomRoundRect(ctx, qrCodeSize, outerLogoSize)\n\tctx.fillStyle = '#ffffff'\n\tctx.fill()\n\n\tcustomRoundRect(ctx, qrCodeSize, innerLogoSize)\n\tctx.strokeStyle = colors.brand\n\tctx.lineWidth = 0.5\n\tctx.stroke()\n\n\tconst img = document.createElement('img')\n\timg.hidden = true\n\tdocument.body.appendChild(img)\n\timg.src = logo\n\n\ttry {\n\t\tawait waitForImageLoad(img)\n\n\t\tconst aspectRatio = img.width / img.height\n\n\t\tconst offset = qrCodeSize / 2 - innerLogoSize / 2\n\n\t\tctx.drawImage(\n\t\t\timg,\n\t\t\toffset + aspectRatio,\n\t\t\toffset,\n\t\t\tinnerLogoSize * aspectRatio,\n\t\t\tinnerLogoSize,\n\t\t)\n\t} catch (e) {\n\t\tconsole.error(e)\n\t}\n\n\timg.remove()\n\n\treturn canvas.toDataURL()\n}\n","import { FC, Fragment, useEffect, useState } from 'react'\nimport { colors, fonts } from '../styles/constants'\nimport { SignatureInfo } from '../types/signatureInfo'\nimport snarkdown from 'snarkdown'\nimport { i18n, localeAgnostic } from '../i18n/i18n'\nimport { SignatureTable } from './SignatureTable'\nimport { getQrCode } from '../utils/qrCode'\nimport { toAssetPath } from '../utils/formatters'\nimport { waitForImageLoad } from '../dom/waitForImageLoad'\nimport { pipe } from 'fp-ts/lib/function'\nimport { renderAsReactDom } from '../dom/renderAsReactDom'\nimport { HtmlEmailLink } from './HtmlEmailLink'\n\ntype LoadingState =\n\t| {\n\t\t\tloading: false\n\t\t\tqrCodeDataUri: string\n\t  }\n\t| {\n\t\t\tloading: true\n\t\t\tqrCodeDataUri?: undefined\n\t  }\n\nconst initialLoadingState = {\n\tloading: true,\n\tqrCodeDataUri: undefined,\n} as LoadingState\n\nconst BareLink: FC<{ href: string }> = ({ href }) => (\n\t<HtmlEmailLink href={href}>\n\t\t{href.replace(/^https?:\\/\\//, '')}\n\t</HtmlEmailLink>\n)\n\nexport const RenderedSignature: FC<SignatureInfo & { qrCodeSize: number }> = (\n\tprops,\n) => {\n\tconst [data, setData] = useState(initialLoadingState)\n\n\tconst currentLang = props.lang\n\n\tconst tr = i18n[currentLang]\n\n\tuseEffect(() => {\n\t\tsetData(initialLoadingState)\n\t\tconsole.info('Loading QR code...')\n\n\t\tconst img = document.createElement('img')\n\t\timg.src = toAssetPath(tr.logoFull)\n\n\t\tPromise.all([\n\t\t\tgetQrCode({\n\t\t\t\tsize: props.qrCodeSize,\n\t\t\t\turl: tr.qrCodeUrl,\n\t\t\t\tlogo: toAssetPath(tr.logoCropped),\n\t\t\t}),\n\t\t\twaitForImageLoad(img),\n\t\t]).then(async ([qrCodeDataUri]) => {\n\t\t\tsetData({\n\t\t\t\tloading: false,\n\t\t\t\tqrCodeDataUri,\n\t\t\t})\n\t\t})\n\t}, [props.qrCodeSize, tr.logoCropped, tr.qrCodeUrl, tr.logoFull])\n\n\treturn data.loading ? (\n\t\t<>Loading...</>\n\t) : (\n\t\t<div style={{ fontFamily: fonts.body, color: colors.smallText }}>\n\t\t\t<div>\n\t\t\t\t<SignatureTable\n\t\t\t\t\t{...{\n\t\t\t\t\t\t...props,\n\t\t\t\t\t\tqrCodeSize: props.qrCodeSize,\n\t\t\t\t\t\tqrCodeDataUri: data.qrCodeDataUri,\n\t\t\t\t\t}}\n\t\t\t\t\ttranslations={tr}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<p\n\t\t\t\tstyle={{\n\t\t\t\t\tfontFamily: fonts.body,\n\t\t\t\t\tlineHeight: 1.6,\n\t\t\t\t\tmargin: '12px 0.01px 0.01px 0.01px',\n\t\t\t\t\tcolor: colors.smallText,\n\t\t\t\t\tfontSize: 12,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{[\n\t\t\t\t\tlocaleAgnostic.companyName,\n\t\t\t\t\tprops.officeAddress,\n\t\t\t\t\t<BareLink href={localeAgnostic.websiteUrl} />,\n\t\t\t\t]\n\t\t\t\t\t.flatMap((x, i, a) => (i === a.length - 1 ? x : [x, ' | ']))\n\t\t\t\t\t.map((x, i) => (\n\t\t\t\t\t\t<Fragment key={i}>{x}</Fragment>\n\t\t\t\t\t))}\n\t\t\t</p>\n\t\t\t<p\n\t\t\t\tstyle={{\n\t\t\t\t\tfontFamily: fonts.body,\n\t\t\t\t\tlineHeight: 1.6,\n\t\t\t\t\tmargin: '12px 0.01px 0.01px 0.01px',\n\t\t\t\t\tcolor: colors.smallText,\n\t\t\t\t\tfontSize: 12,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{pipe(tr.privacyNotice, snarkdown, renderAsReactDom)}\n\t\t\t</p>\n\t\t</div>\n\t)\n}\n","type ToastStyle = 'success' | 'failure' | 'none'\n\ntype ToastOptions = {\n\tstyle: ToastStyle\n}\n\nconst toastStyleInfo: Record<ToastStyle, { icon: string }> = {\n\tsuccess: { icon: '✅' },\n\tfailure: { icon: '❌' },\n\tnone: { icon: '' },\n}\n\nexport const toast =\n\t(options: ToastOptions = { style: 'none' }) =>\n\t(msg: string) => {\n\t\tconst div = document.createElement('div')\n\t\tdiv.classList.add('toast')\n\t\tdiv.style.opacity = '0'\n\t\tdiv.style.transition = 'opacity 0.6s'\n\n\t\tdiv.textContent = [toastStyleInfo[options.style].icon, msg]\n\t\t\t.filter(Boolean)\n\t\t\t.join(' ')\n\n\t\tdocument.body.appendChild(div)\n\n\t\tsetTimeout(() => {\n\t\t\tdiv.style.opacity = '1'\n\t\t}, 10)\n\n\t\tsetTimeout(() => {\n\t\t\tdiv.style.transition = 'opacity 1s'\n\t\t}, 200)\n\n\t\tsetTimeout(() => {\n\t\t\tdiv.style.opacity = '0'\n\t\t}, 1200)\n\n\t\tsetTimeout(() => {\n\t\t\tdiv.remove()\n\t\t}, 2000)\n\t}\n","import { useState } from 'react'\n\nlet inc = 0\n\nconst generateHtmlId = (prefix = 'id') => `${prefix}-${++inc}`\n\nexport const useHtmlId = (prefix = 'id') => {\n\tconst [htmlId /* , setHtmlId */] = useState(generateHtmlId(prefix))\n\n\treturn htmlId\n}\n","import React, { FC, useCallback, useEffect, useRef } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { IsolatedStyles } from '../components/IsolatedStyles'\nimport { RenderedSignature } from '../components/RenderedSignature'\nimport { copyHtml } from '../dom/copyHtml'\nimport { useHtmlId } from '../hooks/useHtmlId'\nimport { localeAgnostic } from '../i18n/i18n'\nimport { SignatureInfo } from '../types/signatureInfo'\n\nconst qrCodeSize = 120\n\nconst init: SignatureInfo = {\n\tlang: 'en',\n\tname: {\n\t\ten: 'Jane Doe',\n\t\tzh: '杜娟',\n\t},\n\tjobTitle: 'Senior Data Wrangler',\n\tphone: { number: '+86 138 8888 8888', usedForWechat: false },\n\temail: 'jane.doe@clearlyloc.com',\n\tofficeAddress: localeAgnostic.addresses[0].value,\n}\n\nconst defaultValues: SignatureInfo =\n\tJSON.parse(localStorage.getItem('signatureCreator') ?? 'null') ?? init\n\nexport const SignatureCreatorForm: FC = () => {\n\tconst { register, handleSubmit, getValues } = useForm<SignatureInfo>({\n\t\tdefaultValues,\n\t})\n\n\tconst formRef = useRef<HTMLFormElement>(null)\n\n\tconst updateValidationMessages = useCallback(() => {\n\t\tfor (const input of formRef.current?.querySelectorAll('input') ?? []) {\n\t\t\tconst validationEl = input.nextElementSibling\n\n\t\t\tif (\n\t\t\t\tvalidationEl &&\n\t\t\t\tvalidationEl.classList.contains('validation-msg')\n\t\t\t) {\n\t\t\t\tlet { validationMessage, validity } = input\n\n\t\t\t\tif (!validity.valueMissing && validity.patternMismatch) {\n\t\t\t\t\tvalidationMessage =\n\t\t\t\t\t\tinput.dataset.patternMsg ?? validationMessage\n\t\t\t\t}\n\n\t\t\t\tvalidationEl.textContent = validationMessage\n\t\t\t}\n\t\t}\n\t}, [])\n\n\tconst addressDatalistId = useHtmlId(`address-list`)\n\n\tuseEffect(() => {\n\t\t// once on load\n\t\tupdateValidationMessages()\n\t}, [updateValidationMessages])\n\n\tconst changeHandler = useCallback(\n\t\t(form: SignatureInfo) => {\n\t\t\tlocalStorage.setItem('signatureCreator', JSON.stringify(form))\n\n\t\t\tupdateValidationMessages()\n\t\t},\n\t\t[updateValidationMessages],\n\t)\n\n\tconst _values = getValues()\n\n\tconst values = _values?.name ? _values : defaultValues\n\n\tconst savedOfficeAddress = useRef(values.officeAddress)\n\n\tconst blankOutOfficeAddress = (\n\t\te:\n\t\t\t| React.FocusEvent<HTMLInputElement>\n\t\t\t| React.MouseEvent<HTMLInputElement>,\n\t) => {\n\t\tsavedOfficeAddress.current = values.officeAddress\n\n\t\te.currentTarget.value = ''\n\t}\n\n\tconst revertOfficeAddress = (e: React.FocusEvent<HTMLInputElement>) => {\n\t\te.currentTarget.value =\n\t\t\te.currentTarget.value || savedOfficeAddress.current\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<h1>Email signature</h1>\n\n\t\t\t<div className='row'>\n\t\t\t\t<form\n\t\t\t\t\tclassName='col'\n\t\t\t\t\tref={formRef}\n\t\t\t\t\tonInput={handleSubmit(changeHandler)}\n\t\t\t\t>\n\t\t\t\t\t<div className='magic-flex'>\n\t\t\t\t\t\t<div className='spaced'>\n\t\t\t\t\t\t\t<fieldset>\n\t\t\t\t\t\t\t\t<legend>Template language</legend>\n\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\tEnglish\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\ttype='radio'\n\t\t\t\t\t\t\t\t\t\tname='lang'\n\t\t\t\t\t\t\t\t\t\tvalue='en'\n\t\t\t\t\t\t\t\t\t\tref={register}\n\t\t\t\t\t\t\t\t\t\tdefaultChecked\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</label>{' '}\n\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\tChinese\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\ttype='radio'\n\t\t\t\t\t\t\t\t\t\tname='lang'\n\t\t\t\t\t\t\t\t\t\tvalue='zh'\n\t\t\t\t\t\t\t\t\t\tref={register}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t<div className='validation-msg'></div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='spaced col-first'>\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\tEnglish name\n\t\t\t\t\t\t\t\t<input required name='name.en' ref={register} />\n\t\t\t\t\t\t\t\t<div className='validation-msg'></div>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='spaced col-last'>\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\tChinese name (optional)\n\t\t\t\t\t\t\t\t<input name='name.zh' ref={register} />\n\t\t\t\t\t\t\t\t<div className='validation-msg'></div>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='spaced'>\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\tJob title\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\tname='jobTitle'\n\t\t\t\t\t\t\t\t\tref={register}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='validation-msg'></div>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='spaced'>\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\tWork email\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\t\tref={register}\n\t\t\t\t\t\t\t\t\tpattern='.+@clearlyloc.com'\n\t\t\t\t\t\t\t\t\tdata-pattern-msg='Must end with @clearlyloc.com'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='validation-msg'></div>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='spaced'>\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\tPhone number (including country code)\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='tel'\n\t\t\t\t\t\t\t\t\tname='phone.number'\n\t\t\t\t\t\t\t\t\tref={register}\n\t\t\t\t\t\t\t\t\tpattern='\\+[\\d ]+'\n\t\t\t\t\t\t\t\t\tdata-pattern-msg='Must start with a country code in the format +XX (e.g. +86 for China) and contain only numbers and spaces'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='validation-msg'></div>\n\t\t\t\t\t\t\t</label>\n\n\t\t\t\t\t\t\t<label className='secondary-field'>\n\t\t\t\t\t\t\t\tUsed for WeChat?\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\tname='phone.usedForWechat'\n\t\t\t\t\t\t\t\t\tref={register}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='spaced'>\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\tOffice address\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tonClick={blankOutOfficeAddress}\n\t\t\t\t\t\t\t\t\tonFocus={blankOutOfficeAddress}\n\t\t\t\t\t\t\t\t\tonBlur={revertOfficeAddress}\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tname='officeAddress'\n\t\t\t\t\t\t\t\t\tref={register}\n\t\t\t\t\t\t\t\t\tlist={addressDatalistId}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='validation-msg'></div>\n\t\t\t\t\t\t\t</label>\n\n\t\t\t\t\t\t\t<datalist id={addressDatalistId}>\n\t\t\t\t\t\t\t\t{localeAgnostic.addresses.map(\n\t\t\t\t\t\t\t\t\t(address, idx) => (\n\t\t\t\t\t\t\t\t\t\t<option key={idx} value={address.value}>\n\t\t\t\t\t\t\t\t\t\t\t{address.name}\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</datalist>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\n\t\t\t\t<div className='col'>\n\t\t\t\t\t<div className='spaced'>\n\t\t\t\t\t\t<output>\n\t\t\t\t\t\t\t<IsolatedStyles id='rendered-signature-container'>\n\t\t\t\t\t\t\t\t<RenderedSignature\n\t\t\t\t\t\t\t\t\t{...{ ...values, qrCodeSize }}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</IsolatedStyles>\n\t\t\t\t\t\t</output>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\tcopyHtml(\n\t\t\t\t\t\t\t\tdocument\n\t\t\t\t\t\t\t\t\t.querySelector(\n\t\t\t\t\t\t\t\t\t\t'#rendered-signature-container',\n\t\t\t\t\t\t\t\t\t)!\n\t\t\t\t\t\t\t\t\t.shadowRoot?.querySelector('*')!,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclassName='button primary'\n\t\t\t\t\t\ttype='button'\n\t\t\t\t\t>\n\t\t\t\t\t\tCopy\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t)\n}\n","import { toast } from './toast'\n\nexport const copyHtml = (el: HTMLElement) => {\n\tconst selection = document.getSelection()\n\tconst range = document.createRange()\n\n\tselection?.empty()\n\tselection?.addRange(range)\n\n\trange.selectNode(el)\n\n\tconst succeeded = document.execCommand('copy')\n\n\tif (succeeded) {\n\t\ttoast({ style: 'success' })('Copied')\n\t} else {\n\t\ttoast({ style: 'failure' })('Failed to copy')\n\t}\n\n\tselection?.empty()\n}\n","import { useHistory } from 'react-router-dom'\nimport { pipe } from 'fp-ts/function'\nimport { slugify } from './formatters'\nimport { hashWithDefault } from './utils'\n\nexport const renderAnchors = (el: HTMLElement) => {\n\tconst slugs = hashWithDefault(0)\n\n\tfor (const heading of el.querySelectorAll(\n\t\t'h2, h3, h4, h5, h6, .anchored',\n\t)) {\n\t\tif (heading.textContent) {\n\t\t\tconst slug = slugify(heading.textContent) || 'heading'\n\n\t\t\tconst x = ++slugs[slug]\n\n\t\t\theading.id = [slug, x > 1 && x].filter(Boolean).join('-')\n\t\t\theading.classList.add('anchored')\n\t\t}\n\t}\n}\n\nexport const prependPublicUrlToRelativeLinks = (el: HTMLElement) => {\n\tfor (const link of el.querySelectorAll('a')) {\n\t\tconst href = link.getAttribute('href')\n\n\t\tif (href?.startsWith('/')) {\n\t\t\tlink.setAttribute('href', process.env.PUBLIC_URL + href)\n\t\t}\n\t}\n}\n\nexport const handleLinks = (\n\tel: HTMLElement,\n\thistory: ReturnType<typeof useHistory>,\n) => {\n\tel.addEventListener('click', (e) => {\n\t\tconst target = e.target as HTMLAnchorElement\n\t\tconst href = target.getAttribute('href')\n\n\t\tif (target.nodeName === 'A' && href) {\n\t\t\te.preventDefault()\n\n\t\t\tif (\n\t\t\t\thref.startsWith('http') &&\n\t\t\t\t!href.startsWith(window.location.origin)\n\t\t\t) {\n\t\t\t\twindow.open(href, '_blank', 'noopener noreferrer')\n\t\t\t} else {\n\t\t\t\thistory.push(href.slice(process.env.PUBLIC_URL.length))\n\t\t\t}\n\t\t} else if (target.classList.contains('anchored')) {\n\t\t\twindow.location.hash = target.id\n\t\t\ttarget.scrollIntoView(true)\n\t\t}\n\t})\n}\n\nexport const scrollHashIntoView = (el: HTMLElement) => {\n\tif (window.location.hash) {\n\t\tsetTimeout(() => {\n\t\t\tconst matchedEl = pipe(\n\t\t\t\twindow.location.hash.slice(1),\n\t\t\t\tdecodeURIComponent,\n\t\t\t\tCSS.escape,\n\t\t\t\t(id) => el.querySelector(`#${id}`),\n\t\t\t)\n\n\t\t\tmatchedEl?.scrollIntoView(true)\n\t\t\t// 100ms to counteract browser position retaining\n\t\t}, 100)\n\t}\n}\n\nexport const htmlToFragment = (html: string) => {\n\tconst temp = document.createElement('template')\n\ttemp.innerHTML = html\n\n\treturn temp.content\n}\n","export const hashWithDefault = <T>(defaultVal: T) =>\n\tnew Proxy(Object.create(null) as Record<string, T>, {\n\t\tget(target, key: string) {\n\t\t\treturn key in target ? target[key] : defaultVal\n\t\t},\n\t})\n","import { FC, useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport {\n\thandleLinks,\n\tprependPublicUrlToRelativeLinks,\n\trenderAnchors,\n\tscrollHashIntoView,\n} from '../utils/dom'\nimport { toContentPath } from '../utils/formatters'\nimport { onHtmlRender } from '../utils/react'\n\nexport const Instructions: FC = () => {\n\tconst [html, setHtml] = useState('')\n\n\tconst history = useHistory()\n\n\tuseEffect(() => {\n\t\tfetch(toContentPath('instructions.html')).then(async (res) => {\n\t\t\tconst html = await res.text()\n\n\t\t\tsetHtml(html)\n\t\t})\n\t}, [])\n\n\treturn (\n\t\t<div\n\t\t\tref={onHtmlRender((el) => {\n\t\t\t\t// setup\n\t\t\t\trenderAnchors(el)\n\t\t\t\tprependPublicUrlToRelativeLinks(el)\n\t\t\t\thandleLinks(el, history)\n\n\t\t\t\t// effects\n\t\t\t\tscrollHashIntoView(el)\n\t\t\t})}\n\t\t\tdangerouslySetInnerHTML={{ __html: html }}\n\t\t></div>\n\t)\n}\n","export const onHtmlRender =\n\t(callback: (parentEl: HTMLElement) => void) =>\n\t(parentEl: HTMLElement | null) => {\n\t\tif (!parentEl) return\n\n\t\tconst observer = new MutationObserver((m) => {\n\t\t\tcallback(parentEl)\n\n\t\t\tobserver.disconnect()\n\t\t})\n\n\t\tobserver.observe(parentEl, { childList: true })\n\t}\n","import { FC } from 'react'\nimport { SignatureCreatorForm } from './pages/SignatureCreatorForm'\nimport { Switch, Route } from 'react-router-dom'\nimport { Instructions } from './pages/Instructions'\n\nexport const Routes: FC = () => {\n\treturn (\n\t\t<Switch>\n\t\t\t<Route exact path='/'>\n\t\t\t\t<SignatureCreatorForm />\n\t\t\t</Route>\n\t\t\t<Route path='/instructions'>\n\t\t\t\t<Instructions />\n\t\t\t</Route>\n\t\t</Switch>\n\t)\n}\n","import { FC, StrictMode } from 'react'\nimport { BrowserRouter as Router, NavLink } from 'react-router-dom'\nimport { Routes } from './Routes'\n\nexport const App: FC = () => {\n\treturn (\n\t\t<>\n\t\t\t<StrictMode>\n\t\t\t\t<Router basename={process.env.PUBLIC_URL}>\n\t\t\t\t\t<nav className='tabs'>\n\t\t\t\t\t\t<NavLink exact activeClassName='active' to='/'>\n\t\t\t\t\t\t\tEmail signature\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t<NavLink activeClassName='active' to='/instructions'>\n\t\t\t\t\t\t\tInstructions\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t</nav>\n\t\t\t\t\t<main className='container'>\n\t\t\t\t\t\t<Routes />\n\t\t\t\t\t</main>\n\t\t\t\t</Router>\n\t\t\t</StrictMode>\n\t\t</>\n\t)\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'chota/dist/chota.css' // can't use .min.css due to CRA transpiling bug\nimport './styles/index.css'\nimport { App } from './App'\nimport { joinPath } from './utils/path'\n\nfetch(joinPath('build-timestamp.txt')).then(async (res) => {\n\tconst ts = await res.text()\n\n\tconsole.info('App last built', new Date(Number(ts)))\n})\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n)\n","import { join } from 'path'\n\nexport const joinPath = (...segments: string[]) =>\n\tjoin(process.env.PUBLIC_URL, ...segments.flat())\n"],"sourceRoot":""}