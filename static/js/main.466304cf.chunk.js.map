{"version":3,"sources":["components/IsolatedStyles.tsx","styles/constants.ts","i18n/i18n.ts","components/QrCode.tsx","utils/formatters.ts","components/SignatureTable.tsx","dom/waitForImageLoad.ts","utils/qrCode.ts","components/RenderedSignature.tsx","dom/toast.ts","hooks/useHtmlId.ts","pages/SignatureCreatorForm.tsx","dom/copyHtml.ts","utils/dom.ts","utils/utils.ts","pages/Instructions.tsx","utils/react.ts","Routes.tsx","App.tsx","index.tsx","utils/path.ts"],"names":["IsolatedStyles","this","shadowRoot","node","attachShadow","mode","props","forceUpdate","children","rest","ref","createPortal","Component","colors","fonts","langs","Object","keys","_i18n","i18n","localeAgnostic","QrCode","alt","size","src","height","width","style","verticalAlign","borderRadius","display","toAssetPath","filename","process","SignatureTable","qrCodeSize","qrCodeDataUri","tr","translations","currentLang","lang","altLang","find","x","direction","borderCollapse","cellPadding","cellSpacing","fontFamily","lineHeight","color","padding","qrCodeAlt","fontSize","textAlign","dangerouslySetInnerHTML","__html","snarkdown","followUs","borderRight","valign","textTransform","fontWeight","logoFull","name","filter","Boolean","join","letterSpacing","jobTitle","href","phone","target","rel","whiteSpace","number","usedForWechat","wechat","colorScheme","email","border","maxWidth","waitForImageLoad","img","Promise","res","rej","onload","onerror","roundRect","ctx","y","w","h","r","beginPath","moveTo","arcTo","closePath","customRoundRect","outerSize","innerSize","paintQrToCanvas","canvas","url","QRCode","toCanvas","margin","err","getQrCode","a","logo","document","createElement","cssText","getContext","innerLogoSize","fillStyle","fill","strokeStyle","lineWidth","stroke","hidden","body","appendChild","aspectRatio","offset","drawImage","console","error","remove","toDataURL","initialLoadingState","loading","undefined","RenderedSignature","useState","data","setData","useEffect","info","all","qrCodeUrl","logoCropped","then","companyInfo","replace","officeAddress","privacyNotice","toastStyleInfo","success","icon","failure","none","toast","options","msg","div","classList","add","opacity","transition","textContent","setTimeout","inc","generateHtmlId","prefix","init","en","zh","addresses","value","defaultValues","JSON","parse","localStorage","getItem","SignatureCreatorForm","useForm","register","handleSubmit","getValues","formRef","reset","useRef","updateValidationMessages","useCallback","current","querySelectorAll","input","validationEl","nextElementSibling","contains","validationMessage","validity","valueMissing","patternMismatch","dataset","patternMsg","addressDatalistId","useHtmlId","changeHandler","form","setItem","stringify","_values","values","savedOfficeAddress","blankOutOfficeAddress","e","currentTarget","className","onInput","required","type","pattern","onClick","onFocus","onBlur","list","id","map","address","idx","defaultChecked","el","selection","getSelection","range","createRange","empty","addRange","selectNode","execCommand","copyHtml","querySelector","renderAnchors","defaultVal","slugs","Proxy","create","get","key","heading","slug","toLowerCase","regex","trim","Instructions","callback","html","setHtml","history","useHistory","fetch","text","link","getAttribute","startsWith","setAttribute","prependPublicUrlToRelativeLinks","addEventListener","nodeName","preventDefault","window","location","origin","open","push","slice","length","hash","scrollIntoView","handleLinks","matchedEl","pipe","decodeURIComponent","CSS","escape","scrollHashIntoView","parentEl","observer","MutationObserver","m","disconnect","observe","childList","Routes","exact","path","App","basename","activeClassName","to","segments","flat","joinPath","ts","Date","Number","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.466304cf.chunk.js","sourcesContent":["// @ts-nocheck\n\n// modified from https://gist.github.com/robertgonzales/b1966af8d2a428a8299663b92fb2fe03\n\nimport { Component, HTMLProps } from 'react'\nimport { createPortal } from 'react-dom'\n\nexport class IsolatedStyles extends Component<HTMLProps & ShadowRootInit> {\n\tcomponentDidMount() {\n\t\tthis.shadowRoot = this.node.attachShadow({ mode: this.props.mode })\n\t\tthis.forceUpdate()\n\t}\n\n\trender() {\n\t\tconst { children, ...rest } = this.props\n\t\treturn (\n\t\t\t<div {...rest} ref={(node) => (this.node = node)}>\n\t\t\t\t{this.shadowRoot && createPortal(children, this.shadowRoot)}\n\t\t\t</div>\n\t\t)\n\t}\n}\n","export const colors = {\n\tbrand: '#e06534',\n\tbigText: '#646464',\n\tsmallText: '#212121',\n}\n\nexport const fonts = {\n\tbody: '\"Arial\", \"Microsoft YaHei\", \"微软雅黑\", \"微軟雅黑\", sans-serif',\n}\n","import _i18n from './_i18n.json'\n\nexport type Lang = Exclude<keyof typeof _i18n, '*'>\n\nexport const langs = Object.keys(_i18n) as Lang[]\n\nexport type Translations = typeof _i18n['en']\n\nexport const i18n: Record<Lang, Translations> = _i18n\nexport const localeAgnostic = _i18n['*']\n","import { FC } from 'react'\n\ntype Props = {\n\talt: string\n\tsize: number\n\tsrc: string\n}\n\nexport const QrCode: FC<Props> = ({ alt, size, src }) => (\n\t<img\n\t\talt={alt}\n\t\tsrc={src}\n\t\theight={size}\n\t\twidth={size}\n\t\tstyle={{\n\t\t\twidth: `${size}px`,\n\t\t\tverticalAlign: 'initial',\n\t\t\tborderRadius: 0,\n\t\t\tdisplay: 'block',\n\t\t\theight: `${size}px`,\n\t\t}}\n\t/>\n)\n","import { regex } from 'fancy-regex'\n\nexport const slugify = (str: string) =>\n\tstr\n\t\t.toLowerCase()\n\t\t.replace(\n\t\t\tregex('gu')`[\n\t\t\t\t^\n\t\t\t\t\\p{Letter}\n\t\t\t\t\\p{Mark}\n\t\t\t\t\\p{Number}\n\t\t\t]+`,\n\t\t\t' ',\n\t\t)\n\t\t.trim()\n\t\t.replace(/\\s+/g, '-')\n\nexport const filenameify = (date: Date) =>\n\tdate.toISOString().replace(/:/g, '_').slice(0, 19) + 'Z'\n\nexport const wrapEmailHtml = (html: string) => `<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta http-equiv=Content-Type content=\"text/html; charset=utf-8\">\n        <title>Email signature</title>\n    </head>\n    <body>\n\t\t${html}\n    </body>\n</html>`\n\nexport const toAssetPath = (filename: string) =>\n\t`${process.env.PUBLIC_URL}/assets/${filename}`\n\nexport const toContentPath = (filename: string) =>\n\t`${process.env.PUBLIC_URL}/content/${filename}`\n","import { FC } from 'react'\nimport { colors, fonts } from '../styles/constants'\nimport { SignatureInfo } from '../types/signatureInfo'\nimport snarkdown from 'snarkdown'\nimport { QrCode } from './QrCode'\nimport { Translations, langs } from '../i18n/i18n'\nimport { toAssetPath } from '../utils/formatters'\n\ntype Props = {\n  translations: Translations\n  qrCodeSize: number\n  qrCodeDataUri: string\n} & SignatureInfo\n\nexport const SignatureTable: FC<Props> = ({ qrCodeSize, qrCodeDataUri, translations: tr, ...props }) => {\n  const currentLang = props.lang\n  const altLang = langs.find((x) => x !== currentLang)!\n\n  return (\n    <table style={{ direction: 'ltr', borderCollapse: 'collapse' }}>\n      <tbody>\n        <tr>\n          <td>\n            <table\n              cellPadding={0}\n              cellSpacing={0}\n              style={{\n                borderCollapse: 'collapse',\n                fontFamily: fonts.body,\n                lineHeight: '1.15',\n                color: '#000',\n              }}\n            >\n              <tbody>\n                <tr>\n                  <td\n                    style={{\n                      verticalAlign: 'top',\n                      padding: '0.01px 14px 0.01px 0.01px',\n                    }}\n                  >\n                    <table\n                      cellPadding={0}\n                      cellSpacing={0}\n                      style={{\n                        borderCollapse: 'collapse',\n                        width: qrCodeSize,\n                      }}\n                    >\n                      <tbody>\n                        <tr>\n                          <td\n                            style={{\n                              padding: '0.01px',\n                            }}\n                          >\n                            <QrCode alt={tr.qrCodeAlt} src={qrCodeDataUri} size={qrCodeSize} />\n                          </td>\n                        </tr>\n                        <tr>\n                          <td\n                            style={{\n                              borderCollapse: 'collapse',\n                              fontFamily: fonts.body,\n                              lineHeight: '1.15',\n                              color: colors.brand,\n                              padding: '6px 0.01px 0.01px 0.01px',\n                              fontSize: '15.6px',\n                              textAlign: 'center',\n                            }}\n                            dangerouslySetInnerHTML={{\n                              __html: snarkdown(tr.followUs),\n                            }}\n                          />\n                        </tr>\n                      </tbody>\n                    </table>\n                  </td>\n                  <td\n                    height={1}\n                    width={0}\n                    style={{\n                      width: '0px',\n                      padding: '0.01px',\n                      borderRight: `2px solid ${colors.brand}`,\n                      height: '1px',\n                      fontSize: '1pt',\n                    }}\n                  >\n                    &nbsp;\n                  </td>\n                  <td\n                    style={{\n                      padding: '0.01px 14px 0.01px 14px',\n                      verticalAlign: 'top',\n                    }}\n                    valign='top'\n                  >\n                    <table\n                      cellPadding={0}\n                      cellSpacing={0}\n                      style={{\n                        borderCollapse: 'collapse',\n                      }}\n                    >\n                      <tbody>\n                        <tr>\n                          <td\n                            style={{\n                              lineHeight: '1.2',\n                              padding: '0.01px 0.01px 10px 0.01px',\n                            }}\n                          >\n                            <span\n                              style={{\n                                fontFamily: fonts.body,\n                                textTransform: 'initial',\n                                fontWeight: 'bold',\n                              }}\n                            >\n                              <span\n                                style={{\n                                  color: colors.bigText,\n                                  fontSize: '15.6px',\n                                }}\n                              >\n                                <img width={150} src={toAssetPath(tr.logoFull)} alt='' />\n                              </span>\n                            </span>\n                          </td>\n                        </tr>\n\n                        <tr>\n                          <td\n                            style={{\n                              lineHeight: '1.2',\n                              padding: '0.01px 0.01px 12px 0.01px',\n                            }}\n                          >\n                            <span\n                              style={{\n                                fontFamily: fonts.body,\n                                textTransform: 'initial',\n                                fontWeight: 'bold',\n                              }}\n                            >\n                              <span\n                                style={{\n                                  color: '#646464',\n                                  fontSize: '15.6px',\n                                }}\n                              >\n                                {[\n                                  props.name[currentLang],\n                                  props.name[altLang],\n                                ].filter(Boolean).join(' ')}\n                              </span>\n                            </span>\n                            <br />\n                            <span\n                              style={{\n                                fontSize: '13.2px',\n                                letterSpacing: '0px',\n                                fontFamily: fonts.body,\n                                textTransform: 'initial',\n                                fontWeight: 'bold',\n                                color: '#646464',\n                              }}\n                            >\n                              {props.jobTitle}\n                            </span>\n                          </td>\n                        </tr>\n                        <tr>\n                          <td\n                            style={{\n                              padding: '0.01px',\n                              lineHeight: 0,\n                            }}\n                          >\n                            <table\n                              cellPadding={0}\n                              cellSpacing={0}\n                              style={{\n                                borderCollapse: 'collapse',\n                              }}\n                            >\n                              <tbody>\n                                <tr>\n                                  <td\n                                    style={{\n                                      padding: '0.01px',\n                                    }}\n                                  >\n                                    <table\n                                      cellPadding={0}\n                                      cellSpacing={0}\n                                      style={{\n                                        borderCollapse: 'collapse',\n                                      }}\n                                    >\n                                      <tbody>\n                                        <tr>\n                                          <td\n                                            style={{\n                                              lineHeight: '0%',\n                                              padding: '0.01px 0.01px 6px 0.01px',\n                                            }}\n                                          >\n                                            <table\n                                              cellPadding={0}\n                                              cellSpacing={0}\n                                              style={{\n                                                borderCollapse: 'collapse',\n                                                lineHeight: '14px',\n                                                fontSize: '12px',\n                                                fontFamily: fonts.body,\n                                              }}\n                                            >\n                                              <tbody>\n                                                <tr>\n                                                  <td\n                                                    style={{\n                                                      padding: '0.01px',\n                                                      fontFamily: fonts.body,\n                                                      fontSize: '12px',\n                                                    }}\n                                                  >\n                                                    <a\n                                                      href={`tel:${props.phone}`}\n                                                      target='_blank'\n                                                      rel='noreferrer'\n                                                      style={{\n                                                        color: '#212121',\n                                                        fontSize: '12px',\n                                                        fontFamily: fonts.body,\n                                                      }}\n                                                    >\n                                                      <span\n                                                        style={{\n                                                          lineHeight: '1.2',\n                                                          fontFamily: fonts.body,\n                                                          whiteSpace: 'nowrap',\n                                                          fontSize: '12px',\n                                                        }}\n                                                      >\n                                                        {props.phone.number}\n                                                      </span>\n                                                    </a>\n                                                    {props.phone.usedForWechat ? ` ${tr.wechat}` : null}\n                                                  </td>\n                                                </tr>\n                                              </tbody>\n                                            </table>\n                                          </td>\n                                          <td\n                                            style={{\n                                              lineHeight: '0%',\n                                              padding: '0.01px 0.01px 6px 0.01px',\n                                            }}\n                                          ></td>\n                                        </tr>\n                                      </tbody>\n                                    </table>\n                                  </td>\n                                </tr>\n                                <tr>\n                                  <td\n                                    style={{\n                                      padding: '0.01px',\n                                    }}\n                                  >\n                                    <table\n                                      cellPadding={0}\n                                      cellSpacing={0}\n                                      style={{\n                                        borderCollapse: 'collapse',\n                                      }}\n                                    >\n                                      <tbody>\n                                        <tr>\n                                          <td\n                                            style={{\n                                              lineHeight: '0%',\n                                              padding: '0.01px 0.01px 6px 0.01px',\n                                            }}\n                                          >\n                                            <table\n                                              cellPadding={0}\n                                              cellSpacing={0}\n                                              style={{\n                                                borderCollapse: 'collapse',\n                                                lineHeight: '14px',\n                                                fontSize: '12px',\n                                                fontFamily: fonts.body,\n                                              }}\n                                            >\n                                              <tbody>\n                                                <tr>\n                                                  <td\n                                                    style={{\n                                                      padding: '0.01px',\n                                                      colorScheme: 'light only',\n                                                      fontFamily: fonts.body,\n                                                      fontSize: '12px',\n                                                    }}\n                                                  >\n                                                    <a\n                                                      href={`mailto:${props.email}`}\n                                                      target='_blank'\n                                                      rel='noreferrer'\n                                                      style={{\n                                                        color: '#212121',\n                                                        fontSize: '12px',\n                                                        fontFamily: fonts.body,\n                                                      }}\n                                                    >\n                                                      <span\n                                                        style={{\n                                                          lineHeight: '1.2',\n                                                          fontFamily: fonts.body,\n                                                          whiteSpace: 'nowrap',\n                                                          fontSize: '12px',\n                                                        }}\n                                                      >\n                                                        {props.email}\n                                                      </span>\n                                                    </a>\n                                                  </td>\n                                                </tr>\n                                              </tbody>\n                                            </table>\n                                          </td>\n                                        </tr>\n                                      </tbody>\n                                    </table>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n            <table\n              cellPadding={0}\n              cellSpacing={0}\n              /* @ts-ignore */\n              border={0}\n              style={{ maxWidth: '600px', width: '100%' }}\n            >\n              <tbody>\n                <tr>\n                  <td style={{ lineHeight: 0 }} />\n                </tr>\n              </tbody>\n            </table>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  )\n}\n","export const waitForImageLoad = (img: HTMLImageElement) =>\n\tnew Promise((res, rej) => {\n\t\timg.onload = res\n\t\timg.onerror = rej\n\t})\n","import QRCode from 'qrcode'\nimport { waitForImageLoad } from '../dom/waitForImageLoad'\nimport { colors } from '../styles/constants'\n\ntype Rect = [x: number, y: number, width: number, height: number]\n\n// https://stackoverflow.com/a/7838871\n\nconst roundRect = (\n\tctx: CanvasRenderingContext2D,\n\tx: number,\n\ty: number,\n\tw: number,\n\th: number,\n\tr: number,\n) => {\n\tif (w < 2 * r) r = w / 2\n\tif (h < 2 * r) r = h / 2\n\n\tctx.beginPath()\n\tctx.moveTo(x + r, y)\n\tctx.arcTo(x + w, y, x + w, y + h, r)\n\tctx.arcTo(x + w, y + h, x, y + h, r)\n\tctx.arcTo(x, y + h, x, y, r)\n\tctx.arcTo(x, y, x + w, y, r)\n\tctx.closePath()\n}\n\nconst customRoundRect = (\n\tctx: CanvasRenderingContext2D,\n\touterSize: number,\n\tinnerSize: number,\n) => {\n\tconst rect: Rect = [\n\t\touterSize / 2 - innerSize / 2,\n\t\touterSize / 2 - innerSize / 2,\n\t\tinnerSize,\n\t\tinnerSize,\n\t]\n\n\troundRect(ctx, ...rect, innerSize / 8)\n}\n\ntype QrCodeInit = {\n\tsize: number\n\turl: string\n\tlogo: string\n}\n\nconst paintQrToCanvas = (\n\tcanvas: HTMLCanvasElement,\n\turl: string,\n\tsize: number,\n) =>\n\tnew Promise<void>((res, rej) => {\n\t\tQRCode.toCanvas(canvas, url, { margin: 2, width: size }, (err) => {\n\t\t\tif (err) {\n\t\t\t\trej(err)\n\t\t\t} else {\n\t\t\t\tres()\n\t\t\t}\n\t\t})\n\t})\n\nexport const getQrCode = async ({ size, url, logo }: QrCodeInit) => {\n\tconst canvas = document.createElement('canvas')\n\n\tcanvas.width = size\n\tcanvas.height = size\n\n\tcanvas.style.cssText = `width: ${size}px; height: ${size}px`\n\n\tawait paintQrToCanvas(canvas, url, size)\n\n\tconst ctx = canvas.getContext('2d')!\n\n\tconst qrCodeSize = size\n\tconst outerLogoSize = size / 3.5\n\tconst innerLogoSize = size / 4\n\n\tcustomRoundRect(ctx, qrCodeSize, outerLogoSize)\n\tctx.fillStyle = '#ffffff'\n\tctx.fill()\n\n\tcustomRoundRect(ctx, qrCodeSize, innerLogoSize)\n\tctx.strokeStyle = colors.brand\n\tctx.lineWidth = 0.5\n\tctx.stroke()\n\n\tconst img = document.createElement('img')\n\timg.hidden = true\n\tdocument.body.appendChild(img)\n\timg.src = logo\n\n\ttry {\n\t\tawait waitForImageLoad(img)\n\n\t\tconst aspectRatio = img.width / img.height\n\n\t\tconst offset = qrCodeSize / 2 - innerLogoSize / 2\n\n\t\tctx.drawImage(\n\t\t\timg,\n\t\t\toffset + aspectRatio,\n\t\t\toffset,\n\t\t\tinnerLogoSize * aspectRatio,\n\t\t\tinnerLogoSize,\n\t\t)\n\t} catch (e) {\n\t\tconsole.error(e)\n\t}\n\n\timg.remove()\n\n\treturn canvas.toDataURL()\n}\n","import { FC, useEffect, useState } from 'react'\nimport { colors, fonts } from '../styles/constants'\nimport { SignatureInfo } from '../types/signatureInfo'\nimport snarkdown from 'snarkdown'\nimport { i18n } from '../i18n/i18n'\nimport { SignatureTable } from './SignatureTable'\nimport { getQrCode } from '../utils/qrCode'\nimport { toAssetPath } from '../utils/formatters'\nimport { waitForImageLoad } from '../dom/waitForImageLoad'\n\ntype LoadingState =\n\t| {\n\t\t\tloading: false\n\t\t\tqrCodeDataUri: string\n\t  }\n\t| {\n\t\t\tloading: true\n\t\t\tqrCodeDataUri?: undefined\n\t  }\n\nconst initialLoadingState = {\n\tloading: true,\n\tqrCodeDataUri: undefined,\n} as LoadingState\n\nexport const RenderedSignature: FC<SignatureInfo & { qrCodeSize: number }> = (\n\tprops,\n) => {\n\tconst [data, setData] = useState(initialLoadingState)\n\n\tconst currentLang = props.lang\n\n\tconst tr = i18n[currentLang]\n\n\tuseEffect(() => {\n\t\tsetData(initialLoadingState)\n\t\tconsole.info('Loading QR code...')\n\n\t\tconst img = document.createElement('img')\n\t\timg.src = toAssetPath(tr.logoFull)\n\n\t\tPromise.all([\n\t\t\tgetQrCode({\n\t\t\t\tsize: props.qrCodeSize,\n\t\t\t\turl: tr.qrCodeUrl,\n\t\t\t\tlogo: toAssetPath(tr.logoCropped),\n\t\t\t}),\n\t\t\twaitForImageLoad(img),\n\t\t]).then(async ([qrCodeDataUri]) => {\n\t\t\tsetData({\n\t\t\t\tloading: false,\n\t\t\t\tqrCodeDataUri,\n\t\t\t})\n\t\t})\n\t}, [props.qrCodeSize, tr.logoCropped, tr.qrCodeUrl, tr.logoFull])\n\n\treturn data.loading ? (\n\t\t<>Loading...</>\n\t) : (\n\t\t<div>\n\t\t\t<div>\n\t\t\t\t<SignatureTable\n\t\t\t\t\t{...{\n\t\t\t\t\t\t...props,\n\t\t\t\t\t\tqrCodeSize: props.qrCodeSize,\n\t\t\t\t\t\tqrCodeDataUri: data.qrCodeDataUri,\n\t\t\t\t\t}}\n\t\t\t\t\ttranslations={tr}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<p\n\t\t\t\tstyle={{\n\t\t\t\t\tfontFamily: fonts.body,\n\t\t\t\t\tlineHeight: 1.6,\n\t\t\t\t\tmargin: '12px 0.01px 0.01px 0.01px',\n\t\t\t\t\tcolor: colors.smallText,\n\t\t\t\t\tfontSize: 12,\n\t\t\t\t}}\n\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t__html: snarkdown(\n\t\t\t\t\t\ttr.companyInfo.replace(\n\t\t\t\t\t\t\t'{officeAddress}',\n\t\t\t\t\t\t\tprops.officeAddress,\n\t\t\t\t\t\t),\n\t\t\t\t\t),\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<p\n\t\t\t\tstyle={{\n\t\t\t\t\tfontFamily: fonts.body,\n\t\t\t\t\tlineHeight: 1.6,\n\t\t\t\t\tmargin: '12px 0.01px 0.01px 0.01px',\n\t\t\t\t\tcolor: colors.smallText,\n\t\t\t\t\tfontSize: 12,\n\t\t\t\t}}\n\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t__html: snarkdown(tr.privacyNotice),\n\t\t\t\t}}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n","type ToastStyle = 'success' | 'failure' | 'none'\n\ntype ToastOptions = {\n\tstyle: ToastStyle\n}\n\nconst toastStyleInfo: Record<ToastStyle, { icon: string }> = {\n\tsuccess: { icon: '✅' },\n\tfailure: { icon: '❌' },\n\tnone: { icon: '' },\n}\n\nexport const toast =\n\t(options: ToastOptions = { style: 'none' }) =>\n\t(msg: string) => {\n\t\tconst div = document.createElement('div')\n\t\tdiv.classList.add('toast')\n\t\tdiv.style.opacity = '0'\n\t\tdiv.style.transition = 'opacity 0.6s'\n\n\t\tdiv.textContent = [toastStyleInfo[options.style].icon, msg]\n\t\t\t.filter(Boolean)\n\t\t\t.join(' ')\n\n\t\tdocument.body.appendChild(div)\n\n\t\tsetTimeout(() => {\n\t\t\tdiv.style.opacity = '1'\n\t\t}, 10)\n\n\t\tsetTimeout(() => {\n\t\t\tdiv.style.transition = 'opacity 1s'\n\t\t}, 200)\n\n\t\tsetTimeout(() => {\n\t\t\tdiv.style.opacity = '0'\n\t\t}, 1200)\n\n\t\tsetTimeout(() => {\n\t\t\tdiv.remove()\n\t\t}, 2000)\n\t}\n","import { useState } from 'react'\n\nlet inc = 0\n\nconst generateHtmlId = (prefix = 'id') => `${prefix}-${++inc}`\n\nexport const useHtmlId = (prefix = 'id') => {\n\tconst [htmlId /* , setHtmlId */] = useState(generateHtmlId(prefix))\n\n\treturn htmlId\n}\n","import React, { FC, useCallback, useEffect, useRef } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { IsolatedStyles } from '../components/IsolatedStyles'\nimport { RenderedSignature } from '../components/RenderedSignature'\nimport { copyHtml } from '../dom/copyHtml'\nimport { useHtmlId } from '../hooks/useHtmlId'\nimport { localeAgnostic } from '../i18n/i18n'\nimport { SignatureInfo } from '../types/signatureInfo'\n\nconst qrCodeSize = 120\n\nconst init: SignatureInfo = {\n\tlang: 'en',\n\tname: {\n\t\ten: 'Jane Doe',\n\t\tzh: '杜娟',\n\t},\n\tjobTitle: 'Senior Data Wrangler',\n\tphone: { number: '+86 138 8888 8888', usedForWechat: false },\n\temail: 'jane.doe@clearlyloc.com',\n\tofficeAddress: localeAgnostic.addresses[0].value,\n}\n\nconst defaultValues: SignatureInfo =\n\tJSON.parse(localStorage.getItem('signatureCreator') ?? 'null') ?? init\n\nexport const SignatureCreatorForm: FC = () => {\n\tconst { register, handleSubmit, getValues, reset } = useForm<SignatureInfo>(\n\t\t{\n\t\t\tdefaultValues,\n\t\t},\n\t)\n\n\tconst formRef = useRef<HTMLFormElement>(null)\n\n\tconst updateValidationMessages = useCallback(() => {\n\t\tfor (const input of formRef.current?.querySelectorAll('input') ?? []) {\n\t\t\tconst validationEl = input.nextElementSibling\n\n\t\t\tif (\n\t\t\t\tvalidationEl &&\n\t\t\t\tvalidationEl.classList.contains('validation-msg')\n\t\t\t) {\n\t\t\t\tlet { validationMessage, validity } = input\n\n\t\t\t\tif (!validity.valueMissing && validity.patternMismatch) {\n\t\t\t\t\tvalidationMessage =\n\t\t\t\t\t\tinput.dataset.patternMsg ?? validationMessage\n\t\t\t\t}\n\n\t\t\t\tvalidationEl.textContent = validationMessage\n\t\t\t}\n\t\t}\n\t}, [])\n\n\tconst addressDatalistId = useHtmlId(`address-list`)\n\n\tuseEffect(() => {\n\t\t// once on load\n\t\tupdateValidationMessages()\n\t}, [updateValidationMessages])\n\n\tconst changeHandler = useCallback(\n\t\t(form: SignatureInfo) => {\n\t\t\tlocalStorage.setItem('signatureCreator', JSON.stringify(form))\n\n\t\t\tupdateValidationMessages()\n\t\t},\n\t\t[updateValidationMessages],\n\t)\n\n\tconst _values = getValues()\n\n\tconst values = _values?.name ? _values : defaultValues\n\n\tconst savedOfficeAddress = useRef(values.officeAddress)\n\n\tconst blankOutOfficeAddress = (\n\t\te:\n\t\t\t| React.FocusEvent<HTMLInputElement>\n\t\t\t| React.MouseEvent<HTMLInputElement>,\n\t) => {\n\t\tsavedOfficeAddress.current = values.officeAddress\n\n\t\te.currentTarget.value = ''\n\t}\n\n\tconst revertOfficeAddress = (e: React.FocusEvent<HTMLInputElement>) => {\n\t\te.currentTarget.value =\n\t\t\te.currentTarget.value || savedOfficeAddress.current\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<h1>Email signature</h1>\n\n\t\t\t<div className='row'>\n\t\t\t\t<form\n\t\t\t\t\tclassName='col'\n\t\t\t\t\tref={formRef}\n\t\t\t\t\tonInput={handleSubmit(changeHandler)}\n\t\t\t\t>\n\t\t\t\t\t<div className='magic-flex'>\n\t\t\t\t\t\t<div className='spaced col-first'>\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\tEnglish name\n\t\t\t\t\t\t\t\t<input required name='name.en' ref={register} />\n\t\t\t\t\t\t\t\t<div className='validation-msg'></div>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='spaced col-last'>\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\tChinese name (optional)\n\t\t\t\t\t\t\t\t<input name='name.zh' ref={register} />\n\t\t\t\t\t\t\t\t<div className='validation-msg'></div>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='spaced'>\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\tJob title\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\tname='jobTitle'\n\t\t\t\t\t\t\t\t\tref={register}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='validation-msg'></div>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='spaced'>\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\tWork email\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\t\tref={register}\n\t\t\t\t\t\t\t\t\tpattern='.+@clearlyloc.com'\n\t\t\t\t\t\t\t\t\tdata-pattern-msg='Must end with @clearlyloc.com'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='validation-msg'></div>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='spaced'>\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\tPhone number (including country code)\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\ttype='tel'\n\t\t\t\t\t\t\t\t\tname='phone.number'\n\t\t\t\t\t\t\t\t\tref={register}\n\t\t\t\t\t\t\t\t\tpattern='\\+[\\d ]+'\n\t\t\t\t\t\t\t\t\tdata-pattern-msg='Must start with a country code in the format +XX (e.g. +86 for China) and contain only numbers and spaces'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='validation-msg'></div>\n\t\t\t\t\t\t\t</label>\n\n\t\t\t\t\t\t\t<label className='secondary-field'>\n\t\t\t\t\t\t\t\tUsed for WeChat?\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\tname='phone.usedForWechat'\n\t\t\t\t\t\t\t\t\tref={register}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='spaced'>\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\tOffice address\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tonClick={blankOutOfficeAddress}\n\t\t\t\t\t\t\t\t\tonFocus={blankOutOfficeAddress}\n\t\t\t\t\t\t\t\t\tonBlur={revertOfficeAddress}\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tname='officeAddress'\n\t\t\t\t\t\t\t\t\tref={register}\n\t\t\t\t\t\t\t\t\tlist={addressDatalistId}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='validation-msg'></div>\n\t\t\t\t\t\t\t</label>\n\n\t\t\t\t\t\t\t<datalist id={addressDatalistId}>\n\t\t\t\t\t\t\t\t{localeAgnostic.addresses.map(\n\t\t\t\t\t\t\t\t\t(address, idx) => (\n\t\t\t\t\t\t\t\t\t\t<option key={idx} value={address.value}>\n\t\t\t\t\t\t\t\t\t\t\t{address.name}\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</datalist>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='spaced'>\n\t\t\t\t\t\t\t<fieldset>\n\t\t\t\t\t\t\t\t<legend>Signature language</legend>\n\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\tEnglish\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\ttype='radio'\n\t\t\t\t\t\t\t\t\t\tname='lang'\n\t\t\t\t\t\t\t\t\t\tvalue='en'\n\t\t\t\t\t\t\t\t\t\tref={register}\n\t\t\t\t\t\t\t\t\t\tdefaultChecked\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</label>{' '}\n\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\tChinese\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\ttype='radio'\n\t\t\t\t\t\t\t\t\t\tname='lang'\n\t\t\t\t\t\t\t\t\t\tvalue='zh'\n\t\t\t\t\t\t\t\t\t\tref={register}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\n\t\t\t\t<div className='col'>\n\t\t\t\t\t<div className='spaced'>\n\t\t\t\t\t\t<output>\n\t\t\t\t\t\t\t<IsolatedStyles\n\t\t\t\t\t\t\t\tid='rendered-signature-container'\n\t\t\t\t\t\t\t\tmode='open'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<RenderedSignature\n\t\t\t\t\t\t\t\t\t{...{ ...values, qrCodeSize }}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</IsolatedStyles>\n\t\t\t\t\t\t</output>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\tcopyHtml(\n\t\t\t\t\t\t\t\tdocument\n\t\t\t\t\t\t\t\t\t.querySelector(\n\t\t\t\t\t\t\t\t\t\t'#rendered-signature-container',\n\t\t\t\t\t\t\t\t\t)!\n\t\t\t\t\t\t\t\t\t.shadowRoot?.querySelector('*')!,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclassName='button primary'\n\t\t\t\t\t\ttype='button'\n\t\t\t\t\t>\n\t\t\t\t\t\tCopy\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t)\n}\n","import { toast } from './toast'\n\nexport const copyHtml = (el: HTMLElement) => {\n\tconst selection = document.getSelection()\n\tconst range = document.createRange()\n\n\tselection?.empty()\n\tselection?.addRange(range)\n\n\trange.selectNode(el)\n\n\tconst succeeded = document.execCommand('copy')\n\n\tif (succeeded) {\n\t\ttoast({ style: 'success' })('Copied')\n\t} else {\n\t\ttoast({ style: 'failure' })('Failed to copy')\n\t}\n\n\tselection?.empty()\n}\n","import { useHistory } from 'react-router-dom'\nimport { pipe } from 'fp-ts/function'\nimport { slugify } from './formatters'\nimport { hashWithDefault } from './utils'\n\nexport const renderAnchors = (el: HTMLElement) => {\n\tconst slugs = hashWithDefault(0)\n\n\tfor (const heading of el.querySelectorAll(\n\t\t'h2, h3, h4, h5, h6, .anchored',\n\t)) {\n\t\tif (heading.textContent) {\n\t\t\tconst slug = slugify(heading.textContent) || 'heading'\n\n\t\t\tconst x = ++slugs[slug]\n\n\t\t\theading.id = [slug, x > 1 && x].filter(Boolean).join('-')\n\t\t\theading.classList.add('anchored')\n\t\t}\n\t}\n}\n\nexport const prependPublicUrlToRelativeLinks = (el: HTMLElement) => {\n\tfor (const link of el.querySelectorAll('a')) {\n\t\tconst href = link.getAttribute('href')\n\n\t\tif (href?.startsWith('/')) {\n\t\t\tlink.setAttribute('href', process.env.PUBLIC_URL + href)\n\t\t}\n\t}\n}\n\nexport const handleLinks = (\n\tel: HTMLElement,\n\thistory: ReturnType<typeof useHistory>,\n) => {\n\tel.addEventListener('click', (e) => {\n\t\tconst target = e.target as HTMLAnchorElement\n\t\tconst href = target.getAttribute('href')\n\n\t\tif (target.nodeName === 'A' && href) {\n\t\t\te.preventDefault()\n\n\t\t\tif (\n\t\t\t\thref.startsWith('http') &&\n\t\t\t\t!href.startsWith(window.location.origin)\n\t\t\t) {\n\t\t\t\twindow.open(href, '_blank', 'noopener noreferrer')\n\t\t\t} else {\n\t\t\t\thistory.push(href.slice(process.env.PUBLIC_URL.length))\n\t\t\t}\n\t\t} else if (target.classList.contains('anchored')) {\n\t\t\twindow.location.hash = target.id\n\t\t\ttarget.scrollIntoView(true)\n\t\t}\n\t})\n}\n\nexport const scrollHashIntoView = (el: HTMLElement) => {\n\tif (window.location.hash) {\n\t\tsetTimeout(() => {\n\t\t\tconst matchedEl = pipe(\n\t\t\t\twindow.location.hash.slice(1),\n\t\t\t\tdecodeURIComponent,\n\t\t\t\tCSS.escape,\n\t\t\t\t(id) => el.querySelector(`#${id}`),\n\t\t\t)\n\n\t\t\tmatchedEl?.scrollIntoView(true)\n\t\t\t// 100ms to counteract browser position retaining\n\t\t}, 100)\n\t}\n}\n\nexport const htmlToFragment = (html: string) => {\n\tconst temp = document.createElement('template')\n\ttemp.innerHTML = html\n\n\treturn temp.content\n}\n","export const hashWithDefault = <T>(defaultVal: T) =>\n\tnew Proxy(Object.create(null) as Record<string, T>, {\n\t\tget(target, key: string) {\n\t\t\treturn key in target ? target[key] : defaultVal\n\t\t},\n\t})\n","import { FC, useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport {\n\thandleLinks,\n\tprependPublicUrlToRelativeLinks,\n\trenderAnchors,\n\tscrollHashIntoView,\n} from '../utils/dom'\nimport { toContentPath } from '../utils/formatters'\nimport { onHtmlRender } from '../utils/react'\n\nexport const Instructions: FC = () => {\n\tconst [html, setHtml] = useState('')\n\n\tconst history = useHistory()\n\n\tuseEffect(() => {\n\t\tfetch(toContentPath('instructions.html')).then(async (res) => {\n\t\t\tconst html = await res.text()\n\n\t\t\tsetHtml(html)\n\t\t})\n\t}, [])\n\n\treturn (\n\t\t<div\n\t\t\tref={onHtmlRender((el) => {\n\t\t\t\t// setup\n\t\t\t\trenderAnchors(el)\n\t\t\t\tprependPublicUrlToRelativeLinks(el)\n\t\t\t\thandleLinks(el, history)\n\n\t\t\t\t// effects\n\t\t\t\tscrollHashIntoView(el)\n\t\t\t})}\n\t\t\tdangerouslySetInnerHTML={{ __html: html }}\n\t\t/>\n\t)\n}\n","export const onHtmlRender =\n\t(callback: (parentEl: HTMLElement) => void) =>\n\t(parentEl: HTMLElement | null) => {\n\t\tif (!parentEl) return\n\n\t\tconst observer = new MutationObserver((m) => {\n\t\t\tcallback(parentEl)\n\n\t\t\tobserver.disconnect()\n\t\t})\n\n\t\tobserver.observe(parentEl, { childList: true })\n\t}\n","import { FC } from 'react'\nimport { SignatureCreatorForm } from './pages/SignatureCreatorForm'\nimport { Switch, Route } from 'react-router-dom'\nimport { Instructions } from './pages/Instructions'\n\nexport const Routes: FC = () => {\n\treturn (\n\t\t<Switch>\n\t\t\t<Route exact path='/'>\n\t\t\t\t<SignatureCreatorForm />\n\t\t\t</Route>\n\t\t\t<Route path='/instructions'>\n\t\t\t\t<Instructions />\n\t\t\t</Route>\n\t\t</Switch>\n\t)\n}\n","import { FC, StrictMode } from 'react'\nimport { BrowserRouter as Router, NavLink } from 'react-router-dom'\nimport { Routes } from './Routes'\n\nexport const App: FC = () => {\n\treturn (\n\t\t<>\n\t\t\t<StrictMode>\n\t\t\t\t<Router basename={process.env.PUBLIC_URL}>\n\t\t\t\t\t<nav className='tabs'>\n\t\t\t\t\t\t<NavLink exact activeClassName='active' to='/'>\n\t\t\t\t\t\t\tEmail signature\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t<NavLink activeClassName='active' to='/instructions'>\n\t\t\t\t\t\t\tInstructions\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t</nav>\n\t\t\t\t\t<main className='container'>\n\t\t\t\t\t\t<Routes />\n\t\t\t\t\t</main>\n\t\t\t\t</Router>\n\t\t\t</StrictMode>\n\t\t</>\n\t)\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'chota/dist/chota.css' // can't use .min.css due to CRA transpiling bug\nimport './styles/index.css'\nimport { App } from './App'\nimport { joinPath } from './utils/path'\n\nfetch(joinPath('build-timestamp.txt')).then(async (res) => {\n\tconst ts = await res.text()\n\n\tconsole.info('App last built', new Date(Number(ts)))\n})\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n)\n","import { join } from 'path'\n\nexport const joinPath = (...segments: string[]) =>\n\tjoin(process.env.PUBLIC_URL, ...segments.flat())\n"],"sourceRoot":""}