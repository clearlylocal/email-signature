{"version":3,"sources":["components/Footer.tsx","components/IsolatedStyles.tsx","styles/constants.ts","i18n/i18n.ts","components/QrCode.tsx","utils/formatters.ts","components/HtmlEmailLink.tsx","components/SignatureTable.tsx","dom/waitForImageLoad.ts","utils/qrCode.ts","components/RenderedSignature.tsx","dom/toast.ts","hooks/useHtmlId.ts","pages/SignatureCreatorForm.tsx","dom/copyHtml.ts","utils/dom.ts","utils/utils.ts","pages/Instructions.tsx","utils/react.ts","Routes.tsx","App.tsx","index.tsx"],"names":["Footer","className","buildInfo","hash","Date","ts","toISOString","replace","IsolatedStyles","children","rest","ref","useRef","useState","shadowRoot","setShadowRoot","useEffect","current","attachShadow","mode","createPortal","colors","fonts","sizes","Object","fromEntries","entries","textSmall","textMedium","textLarge","qrCode","paddingSmall","paddingMedium","paddingLarge","logoWidth","map","k","v","parseFloat","toFixed","langs","keys","_i18n","i18n","localeAgnostic","QrCode","alt","size","src","height","width","style","verticalAlign","borderRadius","display","toAssetPath","filename","process","escapeHtml","str","assign","document","createElement","textContent","innerHTML","safelyWrapCjk","split","x","i","join","HtmlEmailLink","href","target","rel","color","fontSize","fontFamily","lineHeight","whiteSpace","SignatureTable","data","qrCodeSize","qrCodeDataUri","tr","translations","props","currentLang","lang","altLang","find","phoneUsages","phone","usedForWechat","wechat","usedForWhatsapp","whatsapp","filter","direction","borderCollapse","cellPadding","cellSpacing","padding","qrCodeAlt","textAlign","dangerouslySetInnerHTML","__html","pipe","followUs","snarkdown","borderRight","valign","textTransform","fontWeight","logoFull","name","Boolean","letterSpacing","jobTitle","number","some","wordDelim","parens","content","Intl","ListFormat","locale","format","replaceAll","_","m","colorScheme","email","border","maxWidth","waitForImageLoad","img","Promise","res","rej","onload","onerror","roundRect","ctx","y","w","h","r","beginPath","moveTo","arcTo","closePath","customRoundRect","outerSize","innerSize","paintQrToCanvas","canvas","url","QRCode","toCanvas","margin","err","getQrCode","a","logo","cssText","getContext","innerLogoSize","fillStyle","fill","strokeStyle","lineWidth","stroke","hidden","body","appendChild","aspectRatio","offset","drawImage","console","error","remove","toDataURL","initialLoadingState","loading","undefined","BareLink","RenderedSignature","setData","info","all","qrCodeUrl","logoCropped","then","companyName","officeAddress","websiteUrl","privacyNotice","toastStyleInfo","success","icon","failure","none","toast","options","msg","div","classList","add","opacity","transition","setTimeout","inc","generateHtmlId","prefix","init","en","zh","addresses","value","defaultValues","JSON","parse","localStorage","getItem","SignatureCreatorForm","useForm","register","handleSubmit","getValues","setValue","formRef","updateValidationMessages","useCallback","querySelectorAll","validated","validationEl","querySelector","msgs","input","validationMessage","validity","valueMissing","patternMismatch","dataset","patternMsg","addressDatalistId","useHtmlId","el","o","placeholder","String","changeHandler","form","setItem","stringify","_values","values","savedOfficeAddress","blankOutOfficeAddress","e","currentTarget","revertOfficeAddress","nativeEvent","KeyboardEvent","key","reverted","dispatchEvent","Event","bubbles","cancelable","onInput","required","type","defaultChecked","pattern","onClick","onFocus","onBlur","onKeyDown","list","id","address","idx","selection","getSelection","range","createRange","empty","addRange","selectNode","execCommand","copyHtml","renderAnchors","defaultVal","slugs","Proxy","create","get","heading","slug","toLowerCase","regex","trim","Instructions","callback","html","setHtml","history","useHistory","fetch","text","link","getAttribute","startsWith","setAttribute","prependPublicUrlToRelativeLinks","addEventListener","nodeName","preventDefault","window","location","origin","open","push","slice","length","contains","scrollIntoView","handleLinks","matchedEl","decodeURIComponent","CSS","escape","scrollHashIntoView","parentEl","observer","MutationObserver","disconnect","observe","childList","Routes","exact","path","App","basename","activeClassName","to","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.539419a7.chunk.js","sourcesContent":["import { FC } from 'react'\nimport buildInfo from '../buildInfo.json'\n\nexport const Footer: FC = () => (\n\t<footer className='container'>\n\t\t<div className='grayed-out'>\n\t\t\tVersion {buildInfo.hash}, updated{' '}\n\t\t\t{new Date(buildInfo.ts)\n\t\t\t\t.toISOString()\n\t\t\t\t.replace('T', ' ')\n\t\t\t\t.replace('Z', ' (UTC)')\n\t\t\t\t.replace(/\\.\\d+/, '')}\n\t\t</div>\n\t</footer>\n)\n","import { FC, HTMLProps, useEffect, useRef, useState } from 'react'\nimport { createPortal } from 'react-dom'\n\nexport const IsolatedStyles: FC<HTMLProps<HTMLDivElement>> = ({\n\tchildren,\n\t...rest\n}) => {\n\tconst ref = useRef<HTMLDivElement>(null)\n\n\tconst [shadowRoot, setShadowRoot] = useState<null | ShadowRoot>(null)\n\n\tuseEffect(() => {\n\t\tif (!shadowRoot && ref.current) {\n\t\t\tconst shadowRoot = ref.current.attachShadow({ mode: 'open' })\n\t\t\tsetShadowRoot(shadowRoot)\n\t\t}\n\t}, [shadowRoot])\n\n\treturn (\n\t\t<div {...rest} ref={ref}>\n\t\t\t{shadowRoot &&\n\t\t\t\tcreatePortal(children, shadowRoot as unknown as Element)}\n\t\t</div>\n\t)\n}\n","export const colors = {\n\tbrand: '#e06534',\n\tbigText: '#646464',\n\tsmallText: '#646464',\n\tlink: '#646464',\n}\n\nexport const fonts = {\n\tbody: '\"Arial\", sans-serif',\n\tcjk: '黑体, 黑體, SimHei',\n}\n\nconst _sizes = {\n\ttextSmall: 12,\n\ttextMedium: 13.2,\n\ttextLarge: 15.6,\n\n\tqrCode: 120,\n\n\tpaddingSmall: 6,\n\tpaddingMedium: 12,\n\tpaddingLarge: 14,\n\n\tlogoWidth: 150,\n}\n\n// adjust to scale the entire signature up or down\nconst SCALE = 0.9\n\nexport const sizes = Object.fromEntries(\n\tObject.entries(_sizes).map(([k, v]) => [\n\t\tk,\n\t\tparseFloat((v * SCALE).toFixed(1)),\n\t]),\n) as typeof _sizes\n","import _i18n from './_i18n.json'\n\nexport type Lang = Exclude<keyof typeof _i18n, '*'>\n\nexport const langs = Object.keys(_i18n) as Lang[]\n\nexport type Translations = typeof _i18n['en']\n\nexport const i18n: Record<Lang, Translations> = _i18n\nexport const localeAgnostic = _i18n['*']\n\nexport const renderPlaceholders = (str: string, data: Record<string, string>) =>\n\tstr.replaceAll(/\\{\\{(\\w+)\\}\\}/gu, (_, m) => data[m])\n","import { FC } from 'react'\n\ntype Props = {\n\talt: string\n\tsize: number\n\tsrc: string\n}\n\nexport const QrCode: FC<Props> = ({ alt, size, src }) => (\n\t<img\n\t\talt={alt}\n\t\tsrc={src}\n\t\theight={size}\n\t\twidth={size}\n\t\tstyle={{\n\t\t\twidth: `${size}px`,\n\t\t\tverticalAlign: 'initial',\n\t\t\tborderRadius: 0,\n\t\t\tdisplay: 'block',\n\t\t\theight: `${size}px`,\n\t\t}}\n\t/>\n)\n","import { regex } from 'fancy-regex'\nimport { fonts } from '../styles/constants'\n\nexport const slugify = (str: string) =>\n\tstr\n\t\t.toLowerCase()\n\t\t.replace(\n\t\t\tregex('gu')`[\n\t\t\t\t^\n\t\t\t\t\\p{Letter}\n\t\t\t\t\\p{Mark}\n\t\t\t\t\\p{Number}\n\t\t\t]+`,\n\t\t\t' ',\n\t\t)\n\t\t.trim()\n\t\t.replace(/\\s+/g, '-')\n\nexport const filenameify = (date: Date) =>\n\tdate.toISOString().replace(/:/g, '_').slice(0, 19) + 'Z'\n\nexport const wrapEmailHtml = (html: string) => `<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta http-equiv=Content-Type content=\"text/html; charset=utf-8\">\n        <title>Email signature</title>\n    </head>\n    <body>\n\t\t${html}\n    </body>\n</html>`\n\nexport const toAssetPath = (filename: string) =>\n\t`${process.env.PUBLIC_URL}/assets/${filename}`\n\nexport const toContentPath = (filename: string) =>\n\t`${process.env.PUBLIC_URL}/content/${filename}`\n\nconst escapeHtml = (str: string) =>\n\tObject.assign(document.createElement('div'), { textContent: str }).innerHTML\n\nexport const safelyWrapCjk = (str: string) =>\n\tstr\n\t\t.split(/([\\p{Script=Han}\\uff01-\\uff5e。、·《》〈〉]+)/u)\n\t\t.map((x, i) =>\n\t\t\ti % 2\n\t\t\t\t? `<span style='font-family: ${fonts.cjk}'>${escapeHtml(\n\t\t\t\t\t\tx,\n\t\t\t\t  )}</span>`\n\t\t\t\t: escapeHtml(x),\n\t\t)\n\t\t.join('')\n","import { FC } from 'react'\nimport { colors, fonts, sizes } from '../styles/constants'\n\ntype Props = {\n\thref: string\n}\n\nexport const HtmlEmailLink: FC<Props> = ({ href, children }) => {\n\treturn (\n\t\t<a\n\t\t\ttarget='_blank'\n\t\t\trel='noreferrer'\n\t\t\tstyle={{\n\t\t\t\tcolor: colors.link,\n\t\t\t\tfontSize: sizes.textSmall,\n\t\t\t\tfontFamily: fonts.body,\n\t\t\t}}\n\t\t\thref={href}\n\t\t>\n\t\t\t<span\n\t\t\t\tstyle={{\n\t\t\t\t\tlineHeight: '1.2',\n\t\t\t\t\tfontFamily: fonts.body,\n\t\t\t\t\twhiteSpace: 'nowrap',\n\t\t\t\t\tfontSize: sizes.textSmall,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</span>\n\t\t</a>\n\t)\n}\n","import { FC } from 'react'\nimport { colors, fonts, sizes } from '../styles/constants'\nimport { SignatureInfo } from '../types/signatureInfo'\nimport snarkdown from 'snarkdown'\nimport { QrCode } from './QrCode'\nimport { Translations, langs, renderPlaceholders } from '../i18n/i18n'\nimport { safelyWrapCjk, toAssetPath } from '../utils/formatters'\nimport { pipe } from 'fp-ts/lib/function'\nimport { HtmlEmailLink } from './HtmlEmailLink'\n\ntype Props = {\n  translations: Translations\n  qrCodeSize: number\n  qrCodeDataUri: string\n} & SignatureInfo\n\n// https://stackoverflow.com/questions/57964557/how-can-i-add-types-to-use-intl-listformat-in-node-v12\ndeclare namespace Intl {\n  class ListFormat {\n    constructor(locales?: string | string[], options?: unknown);\n    public format: (items: string[]) => string;\n  }\n}\n\nexport const SignatureTable: FC<Props> = ({ qrCodeSize, qrCodeDataUri, translations: tr, ...props }) => {\n  const currentLang = props.lang\n  const altLang = langs.find((x) => x !== currentLang)!\n\n  const phoneUsages = [\n    props.phone.usedForWechat && tr.wechat,\n    props.phone.usedForWhatsapp && tr.whatsapp,\n  ].filter((x): x is string => typeof x === 'string')\n\n  return (\n    <table style={{ direction: 'ltr', borderCollapse: 'collapse' }}>\n      <tbody>\n        <tr>\n          <td>\n            <table\n              cellPadding={0}\n              cellSpacing={0}\n              style={{\n                borderCollapse: 'collapse',\n                fontFamily: fonts.body,\n                lineHeight: '1.15',\n                color: '#000',\n              }}\n            >\n              <tbody>\n                <tr>\n                  <td\n                    style={{\n                      verticalAlign: 'top',\n                      padding: `0.01px ${sizes.paddingLarge}px 0.01px 0.01px`,\n                    }}\n                  >\n                    <table\n                      cellPadding={0}\n                      cellSpacing={0}\n                      style={{\n                        borderCollapse: 'collapse',\n                        width: qrCodeSize,\n                      }}\n                    >\n                      <tbody>\n                        <tr>\n                          <td\n                            style={{\n                              padding: '0.01px',\n                            }}\n                          >\n                            <QrCode alt={tr.qrCodeAlt} src={qrCodeDataUri} size={qrCodeSize} />\n                          </td>\n                        </tr>\n                        <tr>\n                          <td\n                            style={{\n                              borderCollapse: 'collapse',\n                              fontFamily: fonts.body,\n                              lineHeight: '1.15',\n                              color: colors.brand,\n                              padding: `${sizes.paddingSmall}px 0.01px 0.01px 0.01px`,\n                              fontSize: sizes.textLarge,\n                              textAlign: 'center',\n                            }}\n                            dangerouslySetInnerHTML={{\n                              __html: pipe(tr.followUs, snarkdown, safelyWrapCjk)\n                            }}\n                          />\n                        </tr>\n                      </tbody>\n                    </table>\n                  </td>\n                  <td\n                    height={1}\n                    width={0}\n                    style={{\n                      width: '0px',\n                      padding: '0.01px',\n                      borderRight: `2px solid ${colors.brand}`,\n                      height: '1px',\n                      fontSize: 1,\n                    }}\n                  >\n                    &nbsp;\n                  </td>\n                  <td\n                    style={{\n                      padding: `0.01px ${sizes.paddingLarge}px 0.01px ${sizes.paddingLarge}px`,\n                      verticalAlign: 'top',\n                    }}\n                    valign='top'\n                  >\n                    <table\n                      cellPadding={0}\n                      cellSpacing={0}\n                      style={{\n                        borderCollapse: 'collapse',\n                      }}\n                    >\n                      <tbody>\n                        <tr>\n                          <td\n                            style={{\n                              lineHeight: '1.2',\n                              padding: '0.01px 0.01px 10px 0.01px',\n                            }}\n                          >\n                            <span\n                              style={{\n                                fontFamily: fonts.body,\n                                textTransform: 'initial',\n                                fontWeight: 'bold',\n                              }}\n                            >\n                              <span\n                                style={{\n                                  fontSize: sizes.textLarge,\n                                }}\n                              >\n                                <img\n                                  alt=''\n                                  width={sizes.logoWidth}\n                                  style={{\n                                    width: sizes.logoWidth,\n                                  }}\n                                  src={toAssetPath(tr.logoFull)}\n                                />\n                              </span>\n                            </span>\n                          </td>\n                        </tr>\n\n                        <tr>\n                          <td\n                            style={{\n                              lineHeight: '1.2',\n                              padding: `0.01px 0.01px ${sizes.paddingMedium}px 0.01px`,\n                            }}\n                          >\n                            <span\n                              style={{\n                                fontFamily: fonts.body,\n                                textTransform: 'initial',\n                                fontWeight: 'bold',\n                              }}\n                            >\n                              <span\n                                style={{\n                                  color: colors.bigText,\n                                  fontSize: sizes.textLarge,\n                                }}\n                                dangerouslySetInnerHTML={{\n                                  __html: safelyWrapCjk([props.name[currentLang], props.name[altLang]].filter(Boolean).join(' '))\n                                }}\n                              />\n                            </span>\n                            <br />\n                            <span\n                              style={{\n                                fontSize: sizes.textMedium,\n                                letterSpacing: '0px',\n                                fontFamily: fonts.body,\n                                textTransform: 'initial',\n                                fontWeight: 'bold',\n                                color: colors.bigText,\n                              }}\n                              dangerouslySetInnerHTML={{\n                                __html: safelyWrapCjk(props.jobTitle)\n                              }}\n                            />\n                          </td>\n                        </tr>\n                        <tr>\n                          <td\n                            style={{\n                              padding: '0.01px',\n                              lineHeight: 0,\n                            }}\n                          >\n                            <table\n                              cellPadding={0}\n                              cellSpacing={0}\n                              style={{\n                                borderCollapse: 'collapse',\n                              }}\n                            >\n                              <tbody>\n                                {props.phone.number && (\n                                  <tr>\n                                    <td\n                                      style={{\n                                        padding: '0.01px',\n                                      }}\n                                    >\n                                      <table\n                                        cellPadding={0}\n                                        cellSpacing={0}\n                                        style={{\n                                          borderCollapse: 'collapse',\n                                        }}\n                                      >\n                                        <tbody>\n                                          <tr>\n                                            <td\n                                              style={{\n                                                lineHeight: '0%',\n                                                padding: `0.01px 0.01px ${sizes.paddingSmall}px 0.01px`,\n                                              }}\n                                            >\n                                              <table\n                                                cellPadding={0}\n                                                cellSpacing={0}\n                                                style={{\n                                                  borderCollapse: 'collapse',\n                                                  lineHeight: '14px',\n                                                  fontSize: sizes.textSmall,\n                                                  fontFamily: fonts.body,\n                                                }}\n                                              >\n                                                <tbody>\n                                                  <tr>\n                                                    <td\n                                                      style={{\n                                                        padding: '0.01px',\n                                                        fontFamily: fonts.body,\n                                                        fontSize: sizes.textSmall,\n                                                        color: colors.smallText,\n                                                      }}\n                                                    >\n                                                      <HtmlEmailLink\n                                                        href={`tel:${props.phone.number}`}\n\n                                                      >\n                                                        {props.phone.number}\n                                                      </HtmlEmailLink>\n                                                      {\n                                                        phoneUsages.some(Boolean)\n                                                          ? tr.wordDelim + renderPlaceholders(\n                                                            tr.parens,\n                                                            { content: new Intl.ListFormat(tr.locale).format(phoneUsages) }\n                                                          ) : null\n                                                      }\n                                                    </td>\n                                                  </tr>\n                                                </tbody>\n                                              </table>\n                                            </td>\n                                            <td\n                                              style={{\n                                                lineHeight: '0%',\n                                                padding: `0.01px 0.01px ${sizes.paddingSmall}px 0.01px`,\n                                              }}\n                                            ></td>\n                                          </tr>\n                                        </tbody>\n                                      </table>\n                                    </td>\n                                  </tr>\n                                )}\n                                <tr>\n                                  <td\n                                    style={{\n                                      padding: '0.01px',\n                                    }}\n                                  >\n                                    <table\n                                      cellPadding={0}\n                                      cellSpacing={0}\n                                      style={{\n                                        borderCollapse: 'collapse',\n                                      }}\n                                    >\n                                      <tbody>\n                                        <tr>\n                                          <td\n                                            style={{\n                                              lineHeight: '0%',\n                                              padding: `0.01px 0.01px ${sizes.paddingSmall}px 0.01px`,\n                                            }}\n                                          >\n                                            <table\n                                              cellPadding={0}\n                                              cellSpacing={0}\n                                              style={{\n                                                borderCollapse: 'collapse',\n                                                lineHeight: '14px',\n                                                fontSize: sizes.textSmall,\n                                                fontFamily: fonts.body,\n                                              }}\n                                            >\n                                              <tbody>\n                                                <tr>\n                                                  <td\n                                                    style={{\n                                                      padding: '0.01px',\n                                                      colorScheme: 'light only',\n                                                      fontFamily: fonts.body,\n                                                      fontSize: sizes.textSmall,\n                                                    }}\n                                                  >\n                                                    <HtmlEmailLink href={`mailto:${props.email}`}>\n                                                      {props.email}\n                                                    </HtmlEmailLink>\n                                                  </td>\n                                                </tr>\n                                              </tbody>\n                                            </table>\n                                          </td>\n                                        </tr>\n                                      </tbody>\n                                    </table>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n            <table\n              cellPadding={0}\n              cellSpacing={0}\n              /* @ts-ignore */\n              border={0}\n              style={{ maxWidth: '600px', width: '100%' }}\n            >\n              <tbody>\n                <tr>\n                  <td style={{ lineHeight: 0 }} />\n                </tr>\n              </tbody>\n            </table>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  )\n}\n","export const waitForImageLoad = (img: HTMLImageElement) =>\n\tnew Promise((res, rej) => {\n\t\timg.onload = res\n\t\timg.onerror = rej\n\t})\n","import QRCode from 'qrcode'\nimport { waitForImageLoad } from '../dom/waitForImageLoad'\nimport { colors } from '../styles/constants'\n\ntype Rect = [x: number, y: number, width: number, height: number]\n\n// https://stackoverflow.com/a/7838871\n\nconst roundRect = (\n\tctx: CanvasRenderingContext2D,\n\tx: number,\n\ty: number,\n\tw: number,\n\th: number,\n\tr: number,\n) => {\n\tif (w < 2 * r) r = w / 2\n\tif (h < 2 * r) r = h / 2\n\n\tctx.beginPath()\n\tctx.moveTo(x + r, y)\n\tctx.arcTo(x + w, y, x + w, y + h, r)\n\tctx.arcTo(x + w, y + h, x, y + h, r)\n\tctx.arcTo(x, y + h, x, y, r)\n\tctx.arcTo(x, y, x + w, y, r)\n\tctx.closePath()\n}\n\nconst customRoundRect = (\n\tctx: CanvasRenderingContext2D,\n\touterSize: number,\n\tinnerSize: number,\n) => {\n\tconst rect: Rect = [\n\t\touterSize / 2 - innerSize / 2,\n\t\touterSize / 2 - innerSize / 2,\n\t\tinnerSize,\n\t\tinnerSize,\n\t]\n\n\troundRect(ctx, ...rect, innerSize / 8)\n}\n\ntype QrCodeInit = {\n\tsize: number\n\turl: string\n\tlogo: string\n}\n\nconst paintQrToCanvas = (\n\tcanvas: HTMLCanvasElement,\n\turl: string,\n\tsize: number,\n) =>\n\tnew Promise<void>((res, rej) => {\n\t\tQRCode.toCanvas(canvas, url, { margin: 2, width: size }, (err) => {\n\t\t\tif (err) {\n\t\t\t\trej(err)\n\t\t\t} else {\n\t\t\t\tres()\n\t\t\t}\n\t\t})\n\t})\n\nexport const getQrCode = async ({ size, url, logo }: QrCodeInit) => {\n\t// leads to much smoother rendering\n\tsize *= 3\n\n\tconst canvas = document.createElement('canvas')\n\n\tcanvas.width = size\n\tcanvas.height = size\n\n\tcanvas.style.cssText = `width: ${size}px; height: ${size}px`\n\n\tawait paintQrToCanvas(canvas, url, size)\n\n\tconst ctx = canvas.getContext('2d')!\n\n\tconst qrCodeSize = size\n\tconst outerLogoSize = size / 3.5\n\tconst innerLogoSize = size / 4\n\n\tcustomRoundRect(ctx, qrCodeSize, outerLogoSize)\n\tctx.fillStyle = '#ffffff'\n\tctx.fill()\n\n\tcustomRoundRect(ctx, qrCodeSize, innerLogoSize)\n\tctx.strokeStyle = colors.brand\n\tctx.lineWidth = 0.5\n\tctx.stroke()\n\n\tconst img = document.createElement('img')\n\timg.hidden = true\n\tdocument.body.appendChild(img)\n\timg.src = logo\n\n\ttry {\n\t\tawait waitForImageLoad(img)\n\n\t\tconst aspectRatio = img.width / img.height\n\n\t\tconst offset = qrCodeSize / 2 - innerLogoSize / 2\n\n\t\tctx.drawImage(\n\t\t\timg,\n\t\t\toffset + aspectRatio,\n\t\t\toffset,\n\t\t\tinnerLogoSize * aspectRatio,\n\t\t\tinnerLogoSize,\n\t\t)\n\t} catch (e) {\n\t\tconsole.error(e)\n\t}\n\n\timg.remove()\n\n\treturn canvas.toDataURL()\n}\n","import { FC, Fragment, useEffect, useState } from 'react'\nimport { colors, fonts, sizes } from '../styles/constants'\nimport { SignatureInfo } from '../types/signatureInfo'\nimport snarkdown from 'snarkdown'\nimport { i18n, localeAgnostic } from '../i18n/i18n'\nimport { SignatureTable } from './SignatureTable'\nimport { getQrCode } from '../utils/qrCode'\nimport { toAssetPath, safelyWrapCjk } from '../utils/formatters'\nimport { waitForImageLoad } from '../dom/waitForImageLoad'\nimport { pipe } from 'fp-ts/lib/function'\nimport { HtmlEmailLink } from './HtmlEmailLink'\n\ntype LoadingState =\n\t| {\n\t\t\tloading: false\n\t\t\tqrCodeDataUri: string\n\t  }\n\t| {\n\t\t\tloading: true\n\t\t\tqrCodeDataUri?: undefined\n\t  }\n\nconst initialLoadingState = {\n\tloading: true,\n\tqrCodeDataUri: undefined,\n} as LoadingState\n\nconst BareLink: FC<{ href: string }> = ({ href }) => (\n\t<HtmlEmailLink href={href}>\n\t\t{href.replace(/^https?:\\/\\//, '')}\n\t</HtmlEmailLink>\n)\n\nexport const RenderedSignature: FC<SignatureInfo & { qrCodeSize: number }> = (\n\tprops,\n) => {\n\tconst [data, setData] = useState(initialLoadingState)\n\n\tconst currentLang = props.lang\n\n\tconst tr = i18n[currentLang]\n\n\tuseEffect(() => {\n\t\tsetData(initialLoadingState)\n\t\tconsole.info('Loading QR code...')\n\n\t\tconst img = document.createElement('img')\n\t\timg.src = toAssetPath(tr.logoFull)\n\n\t\tPromise.all([\n\t\t\tgetQrCode({\n\t\t\t\tsize: props.qrCodeSize,\n\t\t\t\turl: tr.qrCodeUrl,\n\t\t\t\tlogo: toAssetPath(tr.logoCropped),\n\t\t\t}),\n\t\t\twaitForImageLoad(img),\n\t\t]).then(async ([qrCodeDataUri]) => {\n\t\t\tsetData({\n\t\t\t\tloading: false,\n\t\t\t\tqrCodeDataUri,\n\t\t\t})\n\t\t})\n\t}, [props.qrCodeSize, tr.logoCropped, tr.qrCodeUrl, tr.logoFull])\n\n\treturn data.loading ? (\n\t\t<>Loading...</>\n\t) : (\n\t\t<div style={{ fontFamily: fonts.body, color: colors.smallText }}>\n\t\t\t<div>\n\t\t\t\t<SignatureTable\n\t\t\t\t\t{...{\n\t\t\t\t\t\t...props,\n\t\t\t\t\t\tqrCodeSize: props.qrCodeSize,\n\t\t\t\t\t\tqrCodeDataUri: data.qrCodeDataUri,\n\t\t\t\t\t}}\n\t\t\t\t\ttranslations={tr}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<p\n\t\t\t\tstyle={{\n\t\t\t\t\tfontFamily: fonts.body,\n\t\t\t\t\tlineHeight: 1.6,\n\t\t\t\t\tmargin: `${sizes.paddingMedium}px 0.01px`,\n\t\t\t\t\tcolor: colors.smallText,\n\t\t\t\t\tfontSize: sizes.textSmall,\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<span\n\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t__html: safelyWrapCjk(\n\t\t\t\t\t\t\t[\n\t\t\t\t\t\t\t\tlocaleAgnostic.companyName,\n\t\t\t\t\t\t\t\tprops.officeAddress,\n\t\t\t\t\t\t\t].join(' | '),\n\t\t\t\t\t\t),\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t{' | '}\n\t\t\t\t<BareLink href={localeAgnostic.websiteUrl} />,\n\t\t\t</p>\n\t\t\t<p\n\t\t\t\tstyle={{\n\t\t\t\t\tfontFamily: fonts.body,\n\t\t\t\t\tlineHeight: 1.6,\n\t\t\t\t\tmargin: `${sizes.paddingMedium}px 0.01px`,\n\t\t\t\t\tcolor: colors.smallText,\n\t\t\t\t\tfontSize: sizes.textSmall,\n\t\t\t\t}}\n\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t__html: pipe(tr.privacyNotice, snarkdown, safelyWrapCjk),\n\t\t\t\t}}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n","type ToastStyle = 'success' | 'failure' | 'none'\n\ntype ToastOptions = {\n\tstyle: ToastStyle\n}\n\nconst toastStyleInfo: Record<ToastStyle, { icon: string }> = {\n\tsuccess: { icon: '✅' },\n\tfailure: { icon: '❌' },\n\tnone: { icon: '' },\n}\n\nexport const toast =\n\t(options: ToastOptions = { style: 'none' }) =>\n\t(msg: string) => {\n\t\tconst div = document.createElement('div')\n\t\tdiv.classList.add('toast')\n\t\tdiv.style.opacity = '0'\n\t\tdiv.style.transition = 'opacity 0.6s'\n\n\t\tdiv.textContent = [toastStyleInfo[options.style].icon, msg]\n\t\t\t.filter(Boolean)\n\t\t\t.join(' ')\n\n\t\tdocument.body.appendChild(div)\n\n\t\tsetTimeout(() => {\n\t\t\tdiv.style.opacity = '1'\n\t\t}, 10)\n\n\t\tsetTimeout(() => {\n\t\t\tdiv.style.transition = 'opacity 1s'\n\t\t}, 200)\n\n\t\tsetTimeout(() => {\n\t\t\tdiv.style.opacity = '0'\n\t\t}, 1200)\n\n\t\tsetTimeout(() => {\n\t\t\tdiv.remove()\n\t\t}, 2000)\n\t}\n","import { useState } from 'react'\n\nlet inc = 0\n\nconst generateHtmlId = (prefix = 'id') => `${prefix}-${++inc}`\n\nexport const useHtmlId = (prefix = 'id') => {\n\tconst [htmlId /* , setHtmlId */] = useState(generateHtmlId(prefix))\n\n\treturn htmlId\n}\n","import React, { FC, useCallback, useEffect, useRef } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { IsolatedStyles } from '../components/IsolatedStyles'\nimport { RenderedSignature } from '../components/RenderedSignature'\nimport { copyHtml } from '../dom/copyHtml'\nimport { useHtmlId } from '../hooks/useHtmlId'\nimport { localeAgnostic } from '../i18n/i18n'\nimport { sizes } from '../styles/constants'\nimport { SignatureInfo } from '../types/signatureInfo'\n\nconst init: SignatureInfo = {\n\tlang: 'en',\n\tname: {\n\t\ten: 'Jane Doe',\n\t\tzh: '杜娟',\n\t},\n\tjobTitle: 'Senior Data Wrangler',\n\tphone: { number: '+86 138 8888 8888', usedForWechat: false, usedForWhatsapp: false },\n\temail: 'jane.doe@clearlyloc.com',\n\tofficeAddress: localeAgnostic.addresses[0].value,\n}\n\nconst defaultValues: SignatureInfo =\n\tJSON.parse(localStorage.getItem('signatureCreator') ?? 'null') ?? init\n\nexport const SignatureCreatorForm: FC = () => {\n\tconst { register, handleSubmit, getValues, setValue } = useForm<SignatureInfo>({\n\t\tdefaultValues,\n\t})\n\n\tconst formRef = useRef<HTMLFormElement>(null)\n\n\tconst updateValidationMessages = useCallback(() => {\n\t\tfor (const validated of formRef.current?.querySelectorAll('.validated') ??\n\t\t\t[]) {\n\n\t\t\tconst validationEl = validated.querySelector('.validation-msg')\n\n\t\t\tif (validationEl) {\n\t\t\t\tconst msgs = [...validated.querySelectorAll('input')].map((input) => {\n\n\t\t\t\t\tlet { validationMessage, validity } = input\n\n\t\t\t\t\tif (\n\t\t\t\t\t\t!validity.valueMissing &&\n\t\t\t\t\t\tvalidity.patternMismatch\n\t\t\t\t\t) {\n\t\t\t\t\t\tvalidationMessage =\n\t\t\t\t\t\t\tinput.dataset.patternMsg ??\n\t\t\t\t\t\t\tvalidationMessage\n\t\t\t\t\t}\n\n\t\t\t\t\treturn validationMessage\n\t\t\t\t})\n\n\t\t\t\tconst validationMessage = msgs.find(Boolean) ?? ''\n\n\t\t\t\tvalidationEl.textContent = validationMessage\n\t\t\t}\n\n\t\t}\n\t}, [])\n\n\tconst addressDatalistId = useHtmlId(`address-list`)\n\n\tuseEffect(() => {\n\t\t// once on load\n\t\tupdateValidationMessages()\n\n\t\tfor (const el of formRef.current?.querySelectorAll('input') ?? []) {\n\t\t\t// if (el.list) continue\n\n\t\t\tlet o: any = init\n\n\t\t\tfor (const x of el.name.split('.')) {\n\t\t\t\to = o?.[x]\n\t\t\t}\n\n\t\t\tel.placeholder = String(o)\n\t\t}\n\n\t}, [updateValidationMessages])\n\n\tconst changeHandler = useCallback(\n\t\t(form: SignatureInfo) => {\n\t\t\tlocalStorage.setItem('signatureCreator', JSON.stringify(form))\n\n\t\t\tupdateValidationMessages()\n\t\t},\n\t\t[updateValidationMessages],\n\t)\n\n\tconst _values = getValues()\n\n\tconst values = _values?.name ? _values : defaultValues\n\n\tconst savedOfficeAddress = useRef(values.officeAddress)\n\n\tconst blankOutOfficeAddress = (\n\t\te:\n\t\t\t| React.FocusEvent<HTMLInputElement>\n\t\t\t| React.MouseEvent<HTMLInputElement>,\n\t) => {\n\t\tsavedOfficeAddress.current = values.officeAddress\n\t\te.currentTarget.placeholder = values.officeAddress\n\t\te.currentTarget.value = ''\n\t}\n\n\tconst revertOfficeAddress = (\n\t\te:\n\t\t\t| React.FocusEvent<HTMLInputElement>\n\t\t\t| React.KeyboardEvent<HTMLInputElement>,\n\t) => {\n\t\tif (!(e.nativeEvent instanceof KeyboardEvent) || e.nativeEvent.key === 'Escape') {\n\t\t\tconst reverted = e.currentTarget.value || savedOfficeAddress.current\n\n\t\t\tsetValue(e.currentTarget.name, reverted)\n\n\t\t\t// re-trigger validation\n\t\t\te.currentTarget.dispatchEvent(\n\t\t\t\tnew Event('input', {\n\t\t\t\t\tbubbles: true,\n\t\t\t\t\tcancelable: true,\n\t\t\t\t}),\n\t\t\t)\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<h1>Email signature</h1>\n\n\t\t\t<div className='row'>\n\t\t\t\t<form\n\t\t\t\t\tclassName='col'\n\t\t\t\t\tref={formRef}\n\t\t\t\t\tonInput={handleSubmit(changeHandler)}\n\t\t\t\t>\n\t\t\t\t\t<div className='magic-flex'>\n\t\t\t\t\t\t<div className='spaced validated'>\n\t\t\t\t\t\t\t<fieldset>\n\t\t\t\t\t\t\t\t<legend>Template language</legend>\n\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\tEnglish\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\ttype='radio'\n\t\t\t\t\t\t\t\t\t\tname='lang'\n\t\t\t\t\t\t\t\t\t\tvalue='en'\n\t\t\t\t\t\t\t\t\t\tref={register}\n\t\t\t\t\t\t\t\t\t\tdefaultChecked\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</label>{' '}\n\t\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\t\tChinese\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\ttype='radio'\n\t\t\t\t\t\t\t\t\t\tname='lang'\n\t\t\t\t\t\t\t\t\t\tvalue='zh'\n\t\t\t\t\t\t\t\t\t\tref={register}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t\t\t<div className='validation-msg'></div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='spaced validated col-first'>\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\tEnglish name\n\t\t\t\t\t\t\t\t<input required name='name.en' ref={register} />\n\t\t\t\t\t\t\t\t<div className='validation-msg'></div>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='spaced validated col-last'>\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\tChinese name (optional)\n\t\t\t\t\t\t\t\t<input name='name.zh' ref={register} />\n\t\t\t\t\t\t\t\t<div className='validation-msg'></div>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='spaced validated'>\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\tJob title\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\tname='jobTitle'\n\t\t\t\t\t\t\t\t\tref={register}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='validation-msg'></div>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='spaced validated'>\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\tWork email\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\t\tref={register}\n\t\t\t\t\t\t\t\t\tpattern='.+@clearlyloc.com'\n\t\t\t\t\t\t\t\t\tdata-pattern-msg='Must end with @clearlyloc.com'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='validation-msg'></div>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='spaced validated'>\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\tPhone number (including country code)\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='tel'\n\t\t\t\t\t\t\t\t\tname='phone.number'\n\t\t\t\t\t\t\t\t\tref={register}\n\t\t\t\t\t\t\t\t\tpattern='\\+[\\d\\p{P}\\p{Z}]+'\n\t\t\t\t\t\t\t\t\tdata-pattern-msg='Must start with “+” and a country code (e.g. +86 for China) and include only numbers, spaces, or punctuation'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</label>\n\n\t\t\t\t\t\t\t<div className='secondary-field'>\n\t\t\t\t\t\t\t\t<label className='inline-label'>\n\t\t\t\t\t\t\t\t\tWeChat?\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t\tname='phone.usedForWechat'\n\t\t\t\t\t\t\t\t\t\tref={register}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</label>\n\n\t\t\t\t\t\t\t\t<label className='inline-label'>\n\t\t\t\t\t\t\t\t\tWhatsApp?\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t\tname='phone.usedForWhatsapp'\n\t\t\t\t\t\t\t\t\t\tref={register}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='validation-msg'></div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className='spaced validated'>\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\tOffice address\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\tonClick={blankOutOfficeAddress}\n\t\t\t\t\t\t\t\t\tonFocus={blankOutOfficeAddress}\n\t\t\t\t\t\t\t\t\tonBlur={revertOfficeAddress}\n\t\t\t\t\t\t\t\t\tonKeyDown={revertOfficeAddress}\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\t\t\tname='officeAddress'\n\t\t\t\t\t\t\t\t\tref={register}\n\t\t\t\t\t\t\t\t\tlist={addressDatalistId}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className='validation-msg'></div>\n\t\t\t\t\t\t\t</label>\n\n\t\t\t\t\t\t\t<datalist id={addressDatalistId}>\n\t\t\t\t\t\t\t\t{localeAgnostic.addresses.map(\n\t\t\t\t\t\t\t\t\t(address, idx) => (\n\t\t\t\t\t\t\t\t\t\t<option key={idx} value={address.value}>\n\t\t\t\t\t\t\t\t\t\t\t{address.name}\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</datalist>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\n\t\t\t\t<div className='col'>\n\t\t\t\t\t<div className='spaced'>\n\t\t\t\t\t\t<output>\n\t\t\t\t\t\t\t<IsolatedStyles id='rendered-signature-container'>\n\t\t\t\t\t\t\t\t<RenderedSignature\n\t\t\t\t\t\t\t\t\t{...{\n\t\t\t\t\t\t\t\t\t\t...values,\n\t\t\t\t\t\t\t\t\t\tqrCodeSize: sizes.qrCode,\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</IsolatedStyles>\n\t\t\t\t\t\t</output>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\tcopyHtml(\n\t\t\t\t\t\t\t\tdocument\n\t\t\t\t\t\t\t\t\t.querySelector(\n\t\t\t\t\t\t\t\t\t\t'#rendered-signature-container',\n\t\t\t\t\t\t\t\t\t)!\n\t\t\t\t\t\t\t\t\t.shadowRoot?.querySelector('*')!,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclassName='button primary'\n\t\t\t\t\t\ttype='button'\n\t\t\t\t\t>\n\t\t\t\t\t\tCopy\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t)\n}\n","import { toast } from './toast'\n\nexport const copyHtml = (el: HTMLElement) => {\n\tconst selection = document.getSelection()\n\tconst range = document.createRange()\n\n\tselection?.empty()\n\tselection?.addRange(range)\n\n\trange.selectNode(el)\n\n\tconst succeeded = document.execCommand('copy')\n\n\tif (succeeded) {\n\t\ttoast({ style: 'success' })('Copied')\n\t} else {\n\t\ttoast({ style: 'failure' })('Failed to copy')\n\t}\n\n\tselection?.empty()\n}\n","import { useHistory } from 'react-router-dom'\nimport { pipe } from 'fp-ts/function'\nimport { slugify } from './formatters'\nimport { hashWithDefault } from './utils'\n\nexport const renderAnchors = (el: HTMLElement) => {\n\tconst slugs = hashWithDefault(0)\n\n\tfor (const heading of el.querySelectorAll(\n\t\t'h2, h3, h4, h5, h6, .anchored',\n\t)) {\n\t\tif (heading.textContent) {\n\t\t\tconst slug = slugify(heading.textContent) || 'heading'\n\n\t\t\tconst x = ++slugs[slug]\n\n\t\t\theading.id = [slug, x > 1 && x].filter(Boolean).join('-')\n\t\t\theading.classList.add('anchored')\n\t\t}\n\t}\n}\n\nexport const prependPublicUrlToRelativeLinks = (el: HTMLElement) => {\n\tfor (const link of el.querySelectorAll('a')) {\n\t\tconst href = link.getAttribute('href')\n\n\t\tif (href?.startsWith('/')) {\n\t\t\tlink.setAttribute('href', process.env.PUBLIC_URL + href)\n\t\t}\n\t}\n}\n\nexport const handleLinks = (\n\tel: HTMLElement,\n\thistory: ReturnType<typeof useHistory>,\n) => {\n\tel.addEventListener('click', (e) => {\n\t\tconst target = e.target as HTMLAnchorElement\n\t\tconst href = target.getAttribute('href')\n\n\t\tif (target.nodeName === 'A' && href) {\n\t\t\te.preventDefault()\n\n\t\t\tif (\n\t\t\t\thref.startsWith('http') &&\n\t\t\t\t!href.startsWith(window.location.origin)\n\t\t\t) {\n\t\t\t\twindow.open(href, '_blank', 'noopener noreferrer')\n\t\t\t} else {\n\t\t\t\thistory.push(href.slice(process.env.PUBLIC_URL.length))\n\t\t\t}\n\t\t} else if (target.classList.contains('anchored')) {\n\t\t\twindow.location.hash = target.id\n\t\t\ttarget.scrollIntoView(true)\n\t\t}\n\t})\n}\n\nexport const scrollHashIntoView = (el: HTMLElement) => {\n\tif (window.location.hash) {\n\t\tsetTimeout(() => {\n\t\t\tconst matchedEl = pipe(\n\t\t\t\twindow.location.hash.slice(1),\n\t\t\t\tdecodeURIComponent,\n\t\t\t\tCSS.escape,\n\t\t\t\t(id) => el.querySelector(`#${id}`),\n\t\t\t)\n\n\t\t\tmatchedEl?.scrollIntoView(true)\n\t\t\t// 100ms to counteract browser position retaining\n\t\t}, 100)\n\t}\n}\n\nexport const htmlToFragment = (html: string) => {\n\tconst temp = document.createElement('template')\n\ttemp.innerHTML = html\n\n\treturn temp.content\n}\n","export const hashWithDefault = <T>(defaultVal: T) =>\n\tnew Proxy(Object.create(null) as Record<string, T>, {\n\t\tget(target, key: string) {\n\t\t\treturn key in target ? target[key] : defaultVal\n\t\t},\n\t})\n","import { FC, useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport {\n\thandleLinks,\n\tprependPublicUrlToRelativeLinks,\n\trenderAnchors,\n\tscrollHashIntoView,\n} from '../utils/dom'\nimport { toContentPath } from '../utils/formatters'\nimport { onHtmlRender } from '../utils/react'\n\nexport const Instructions: FC = () => {\n\tconst [html, setHtml] = useState('')\n\n\tconst history = useHistory()\n\n\tuseEffect(() => {\n\t\tfetch(toContentPath('instructions.html')).then(async (res) => {\n\t\t\tconst html = await res.text()\n\n\t\t\tsetHtml(html)\n\t\t})\n\t}, [])\n\n\treturn (\n\t\t<div\n\t\t\tref={onHtmlRender((el) => {\n\t\t\t\t// setup\n\t\t\t\trenderAnchors(el)\n\t\t\t\tprependPublicUrlToRelativeLinks(el)\n\t\t\t\thandleLinks(el, history)\n\n\t\t\t\t// effects\n\t\t\t\tscrollHashIntoView(el)\n\t\t\t})}\n\t\t\tdangerouslySetInnerHTML={{ __html: html }}\n\t\t/>\n\t)\n}\n","export const onHtmlRender =\n\t(callback: (parentEl: HTMLElement) => void) =>\n\t(parentEl: HTMLElement | null) => {\n\t\tif (!parentEl) return\n\n\t\tconst observer = new MutationObserver((m) => {\n\t\t\tcallback(parentEl)\n\n\t\t\tobserver.disconnect()\n\t\t})\n\n\t\tobserver.observe(parentEl, { childList: true })\n\t}\n","import { FC } from 'react'\nimport { SignatureCreatorForm } from './pages/SignatureCreatorForm'\nimport { Switch, Route } from 'react-router-dom'\nimport { Instructions } from './pages/Instructions'\n\nexport const Routes: FC = () => {\n\treturn (\n\t\t<Switch>\n\t\t\t<Route exact path='/'>\n\t\t\t\t<SignatureCreatorForm />\n\t\t\t</Route>\n\t\t\t<Route path='/instructions'>\n\t\t\t\t<Instructions />\n\t\t\t</Route>\n\t\t</Switch>\n\t)\n}\n","import { FC, StrictMode } from 'react'\nimport { BrowserRouter as Router, NavLink } from 'react-router-dom'\nimport { Footer } from './components/Footer'\nimport { Routes } from './Routes'\n\nexport const App: FC = () => {\n\treturn (\n\t\t<>\n\t\t\t<StrictMode>\n\t\t\t\t<Router basename={process.env.PUBLIC_URL}>\n\t\t\t\t\t<nav className='tabs'>\n\t\t\t\t\t\t<NavLink exact activeClassName='active' to='/'>\n\t\t\t\t\t\t\tEmail signature\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t<NavLink activeClassName='active' to='/instructions'>\n\t\t\t\t\t\t\tInstructions\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t</nav>\n\t\t\t\t\t<main className='container'>\n\t\t\t\t\t\t<Routes />\n\t\t\t\t\t</main>\n\t\t\t\t\t<Footer />\n\t\t\t\t</Router>\n\t\t\t</StrictMode>\n\t\t</>\n\t)\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'chota/dist/chota.css' // can't use .min.css due to CRA transpiling bug\nimport './styles/index.css'\nimport { App } from './App'\nimport buildInfo from './buildInfo.json'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n)\n\nconsole.info(`Build ${buildInfo.hash}\\n${buildInfo.ts}`)\n"],"sourceRoot":""}