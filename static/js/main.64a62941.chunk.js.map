{"version":3,"sources":["components/IsolatedStyles.tsx","styles/constants.ts","utils/i18n.ts","components/QrCode.tsx","utils/formatters.ts","components/SignatureTable.tsx","dom/waitForImageLoad.ts","utils/qrCode.ts","components/RenderedSignature.tsx","dom/toast.ts","pages/SignatureCreatorForm.tsx","dom/copyHtml.ts","content/instructions.md","utils/dom.ts","utils/utils.ts","pages/Instructions.tsx","utils/react.ts","utils/snarkdown.ts","Routes.tsx","App.tsx","index.tsx","utils/path.ts"],"names":["IsolatedStyles","this","shadowRoot","node","attachShadow","mode","props","forceUpdate","children","rest","ref","createPortal","Component","colors","fonts","langs","i18n","en","followUs","companyInfo","privacyNotice","qrCodeAlt","qrCodeUrl","wechat","logoFull","logoCropped","zh","QrCode","alt","size","src","height","width","style","verticalAlign","borderRadius","display","toAssetPath","filename","process","SignatureTable","qrCodeSize","qrCodeDataUri","tr","translations","currentLang","lang","altLang","find","x","direction","borderCollapse","cellPadding","cellSpacing","fontFamily","lineHeight","color","padding","textAlign","dangerouslySetInnerHTML","__html","snarkdown","borderRight","fontSize","valign","textTransform","fontWeight","name","filter","Boolean","join","letterSpacing","jobTitle","href","phone","target","rel","whiteSpace","number","usedForWechat","colorScheme","email","border","maxWidth","waitForImageLoad","img","Promise","res","rej","onload","onerror","roundRect","ctx","y","w","h","r","beginPath","moveTo","arcTo","closePath","customRoundRect","outerSize","innerSize","paintQrToCanvas","canvas","url","QRCode","toCanvas","margin","err","getQrCode","a","logo","document","createElement","cssText","getContext","innerLogoSize","fillStyle","fill","strokeStyle","lineWidth","stroke","hidden","body","appendChild","aspectRatio","offset","drawImage","console","error","remove","toDataURL","initialLoadingState","loading","undefined","RenderedSignature","useState","data","setData","useEffect","info","all","then","toastStyleInfo","success","icon","failure","none","toast","options","msg","div","classList","add","opacity","transition","textContent","setTimeout","defaultValues","JSON","parse","localStorage","getItem","SignatureCreatorForm","useForm","register","handleSubmit","getValues","formRef","useRef","updateValidationMessages","useCallback","current","querySelectorAll","input","validationEl","nextElementSibling","contains","validationMessage","validity","valueMissing","patternMismatch","dataset","patternMsg","changeHandler","form","setItem","stringify","_values","values","onInput","className","required","type","pattern","value","defaultChecked","id","onClick","el","selection","getSelection","range","createRange","empty","addRange","selectNode","execCommand","copyHtml","querySelector","renderAnchors","defaultVal","slugs","Proxy","Object","create","get","key","heading","slug","toLowerCase","replace","regex","trim","Instructions","callback","html","setHtml","history","useHistory","fetch","instructionsMdUrl","cache","text","content","split","map","m","i","slice","l","some","ch","startsWith","test","_snarkdown","link","getAttribute","setAttribute","prependPublicUrlToRelativeLinks","addEventListener","e","nodeName","preventDefault","window","location","origin","open","push","length","hash","scrollIntoView","handleLinks","matchedEl","pipe","decodeURIComponent","CSS","escape","scrollHashIntoView","parentEl","observer","MutationObserver","disconnect","observe","childList","Routes","exact","path","App","basename","activeClassName","to","segments","flat","joinPath","ts","Date","Number","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.64a62941.chunk.js","sourcesContent":["// @ts-nocheck\n\n// modified from https://gist.github.com/robertgonzales/b1966af8d2a428a8299663b92fb2fe03\n\nimport { Component, HTMLProps } from 'react'\nimport { createPortal } from 'react-dom'\n\nexport class IsolatedStyles extends Component<HTMLProps & ShadowRootInit> {\n\tcomponentDidMount() {\n\t\tthis.shadowRoot = this.node.attachShadow({ mode: this.props.mode })\n\t\tthis.forceUpdate()\n\t}\n\n\trender() {\n\t\tconst { children, ...rest } = this.props\n\t\treturn (\n\t\t\t<div {...rest} ref={(node) => (this.node = node)}>\n\t\t\t\t{this.shadowRoot && createPortal(children, this.shadowRoot)}\n\t\t\t</div>\n\t\t)\n\t}\n}\n","export const colors = {\n\tbrand: '#e06534',\n\tbigText: '#646464',\n\tsmallText: '#212121',\n}\n\nexport const fonts = {\n\tbody: '\"Arial\", \"Microsoft YaHei\", \"微软雅黑\", \"微軟雅黑\", sans-serif',\n}\n","export const langs = ['en', 'zh'] as const\n\nexport type Lang = typeof langs[number]\n\nconst en = {\n\tfollowUs: 'Follow us',\n\tcompanyInfo:\n\t\t'Clearly Local 夏澄科技 | 北京市朝阳区万科时代中心三层 | 13718316761 | [www.clearlyloc.com](https://www.clearlyloc.com)',\n\tprivacyNotice:\n\t\t'The content of this email is confidential and intended for the recipient specified in message only. It is strictly forbidden to share any part of this message with any third party without written consent from the sender. If you received this message by mistake, please reply to inform the sender and then delete it.',\n\tqrCodeAlt: 'QR code to follow Clearly Local on WeChat',\n\tqrCodeUrl: 'http://weixin.qq.com/r/RjsCGjjExGW7rXx5925U',\n\twechat: '(WeChat)',\n\tlogoFull: 'logo.png',\n\tlogoCropped: 'logo-cropped.png',\n}\n\nexport type Translations = typeof en\n\nconst zh: Translations = {\n\tfollowUs: '关注我们',\n\tcompanyInfo:\n\t\t'Clearly Local 夏澄科技 | 北京市朝阳区万科时代中心三层 | 13718316761 | [www.clearlyloc.com](https://www.clearlyloc.com)',\n\tprivacyNotice:\n\t\t'该邮件的内容是机密的，仅供邮件中指定的收件人使用。未经发件人书面同意，严禁与任何第三方共享该消息的任何部分。若误收到该邮件，请回复通知发件人，然后将其删除。',\n\tqrCodeAlt: '请扫码关注我们的公众号',\n\tqrCodeUrl: 'http://weixin.qq.com/r/RjsCGjjExGW7rXx5925U',\n\twechat: '（微信）',\n\tlogoFull: 'logo.png',\n\tlogoCropped: 'logo-cropped.png',\n}\n\nexport const i18n: Record<Lang, Translations> = {\n\ten,\n\tzh,\n}\n","import { FC } from 'react'\n\ntype Props = {\n\talt: string\n\tsize: number\n\tsrc: string\n}\n\nexport const QrCode: FC<Props> = ({ alt, size, src }) => (\n\t<img\n\t\talt={alt}\n\t\tsrc={src}\n\t\theight={size}\n\t\twidth={size}\n\t\tstyle={{\n\t\t\twidth: `${size}px`,\n\t\t\tverticalAlign: 'initial',\n\t\t\tborderRadius: 0,\n\t\t\tdisplay: 'block',\n\t\t\theight: `${size}px`,\n\t\t}}\n\t/>\n)\n","import { regex } from 'fancy-regex'\n\nexport const slugify = (str: string) =>\n\tstr\n\t\t.toLowerCase()\n\t\t.replace(\n\t\t\tregex('gu')`[\n\t\t\t\t^\n\t\t\t\t\\p{Letter}\n\t\t\t\t\\p{Mark}\n\t\t\t\t\\p{Number}\n\t\t\t]+`,\n\t\t\t' ',\n\t\t)\n\t\t.trim()\n\t\t.replace(/\\s+/g, '-')\n\nexport const filenameify = (date: Date) =>\n\tdate.toISOString().replace(/:/g, '_').slice(0, 19) + 'Z'\n\nexport const wrapEmailHtml = (html: string) => `<!DOCTYPE html>\n<html lang=\"en\">\n    <head>\n        <meta http-equiv=Content-Type content=\"text/html; charset=utf-8\">\n        <title>Email signature</title>\n    </head>\n    <body>\n\t\t${html}\n    </body>\n</html>`\n\nexport const toAssetPath = (filename: string) =>\n\t`${process.env.PUBLIC_URL}/assets/${filename}`\n","import { FC } from 'react'\nimport { colors, fonts } from '../styles/constants'\nimport { SignatureInfo } from '../types/signatureInfo'\nimport snarkdown from 'snarkdown'\nimport { QrCode } from './QrCode'\nimport { Translations, langs } from '../utils/i18n'\nimport { toAssetPath } from '../utils/formatters'\n\ntype Props = {\n  translations: Translations\n  qrCodeSize: number\n  qrCodeDataUri: string\n} & SignatureInfo\n\nexport const SignatureTable: FC<Props> = ({ qrCodeSize, qrCodeDataUri, translations: tr, ...props }) => {\n  const currentLang = props.lang\n  const altLang = langs.find((x) => x !== currentLang)!\n\n  return (\n    <table style={{ direction: 'ltr', borderCollapse: 'collapse' }}>\n      <tbody>\n        <tr>\n          <td>\n            <table\n              cellPadding={0}\n              cellSpacing={0}\n              style={{\n                borderCollapse: 'collapse',\n                fontFamily: fonts.body,\n                lineHeight: '1.15',\n                color: '#000',\n              }}\n            >\n              <tbody>\n                <tr>\n                  <td\n                    style={{\n                      verticalAlign: 'top',\n                      padding: '0.01px 14px 0.01px 0.01px',\n                    }}\n                  >\n                    <table\n                      cellPadding={0}\n                      cellSpacing={0}\n                      style={{\n                        borderCollapse: 'collapse',\n                        width: '65px',\n                      }}\n                    >\n                      <tbody>\n                        <tr>\n                          <td\n                            style={{\n                              padding: '0.01px',\n                            }}\n                          >\n                            <QrCode alt={tr.qrCodeAlt} src={qrCodeDataUri} size={qrCodeSize} />\n                          </td>\n                        </tr>\n                        <tr>\n                          <td\n                            style={{\n                              borderCollapse: 'collapse',\n                              fontFamily: fonts.body,\n                              lineHeight: '1.15',\n                              color: colors.brand,\n                              padding: '6px 0.01px 0.01px 0.01px',\n                              //   padding: '0.01px',\n                              textAlign: 'center',\n                            }}\n                            dangerouslySetInnerHTML={{\n                              __html: snarkdown(tr.followUs),\n                            }}\n                          />\n                        </tr>\n                      </tbody>\n                    </table>\n                  </td>\n                  <td\n                    height={1}\n                    width={0}\n                    style={{\n                      width: '0px',\n                      padding: '0.01px',\n                      borderRight: `2px solid ${colors.brand}`,\n                      height: '1px',\n                      fontSize: '1pt',\n                    }}\n                  >\n                    &nbsp;\n                  </td>\n                  <td\n                    style={{\n                      padding: '0.01px 0.01px 0.01px 14px',\n                      verticalAlign: 'top',\n                    }}\n                    valign='top'\n                  >\n                    <table\n                      cellPadding={0}\n                      cellSpacing={0}\n                      style={{\n                        borderCollapse: 'collapse',\n                      }}\n                    >\n                      <tbody>\n                        <tr>\n                          <td\n                            style={{\n                              lineHeight: '1.2',\n                              padding: '0.01px 0.01px 10px 0.01px',\n                            }}\n                          >\n                            <span\n                              style={{\n                                fontFamily: fonts.body,\n                                textTransform: 'initial',\n                                fontWeight: 'bold',\n                              }}\n                            >\n                              <span\n                                style={{\n                                  color: colors.bigText,\n                                  fontSize: '15.6px',\n                                }}\n                              >\n                                <img width={150} src={toAssetPath(tr.logoFull)} alt='' />\n                              </span>\n                            </span>\n                          </td>\n                        </tr>\n\n                        <tr>\n                          <td\n                            style={{\n                              lineHeight: '1.2',\n                              padding: '0.01px 0.01px 12px 0.01px',\n                            }}\n                          >\n                            <span\n                              style={{\n                                fontFamily: fonts.body,\n                                textTransform: 'initial',\n                                fontWeight: 'bold',\n                              }}\n                            >\n                              <span\n                                style={{\n                                  color: '#646464',\n                                  fontSize: '15.6px',\n                                }}\n                              >\n                                {[\n                                  props.name[currentLang],\n                                  props.name[altLang],\n                                ].filter(Boolean).join(' ')}\n                              </span>\n                            </span>\n                            <br />\n                            <span\n                              style={{\n                                fontSize: '13.2px',\n                                letterSpacing: '0px',\n                                fontFamily: fonts.body,\n                                textTransform: 'initial',\n                                fontWeight: 'bold',\n                                color: '#646464',\n                              }}\n                            >\n                              {props.jobTitle}\n                            </span>\n                          </td>\n                        </tr>\n                        <tr>\n                          <td\n                            style={{\n                              padding: '0.01px',\n                              lineHeight: 0,\n                            }}\n                          >\n                            <table\n                              cellPadding={0}\n                              cellSpacing={0}\n                              style={{\n                                borderCollapse: 'collapse',\n                              }}\n                            >\n                              <tbody>\n                                <tr>\n                                  <td\n                                    style={{\n                                      padding: '0.01px',\n                                    }}\n                                  >\n                                    <table\n                                      cellPadding={0}\n                                      cellSpacing={0}\n                                      style={{\n                                        borderCollapse: 'collapse',\n                                      }}\n                                    >\n                                      <tbody>\n                                        <tr>\n                                          <td\n                                            style={{\n                                              lineHeight: '0%',\n                                              padding: '0.01px 0.01px 6px 0.01px',\n                                            }}\n                                          >\n                                            <table\n                                              cellPadding={0}\n                                              cellSpacing={0}\n                                              style={{\n                                                borderCollapse: 'collapse',\n                                                lineHeight: '14px',\n                                                fontSize: '12px',\n                                                fontFamily: fonts.body,\n                                              }}\n                                            >\n                                              <tbody>\n                                                <tr>\n                                                  <td\n                                                    style={{\n                                                      padding: '0.01px',\n                                                      fontFamily: fonts.body,\n                                                      fontSize: '12px',\n                                                    }}\n                                                  >\n                                                    <a\n                                                      href={`tel:${props.phone}`}\n                                                      target='_blank'\n                                                      rel='noreferrer'\n                                                      style={{\n                                                        color: '#212121',\n                                                        fontSize: '12px',\n                                                        fontFamily: fonts.body,\n                                                      }}\n                                                    >\n                                                      <span\n                                                        style={{\n                                                          lineHeight: '1.2',\n                                                          fontFamily: fonts.body,\n                                                          whiteSpace: 'nowrap',\n                                                          fontSize: '12px',\n                                                        }}\n                                                      >\n                                                        {props.phone.number}\n                                                      </span>\n                                                    </a>\n                                                    {props.phone.usedForWechat ? ` ${tr.wechat}` : null}\n                                                  </td>\n                                                </tr>\n                                              </tbody>\n                                            </table>\n                                          </td>\n                                          <td\n                                            style={{\n                                              lineHeight: '0%',\n                                              padding: '0.01px 0.01px 6px 0.01px',\n                                            }}\n                                          ></td>\n                                        </tr>\n                                      </tbody>\n                                    </table>\n                                  </td>\n                                </tr>\n                                <tr>\n                                  <td\n                                    style={{\n                                      padding: '0.01px',\n                                    }}\n                                  >\n                                    <table\n                                      cellPadding={0}\n                                      cellSpacing={0}\n                                      style={{\n                                        borderCollapse: 'collapse',\n                                      }}\n                                    >\n                                      <tbody>\n                                        <tr>\n                                          <td\n                                            style={{\n                                              lineHeight: '0%',\n                                              padding: '0.01px 0.01px 6px 0.01px',\n                                            }}\n                                          >\n                                            <table\n                                              cellPadding={0}\n                                              cellSpacing={0}\n                                              style={{\n                                                borderCollapse: 'collapse',\n                                                lineHeight: '14px',\n                                                fontSize: '12px',\n                                                fontFamily: fonts.body,\n                                              }}\n                                            >\n                                              <tbody>\n                                                <tr>\n                                                  <td\n                                                    style={{\n                                                      padding: '0.01px',\n                                                      colorScheme: 'light only',\n                                                      fontFamily: fonts.body,\n                                                      fontSize: '12px',\n                                                    }}\n                                                  >\n                                                    <a\n                                                      href={`mailto:${props.email}`}\n                                                      target='_blank'\n                                                      rel='noreferrer'\n                                                      style={{\n                                                        color: '#212121',\n                                                        fontSize: '12px',\n                                                        fontFamily: fonts.body,\n                                                      }}\n                                                    >\n                                                      <span\n                                                        style={{\n                                                          lineHeight: '1.2',\n                                                          fontFamily: fonts.body,\n                                                          whiteSpace: 'nowrap',\n                                                          fontSize: '12px',\n                                                        }}\n                                                      >\n                                                        {props.email}\n                                                      </span>\n                                                    </a>\n                                                  </td>\n                                                </tr>\n                                              </tbody>\n                                            </table>\n                                          </td>\n                                        </tr>\n                                      </tbody>\n                                    </table>\n                                  </td>\n                                </tr>\n                              </tbody>\n                            </table>\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n            <table\n              cellPadding={0}\n              cellSpacing={0}\n              /* @ts-ignore */\n              border={0}\n              style={{ maxWidth: '600px', width: '100%' }}\n            >\n              <tbody>\n                <tr>\n                  <td style={{ lineHeight: 0 }} />\n                </tr>\n              </tbody>\n            </table>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  )\n}\n","export const waitForImageLoad = (img: HTMLImageElement) =>\n\tnew Promise((res, rej) => {\n\t\timg.onload = res\n\t\timg.onerror = rej\n\t})\n","import QRCode from 'qrcode'\nimport { waitForImageLoad } from '../dom/waitForImageLoad'\nimport { colors } from '../styles/constants'\n\ntype Rect = [x: number, y: number, width: number, height: number]\n\n// https://stackoverflow.com/a/7838871\n\nconst roundRect = (\n\tctx: CanvasRenderingContext2D,\n\tx: number,\n\ty: number,\n\tw: number,\n\th: number,\n\tr: number,\n) => {\n\tif (w < 2 * r) r = w / 2\n\tif (h < 2 * r) r = h / 2\n\n\tctx.beginPath()\n\tctx.moveTo(x + r, y)\n\tctx.arcTo(x + w, y, x + w, y + h, r)\n\tctx.arcTo(x + w, y + h, x, y + h, r)\n\tctx.arcTo(x, y + h, x, y, r)\n\tctx.arcTo(x, y, x + w, y, r)\n\tctx.closePath()\n}\n\nconst customRoundRect = (\n\tctx: CanvasRenderingContext2D,\n\touterSize: number,\n\tinnerSize: number,\n) => {\n\tconst rect: Rect = [\n\t\touterSize / 2 - innerSize / 2,\n\t\touterSize / 2 - innerSize / 2,\n\t\tinnerSize,\n\t\tinnerSize,\n\t]\n\n\troundRect(ctx, ...rect, innerSize / 8)\n}\n\ntype QrCodeInit = {\n\tsize: number\n\turl: string\n\tlogo: string\n}\n\nconst paintQrToCanvas = (\n\tcanvas: HTMLCanvasElement,\n\turl: string,\n\tsize: number,\n) =>\n\tnew Promise<void>((res, rej) => {\n\t\tQRCode.toCanvas(canvas, url, { margin: 2, width: size }, (err) => {\n\t\t\tif (err) {\n\t\t\t\trej(err)\n\t\t\t} else {\n\t\t\t\tres()\n\t\t\t}\n\t\t})\n\t})\n\nexport const getQrCode = async ({ size, url, logo }: QrCodeInit) => {\n\tconst canvas = document.createElement('canvas')\n\n\tcanvas.width = size\n\tcanvas.height = size\n\n\tcanvas.style.cssText = `width: ${size}px; height: ${size}px`\n\n\tawait paintQrToCanvas(canvas, url, size)\n\n\tconst ctx = canvas.getContext('2d')!\n\n\tconst qrCodeSize = size\n\tconst outerLogoSize = size / 3.5\n\tconst innerLogoSize = size / 4\n\n\tcustomRoundRect(ctx, qrCodeSize, outerLogoSize)\n\tctx.fillStyle = '#ffffff'\n\tctx.fill()\n\n\tcustomRoundRect(ctx, qrCodeSize, innerLogoSize)\n\tctx.strokeStyle = colors.brand\n\tctx.lineWidth = 0.5\n\tctx.stroke()\n\n\tconst img = document.createElement('img')\n\timg.hidden = true\n\tdocument.body.appendChild(img)\n\timg.src = logo\n\n\ttry {\n\t\tawait waitForImageLoad(img)\n\n\t\tconst aspectRatio = img.width / img.height\n\n\t\tconst offset = qrCodeSize / 2 - innerLogoSize / 2\n\n\t\tctx.drawImage(\n\t\t\timg,\n\t\t\toffset + aspectRatio,\n\t\t\toffset,\n\t\t\tinnerLogoSize * aspectRatio,\n\t\t\tinnerLogoSize,\n\t\t)\n\t} catch (e) {\n\t\tconsole.error(e)\n\t}\n\n\timg.remove()\n\n\treturn canvas.toDataURL()\n}\n","import { FC, useEffect, useState } from 'react'\nimport { colors, fonts } from '../styles/constants'\nimport { SignatureInfo } from '../types/signatureInfo'\nimport snarkdown from 'snarkdown'\nimport { i18n } from '../utils/i18n'\nimport { SignatureTable } from './SignatureTable'\nimport { getQrCode } from '../utils/qrCode'\nimport { toAssetPath } from '../utils/formatters'\nimport { waitForImageLoad } from '../dom/waitForImageLoad'\n\ntype LoadingState =\n\t| {\n\t\t\tloading: false\n\t\t\tqrCodeDataUri: string\n\t  }\n\t| {\n\t\t\tloading: true\n\t\t\tqrCodeDataUri?: undefined\n\t  }\n\nconst initialLoadingState = {\n\tloading: true,\n\tqrCodeDataUri: undefined,\n} as LoadingState\n\nexport const RenderedSignature: FC<SignatureInfo & { qrCodeSize: number }> = (props) => {\n\tconst [data, setData] = useState(initialLoadingState)\n\n\tconst currentLang = props.lang\n\n\tconst tr = i18n[currentLang]\n\n\tuseEffect(() => {\n\t\tsetData(initialLoadingState)\n\t\tconsole.info('Loading QR code...')\n\n\t\tconst img = document.createElement('img')\n\t\timg.src = toAssetPath(tr.logoFull)\n\n\t\tPromise.all([\n\t\t\tgetQrCode({\n\t\t\t\tsize: props.qrCodeSize,\n\t\t\t\turl: tr.qrCodeUrl,\n\t\t\t\tlogo: toAssetPath(tr.logoCropped),\n\t\t\t}),\n\t\t\twaitForImageLoad(img),\n\t\t]).then(async ([qrCodeDataUri]) => {\n\t\t\tsetData({\n\t\t\t\tloading: false,\n\t\t\t\tqrCodeDataUri,\n\t\t\t})\n\t\t})\n\t}, [props.qrCodeSize, tr.logoCropped, tr.qrCodeUrl, tr.logoFull])\n\n\treturn data.loading ? (\n\t\t<>Loading...</>\n\t) : (\n\t\t<div>\n\t\t\t<div style={{ width: 600 }}>\n\t\t\t\t<SignatureTable\n\t\t\t\t\t{...{\n\t\t\t\t\t\t...props,\n\t\t\t\t\t\tqrCodeSize: props.qrCodeSize,\n\t\t\t\t\t\tqrCodeDataUri: data.qrCodeDataUri,\n\t\t\t\t\t}}\n\t\t\t\t\ttranslations={tr}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<p\n\t\t\t\tstyle={{\n\t\t\t\t\tfontFamily: fonts.body,\n\t\t\t\t\tlineHeight: 1.6,\n\t\t\t\t\tmargin: '12px 0.01px 0.01px 0.01px',\n\t\t\t\t\tcolor: colors.smallText,\n\t\t\t\t\tfontSize: 12,\n\t\t\t\t}}\n\t\t\t\tdangerouslySetInnerHTML={{ __html: snarkdown(tr.companyInfo) }}\n\t\t\t/>\n\t\t\t<p\n\t\t\t\tstyle={{\n\t\t\t\t\tfontFamily: fonts.body,\n\t\t\t\t\tlineHeight: 1.6,\n\t\t\t\t\tmargin: '12px 0.01px 0.01px 0.01px',\n\t\t\t\t\tcolor: colors.smallText,\n\t\t\t\t\tfontSize: 12,\n\t\t\t\t}}\n\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t__html: snarkdown(tr.privacyNotice),\n\t\t\t\t}}\n\t\t\t/>\n\t\t</div>\n\t)\n}\n","type ToastStyle = 'success' | 'failure' | 'none'\n\ntype ToastOptions = {\n\tstyle: ToastStyle\n}\n\nconst toastStyleInfo: Record<ToastStyle, { icon: string }> = {\n\tsuccess: { icon: '✅' },\n\tfailure: { icon: '❌' },\n\tnone: { icon: '' },\n}\n\nexport const toast =\n\t(options: ToastOptions = { style: 'none' }) =>\n\t(msg: string) => {\n\t\tconst div = document.createElement('div')\n\t\tdiv.classList.add('toast')\n\t\tdiv.style.opacity = '0'\n\t\tdiv.style.transition = 'opacity 0.6s'\n\n\t\tdiv.textContent = [toastStyleInfo[options.style].icon, msg]\n\t\t\t.filter(Boolean)\n\t\t\t.join(' ')\n\n\t\tdocument.body.appendChild(div)\n\n\t\tsetTimeout(() => {\n\t\t\tdiv.style.opacity = '1'\n\t\t}, 10)\n\n\t\tsetTimeout(() => {\n\t\t\tdiv.style.transition = 'opacity 1s'\n\t\t}, 200)\n\n\t\tsetTimeout(() => {\n\t\t\tdiv.style.opacity = '0'\n\t\t}, 1200)\n\n\t\tsetTimeout(() => {\n\t\t\tdiv.remove()\n\t\t}, 2000)\n\t}\n","import { FC, useCallback, useEffect, useRef } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { IsolatedStyles } from '../components/IsolatedStyles'\nimport { RenderedSignature } from '../components/RenderedSignature'\nimport { copyHtml } from '../dom/copyHtml'\nimport { SignatureInfo } from '../types/signatureInfo'\n\nconst qrCodeSize = 120\n\nconst init: SignatureInfo = {\n\tlang: 'en',\n\tname: {\n\t\ten: 'Jane Doe',\n\t\tzh: '杜娟',\n\t},\n\tjobTitle: 'Senior Data Wrangler',\n\tphone: { number: '+86 138 8888 8888', usedForWechat: false },\n\temail: 'jane.doe@clearlyloc.com',\n}\n\nconst defaultValues: SignatureInfo =\n\tJSON.parse(localStorage.getItem('signatureCreator') ?? 'null') ?? init\n\nexport const SignatureCreatorForm: FC = () => {\n\tconst { register, handleSubmit, getValues } = useForm<SignatureInfo>({\n\t\tdefaultValues,\n\t})\n\n\tconst formRef = useRef<HTMLFormElement>(null)\n\n\tconst updateValidationMessages = useCallback(() => {\n\t\tfor (const input of formRef.current?.querySelectorAll('input') ?? []) {\n\t\t\tconst validationEl = input.nextElementSibling\n\n\t\t\tif (\n\t\t\t\tvalidationEl &&\n\t\t\t\tvalidationEl.classList.contains('validation-msg')\n\t\t\t) {\n\t\t\t\tlet { validationMessage, validity } = input\n\n\t\t\t\tif (!validity.valueMissing && validity.patternMismatch) {\n\t\t\t\t\tvalidationMessage =\n\t\t\t\t\t\tinput.dataset.patternMsg ?? validationMessage\n\t\t\t\t}\n\n\t\t\t\tvalidationEl.textContent = validationMessage\n\t\t\t}\n\t\t}\n\t}, [])\n\n\tuseEffect(() => {\n\t\t// once on load\n\t\tupdateValidationMessages()\n\t}, [updateValidationMessages])\n\n\tconst changeHandler = useCallback(\n\t\t(form: SignatureInfo) => {\n\t\t\tlocalStorage.setItem('signatureCreator', JSON.stringify(form))\n\n\t\t\tupdateValidationMessages()\n\t\t},\n\t\t[updateValidationMessages],\n\t)\n\n\tconst _values = getValues()\n\n\tconst values = _values?.name ? _values : defaultValues\n\n\treturn (\n\t\t<>\n\t\t\t<h1>Email signature</h1>\n\n\t\t\t<form ref={formRef} onInput={handleSubmit(changeHandler)}>\n\t\t\t\t<div className='magic-flex'>\n\t\t\t\t\t<div className='spaced col-first'>\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\tEnglish name\n\t\t\t\t\t\t\t<input required name='name.en' ref={register} />\n\t\t\t\t\t\t\t<div className='validation-msg'></div>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='spaced col-last'>\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\tChinese name (optional)\n\t\t\t\t\t\t\t<input name='name.zh' ref={register} />\n\t\t\t\t\t\t\t<div className='validation-msg'></div>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='spaced col-first'>\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\tJob title\n\t\t\t\t\t\t\t<input required name='jobTitle' ref={register} />\n\t\t\t\t\t\t\t<div className='validation-msg'></div>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='spaced col-last'>\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\tWork email\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\t\t\tname='email'\n\t\t\t\t\t\t\t\tref={register}\n\t\t\t\t\t\t\t\tpattern='.+@clearlyloc.com'\n\t\t\t\t\t\t\t\tdata-pattern-msg='Must end with @clearlyloc.com'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className='validation-msg'></div>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='spaced'>\n\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\tPhone number (including country code)\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\ttype='tel'\n\t\t\t\t\t\t\t\tname='phone.number'\n\t\t\t\t\t\t\t\tref={register}\n\t\t\t\t\t\t\t\tpattern='\\+[\\d ]+'\n\t\t\t\t\t\t\t\tdata-pattern-msg='Must start with a country code in the format +XX (e.g. +86 for China) and contain only numbers and spaces'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<div className='validation-msg'></div>\n\t\t\t\t\t\t</label>\n\n\t\t\t\t\t\t<label className='secondary-field'>\n\t\t\t\t\t\t\tUsed for WeChat?\n\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\tname='phone.usedForWechat'\n\t\t\t\t\t\t\t\tref={register}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</label>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='spaced'>\n\t\t\t\t\t\t<fieldset>\n\t\t\t\t\t\t\t<legend>Language</legend>\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\tEnglish\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\ttype='radio'\n\t\t\t\t\t\t\t\t\tname='lang'\n\t\t\t\t\t\t\t\t\tvalue='en'\n\t\t\t\t\t\t\t\t\tref={register}\n\t\t\t\t\t\t\t\t\tdefaultChecked\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</label>{' '}\n\t\t\t\t\t\t\t<label>\n\t\t\t\t\t\t\t\tChinese\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\ttype='radio'\n\t\t\t\t\t\t\t\t\tname='lang'\n\t\t\t\t\t\t\t\t\tvalue='zh'\n\t\t\t\t\t\t\t\t\tref={register}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</form>\n\n\t\t\t<div className='spaced'>\n\t\t\t\t<hr />\n\t\t\t</div>\n\n\t\t\t<output>\n\t\t\t\t<IsolatedStyles id='rendered-signature-container' mode='open'>\n\t\t\t\t\t<RenderedSignature {...{ ...values, qrCodeSize }} />\n\t\t\t\t</IsolatedStyles>\n\t\t\t</output>\n\t\t\t<div className='spaced'>\n\t\t\t\t<hr />\n\t\t\t</div>\n\t\t\t<button\n\t\t\t\tonClick={() =>\n\t\t\t\t\tcopyHtml(\n\t\t\t\t\t\tdocument\n\t\t\t\t\t\t\t.querySelector('#rendered-signature-container')!\n\t\t\t\t\t\t\t.shadowRoot?.querySelector('*')!,\n\t\t\t\t\t)\n\t\t\t\t}\n\t\t\t\tclassName='button primary'\n\t\t\t\ttype='button'\n\t\t\t>\n\t\t\t\tCopy\n\t\t\t</button>\n\t\t</>\n\t)\n}\n","import { toast } from './toast'\n\nexport const copyHtml = (el: HTMLElement) => {\n\tconst selection = document.getSelection()\n\tconst range = document.createRange()\n\n\tselection?.empty()\n\tselection?.addRange(range)\n\n\trange.selectNode(el)\n\n\tconst succeeded = document.execCommand('copy')\n\n\tif (succeeded) {\n\t\ttoast({ style: 'success' })('Copied')\n\t} else {\n\t\ttoast({ style: 'failure' })('Failed to copy')\n\t}\n\n\tselection?.empty()\n}\n","export default __webpack_public_path__ + \"static/media/instructions.bc7796a5.md\";","import { useHistory } from 'react-router-dom'\nimport { pipe } from 'fp-ts/function'\nimport { slugify } from './formatters'\nimport { hashWithDefault } from './utils'\n\nexport const renderAnchors = (el: HTMLElement) => {\n\tconst slugs = hashWithDefault(0)\n\n\tfor (const heading of el.querySelectorAll(\n\t\t'h2, h3, h4, h5, h6, .anchored',\n\t)) {\n\t\tif (heading.textContent) {\n\t\t\tconst slug = slugify(heading.textContent) || 'heading'\n\n\t\t\tconst x = ++slugs[slug]\n\n\t\t\theading.id = [slug, x > 1 && x].filter(Boolean).join('-')\n\t\t\theading.classList.add('anchored')\n\t\t}\n\t}\n}\n\nexport const prependPublicUrlToRelativeLinks = (el: HTMLElement) => {\n\tfor (const link of el.querySelectorAll('a')) {\n\t\tconst href = link.getAttribute('href')\n\n\t\tif (href?.startsWith('/')) {\n\t\t\tlink.setAttribute('href', process.env.PUBLIC_URL + href)\n\t\t}\n\t}\n}\n\nexport const handleLinks = (\n\tel: HTMLElement,\n\thistory: ReturnType<typeof useHistory>,\n) => {\n\tel.addEventListener('click', (e) => {\n\t\tconst target = e.target as HTMLAnchorElement\n\t\tconst href = target.getAttribute('href')\n\n\t\tif (target.nodeName === 'A' && href) {\n\t\t\te.preventDefault()\n\n\t\t\tif (\n\t\t\t\thref.startsWith('http') &&\n\t\t\t\t!href.startsWith(window.location.origin)\n\t\t\t) {\n\t\t\t\twindow.open(href, '_blank', 'noopener noreferrer')\n\t\t\t} else {\n\t\t\t\thistory.push(href.slice(process.env.PUBLIC_URL.length))\n\t\t\t}\n\t\t} else if (target.classList.contains('anchored')) {\n\t\t\twindow.location.hash = target.id\n\t\t\ttarget.scrollIntoView(true)\n\t\t}\n\t})\n}\n\nexport const scrollHashIntoView = (el: HTMLElement) => {\n\tif (window.location.hash) {\n\t\tsetTimeout(() => {\n\t\t\tconst matchedEl = pipe(\n\t\t\t\twindow.location.hash.slice(1),\n\t\t\t\tdecodeURIComponent,\n\t\t\t\tCSS.escape,\n\t\t\t\t(id) => el.querySelector(`#${id}`),\n\t\t\t)\n\n\t\t\tmatchedEl?.scrollIntoView(true)\n\t\t\t// 100ms to counteract browser position retaining\n\t\t}, 100)\n\t}\n}\n\nexport const htmlToFragment = (html: string) => {\n\tconst temp = document.createElement('template')\n\ttemp.innerHTML = html\n\n\treturn temp.content\n}\n","export const hashWithDefault = <T>(defaultVal: T) =>\n\tnew Proxy(Object.create(null) as Record<string, T>, {\n\t\tget(target, key: string) {\n\t\t\treturn key in target ? target[key] : defaultVal\n\t\t},\n\t})\n","import { FC, useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport instructionsMdUrl from '../content/instructions.md'\nimport {\n\thandleLinks,\n\tprependPublicUrlToRelativeLinks,\n\trenderAnchors,\n\tscrollHashIntoView,\n} from '../utils/dom'\nimport { onHtmlRender } from '../utils/react'\nimport { snarkdown } from '../utils/snarkdown'\n\nexport const Instructions: FC = () => {\n\tconst [html, setHtml] = useState('')\n\n\tconst history = useHistory()\n\n\tuseEffect(() => {\n\t\tfetch(instructionsMdUrl, { cache: 'force-cache' }).then(async (res) => {\n\t\t\tconst content = await res.text()\n\n\t\t\tconst html = snarkdown(content)\n\n\t\t\tsetHtml(html)\n\t\t})\n\t}, [])\n\n\treturn (\n\t\t<div\n\t\t\tref={onHtmlRender((el) => {\n\t\t\t\t// setup\n\t\t\t\trenderAnchors(el)\n\t\t\t\tprependPublicUrlToRelativeLinks(el)\n\t\t\t\thandleLinks(el, history)\n\n\t\t\t\t// effects\n\t\t\t\tscrollHashIntoView(el)\n\t\t\t})}\n\t\t\tdangerouslySetInnerHTML={{ __html: html }}\n\t\t/>\n\t)\n}\n","export const onHtmlRender =\n\t(callback: (parentEl: HTMLElement) => void) =>\n\t(parentEl: HTMLElement | null) => {\n\t\tif (!parentEl) return\n\n\t\tconst observer = new MutationObserver((m) => {\n\t\t\tcallback(parentEl)\n\n\t\t\tobserver.disconnect()\n\t\t})\n\n\t\tobserver.observe(parentEl, { childList: true })\n\t}\n","import { default as _snarkdown } from 'snarkdown'\n\nexport const snarkdown = (md: string) => {\n\tconst html = md\n\t\t.split(/((?<=^|\\n)```\\r?\\n[\\s\\S]*?\\r?\\n```)/)\n\t\t.map((m, i) =>\n\t\t\ti % 2\n\t\t\t\t? `<pre><code>${m\n\t\t\t\t\t\t.split(/\\r?\\n/)\n\t\t\t\t\t\t.slice(1, -1)\n\t\t\t\t\t\t.join('\\n')}</pre></code>`\n\t\t\t\t: m\n\t\t\t\t\t\t.split(/(?:\\r?\\n){2,}/)\n\t\t\t\t\t\t.map((l) => {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\t[' ', '\\t', '#', '-', '*', '`', '~'].some(\n\t\t\t\t\t\t\t\t\t(ch) => l.startsWith(ch),\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treturn /^\\s*-{3,}\\s*$/.test(l)\n\t\t\t\t\t\t\t\t\t? `<hr>`\n\t\t\t\t\t\t\t\t\t: _snarkdown(l)\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn `<p>${_snarkdown(l)}</p>`\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.join(''),\n\t\t)\n\t\t.join('')\n\t\t.replace(/<p><\\/p>/g, '')\n\n\treturn html\n}\n","import { FC } from 'react'\nimport { SignatureCreatorForm } from './pages/SignatureCreatorForm'\nimport { Switch, Route } from 'react-router-dom'\nimport { Instructions } from './pages/Instructions'\n\nexport const Routes: FC = () => {\n\treturn (\n\t\t<Switch>\n\t\t\t<Route exact path='/'>\n\t\t\t\t<SignatureCreatorForm />\n\t\t\t</Route>\n\t\t\t<Route path='/instructions'>\n\t\t\t\t<Instructions />\n\t\t\t</Route>\n\t\t</Switch>\n\t)\n}\n","import { FC, StrictMode } from 'react'\nimport { BrowserRouter as Router, NavLink } from 'react-router-dom'\nimport { Routes } from './Routes'\n\nexport const App: FC = () => {\n\treturn (\n\t\t<>\n\t\t\t<StrictMode>\n\t\t\t\t<Router basename={process.env.PUBLIC_URL}>\n\t\t\t\t\t<nav className='tabs'>\n\t\t\t\t\t\t<NavLink exact activeClassName='active' to='/'>\n\t\t\t\t\t\t\tEmail signature\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t<NavLink activeClassName='active' to='/instructions'>\n\t\t\t\t\t\t\tInstructions\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t</nav>\n\t\t\t\t\t<main className='container'>\n\t\t\t\t\t\t<Routes />\n\t\t\t\t\t</main>\n\t\t\t\t</Router>\n\t\t\t</StrictMode>\n\t\t</>\n\t)\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'chota/dist/chota.css' // can't use .min.css due to CRA transpiling bug\nimport './styles/index.css'\nimport { App } from './App'\nimport { joinPath } from './utils/path'\n\nfetch(joinPath('build-timestamp.txt')).then(async (res) => {\n\tconst ts = await res.text()\n\n\tconsole.info('App last built', new Date(Number(ts)))\n})\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root'),\n)\n","import { join } from 'path'\n\nexport const joinPath = (...segments: string[]) =>\n\tjoin(process.env.PUBLIC_URL, ...segments.flat())\n"],"sourceRoot":""}